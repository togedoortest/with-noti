{"version":3,"sources":["views/Candidate/ManageJob/JobTable/index.js","views/Candidate/ManageJob/PaginationItems/index.js","views/Candidate/ManageJob/index.js"],"names":["ManageJob","props","console","log","JobTitle","className","icon","faCalendar","createdAt","style","height","width","borderRadius","src","serviceImage","alt","to","pathname","_id","faEye","faEdit","faTrashAlt","onClick","jobID","confirmAlert","title","message","buttons","label","axios","delete","then","res","servicesAfterDelete","data","catch","err","PaginationItems","Pagination","aria-label","PaginationItem","disabled","PaginationLink","previous","href","active","next","useState","services","setServices","user","store","getState","auth","useEffect","a","get","response","sort","b","fetchData","setServicesAfterDelete","Table","hover","filter","service","userID","id","map","i","JobTable"],"mappings":"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","file":"static/js/41.4ae505a6.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faEye,\n  faCalendar,\n  faTrashAlt,\n} from '@fortawesome/free-regular-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\nimport axios from 'axios';\n\nconst ManageJob = (props) => {\n  console.log(props.JobTitle)\n\n  const submit = (jobID) => {\n    confirmAlert({\n      title: 'Confirm to delete project',\n      message: 'Are you sure to delete the project ?.',\n      buttons: [\n        {\n\n          // label: <a href=\"/candidate/manage\" style={{ color: 'white' }}> Yes </a>,\n          label: 'Yes',\n          onClick: () => {\n            axios.delete(`https://www.togedoortestgo.site/graphql/services/${jobID}`)\n              .then((res) => {\n                props.servicesAfterDelete(res.data)\n                console.log(res.data);\n              }).catch((err) => {\n                console.log(err);\n              })\n          }\n        },\n        {\n          label: 'No',\n          // onClick: () => alert('Click No')\n        }\n      ]\n    })\n  };\n\n\n\n\n  // const { jobTitle, date, application, status, color } = props;\n  return (\n    <>\n      <tr>\n        <td className=\"pb-3 pt-5 pt-4 pr-0  pl-5 \">\n          <h6>\n            <p >{props.JobTitle}</p>\n          </h6>\n          <p className=\"text-muted font-14\">\n            <FontAwesomeIcon icon={faCalendar} className=\"mr-2 text-primary\" />\n            Date posted : {props.createdAt}\n          </p>\n        </td>\n        <td className=\"pb-3 pt-5 pt-4 pr-0  pl-5 d-none d-md-table-cell\">\n          <img\n            style={{ height: \"70px\", width: \"120px\", borderRadius: \"5px\" }}\n            src={`https://www.togedoortestgo.site/graphql/${props.serviceImage}`}\n            alt='Cardcap'\n            className='image-fluid'\n          />\n        </td>\n        <td className=\"pb-3 pt-5  d-none d-sm-table-cell \">\n          {/* <p className={` ${color} `}>{status}</p> */}\n        </td>\n        <td className=\"pb-3 pt-5  pr-0  pl-4 pr-2\">\n          <ul className=\"d-inline-flex pb-3 pt-5  pr-0  pl-4 pr-2 \">\n            <li className=\"mr-3\">\n              <Link to={{\n                pathname: `/job/${props._id}`,\n              }}>\n                <FontAwesomeIcon className=\"font-14\" icon={faEye} />\n              </Link>\n            </li>\n            <li className=\"mr-3\">\n              <Link to={{\n                pathname: `/candidate/edit/${props._id}`,\n              }}>\n                <FontAwesomeIcon className=\"font-14\" icon={faEdit} />\n              </Link>\n            </li>\n            <li className=\"\">\n\n              <FontAwesomeIcon className=\"font-14\" icon={faTrashAlt}\n                onClick={() => { submit(props._id) }}\n              />\n\n            </li>\n          </ul>\n        </td>\n      </tr>\n    </>\n  );\n};\n\nexport default ManageJob;\n","import React from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst PaginationItems = () => {\n  return (\n    <Pagination aria-label=\"Page navigation example justify-content-center\">\n      <PaginationItem disabled className=\"mr-2\">\n        <PaginationLink className=\"text-dark\" previous href=\"#\" />\n      </PaginationItem>\n      <PaginationItem active className=\"mr-2\">\n        <PaginationLink className=\"bg-primary border-primary\" href=\"#\">\n          1\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem className=\"mr-2\">\n        <PaginationLink className=\"text-dark\" href=\"#\">\n          2\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem className=\"mr-2\">\n        <PaginationLink className=\"text-dark\" href=\"#\">\n          3\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem className=\"mr-2\">\n        <PaginationLink className=\"text-dark\" href=\"#\">\n          ...\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem className=\"mr-2\">\n        <PaginationLink className=\"text-dark\" href=\"#\">\n          6\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem className=\"mr-2\">\n        <PaginationLink className=\"text-dark\" next href=\"#\" />\n      </PaginationItem>\n    </Pagination>\n  );\n};\n\nexport default PaginationItems;\n","import React, { useState, useEffect } from \"react\";\nimport { Table } from 'reactstrap';\nimport JobTable from './JobTable';\nimport store from '../../../store'\nimport axios from \"axios\";\nimport PaginationItems from './PaginationItems';\nimport { log } from 'async';\n\nconst ManageJob = () => {\n  const [services, setServices] = useState([]);\n  const user = store.getState().auth.user\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await axios.get(`https://www.togedoortestgo.site/graphql/services`);\n      setServices(response.data.sort((a, b) => (a.createdAt < b.createdAt) ? 1 : -1));\n    }\n\n    fetchData();\n  }, []);\n\n  const setServicesAfterDelete = (services) => {\n    setServices(services)\n  }\n\n  return (\n    <>\n      {services &&\n        user ? (\n        <Table hover className=\"manage-job-table\">\n          <thead className=\"bg-primary text-white\">\n            <tr>\n              <th className=\"py-4 pl-5\">Project title</th>\n              <th className=\"d-none d-md-table-cell   py-4 pr-6 text-center\">\n                Image\n              </th>\n              <th className=\" d-none d-sm-table-cell py-4 p-0 text-center \">\n\n              </th>\n              <th className=\"py-4 pl-5 text-center\">Action</th>\n            </tr>\n          </thead>\n          <tbody className=\" border mb-30\">\n            {services &&\n              user &&\n              services\n                .filter((service) => service.userID === user.id)\n                .map((service, i) => <JobTable key={i} {...service} servicesAfterDelete={setServicesAfterDelete} />)\n            }\n          </tbody>\n        </Table>\n\n      ) : <div>Loading...</div>}\n      <PaginationItems />\n    </>\n  );\n};\n\nexport default ManageJob;\n"],"sourceRoot":""}