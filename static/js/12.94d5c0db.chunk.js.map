{"version":3,"sources":["components/Modal/index.js","views/Candidate/ProfileSetting/BasicInformation/BasicInfoModal/index.js","views/Candidate/ProfileSetting/AboutUs/AboutModal/index.js","views/Employer/Company/IntroVideo/VideoModal/index.js","views/Employer/Company/ImageGallery/GalleryModal/index.js","components/DashboardCard/index.js","components/Information/index.js","components/ProfileEditForm/index.js","components/SocialLinkForm/index.js","components/SecurityForm/index.js","../node_modules/react-bootstrap/esm/Container.js","components/BrowseImage/index.js","views/Candidate/ProfileSetting/BasicInformation/index.js","views/Candidate/ProfileSetting/AboutUs/index.js","views/Candidate/ProfileSetting/index.js"],"names":["DashboardModal","props","modal","toggle","children","to","title","Modal","isOpen","className","ModalHeader","tag","icon","faEdit","Form","ModalBody","ModalFooter","Button","color","onClick","BasicInfoModal","handleChanged","e","persist","setUserBasicInfo","target","value","name","FormGroup","row","Label","for","sm","Col","Input","type","id","placeholder","onChange","AboutModal","console","log","setUserAboutMe","VideoModal","GalleryModal","DashboardCard","action","modalName","useState","setModal","aboutMeFunc","eTargetValue","eTargetName","setAboutMe","Card","CardHeader","CardTitle","size","CardBody","Information","description","ProfileEditForm","history","user","setUserEdit","initialValues","username","firstName","email","lastName","password","confirmPassword","Yup","shape","required","min","when","schema","oneOf","onSubmit","fields","setStatus","setSubmitting","accountService","update","then","alertService","success","keepAfterRouteChange","push","catch","error","role","errors","touched","isSubmitting","form","md","component","SocialNetwork","SecurityForm","_excluded","Container","React","forwardRef","_ref","ref","bsPrefix","fluid","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","suffix","createElement","_extends","classNames","displayName","defaultProps","BrowseImage","image","text","firstColmn","secondColmn","textPosition","Media","Row","left","href","object","src","alt","style","width","body","heading","BasicInformation","data","faEnvelope","data2","faCalendar","jobTitle","faMapMarker","location","lg","ListGroup","map","item","i","AboutUs","aboutMe","rows","connect","state","isAuthenticated","auth","updateUser","setUser","token","localStorage","getItem","config2","headers","useEffect","axios","get","res","editUser","picture","firstColumn","secondColumn","check"],"mappings":"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","file":"static/js/12.94d5c0db.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-regular-svg-icons';\nimport { Link } from 'react-router-dom';\n\nconst DashboardModal = (props) => {\n    const { modal, toggle, children, to, title } = props;\n\n\n\n    return (\n        <Modal isOpen={modal} toggle={toggle} className='mt-13' >\n            <ModalHeader tag='h6' toggle={toggle} className='border-0'>\n                <FontAwesomeIcon className='text-primary mr-1' icon={faEdit} />\n                <span className='  text-dark'>{title}</span>\n            </ModalHeader>\n            <Form>\n                {children && <ModalBody>{children}</ModalBody>}\n                <ModalFooter className='border-0 justify-content-start'>\n                    <Button color='primary' onClick={toggle} >\n                        Save Updates\n                    </Button>{' '}\n                    <Link to={to || '#'} className='text-primary' onClick={toggle}>\n                        cancel\n                    </Link>{' '}\n                </ModalFooter>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default DashboardModal;\n","import React from 'react';\nimport { Col, FormGroup, Label, Input } from 'reactstrap';\nconst BasicInfoModal = (props) => {\n\n\n  const handleChanged = (e) => {\n    e.persist();\n    props.setUserBasicInfo(e.target.value, e.target.name)\n  };\n\n\n  return (\n    <>\n      <FormGroup row>\n        <Label for=\"exampetext\" sm={3}>\n          First name :\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"firstName\"\n            id=\"exampleEmail\"\n            placeholder=\"Please insert your first name\"\n            onChange={handleChanged}\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"exampetext\" sm={3}>\n          Last name :\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"lastName\"\n            id=\"exampleEmail\"\n            placeholder=\"Please insert your last name\"\n            onChange={handleChanged}\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"exampetext\" sm={3}>\n          Job title :\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"jobTitle\"\n            id=\"exampleEmail\"\n            placeholder=\"Please insert your job title\"\n            onChange={handleChanged}\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"exampleEmail\" sm={3}>\n          Location :\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"location\"\n            id=\"exampleEmail\"\n            onChange={handleChanged}\n            placeholder=\"Please insert your location\"\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n        </Col>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default BasicInfoModal;\n","import React from 'react';\nimport { Col, FormGroup, Label, Input } from 'reactstrap';\nconst AboutModal = (props) => {\n  console.log(props)\n\n  const handleChanged = (e) => {\n    e.persist();\n    props.setUserAboutMe(e.target.value, e.target.name)\n  };\n\n  return (\n    <FormGroup row>\n      <Label for=\"exampleText\" sm={3}>\n        Write Yourself:\n      </Label>\n      <Col sm={9}>\n        <Input\n          type=\"textarea\"\n          name=\"aboutMe\"\n          id=\"exampleText\"\n          placeholder=\"Write YourSelf\"\n          className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          onChange={handleChanged}\n        />\n      </Col>\n    </FormGroup>\n  );\n};\n\nexport default AboutModal;\n","import React from 'react';\nimport { Col, FormGroup, Label, Input } from 'reactstrap';\nconst VideoModal = () => {\n  return (\n    <FormGroup row>\n      <Label for=\"exampleEmail\" sm={3}>\n        Video Link :\n      </Label>\n      <Col sm={9}>\n        <Input\n          type=\"text\"\n          name=\"videolink\"\n          id=\"exampleEmail\"\n          placeholder=\"Youtube Url Or Browse Link\"\n          className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n        />\n      </Col>\n    </FormGroup>\n  );\n};\n\nexport default VideoModal;\n","import React from 'react';\nimport { Col, FormGroup, Label, Input } from 'reactstrap';\nconst GalleryModal = () => {\n  return (\n    <>\n      <FormGroup row>\n        <Label for=\"exampleText\" sm={3}>\n          Gallery 01:\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"Title\"\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n          <Input\n            type=\"text\"\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"Link\"\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n          <Label for=\"exampleFile\" className=\"text-muted m-3\">\n            Image\n          </Label>\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"exampleText\" sm={3}>\n          Gallery 02:\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"Title\"\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n          <Input\n            type=\"text\"\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"Link\"\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n          <Label for=\"exampleFile\" className=\"text-muted m-3\">\n            Image\n          </Label>\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n        </Col>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default GalleryModal;\n","import React, { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardBody, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-regular-svg-icons';\n\nimport DashboardModal from '../Modal';\nimport BasicInfoModal from 'src/views/Candidate/ProfileSetting/BasicInformation/BasicInfoModal';\nimport AboutModal from 'src/views/Candidate/ProfileSetting/AboutUs/AboutModal';\nimport VideoModal from 'src/views/Employer/Company/IntroVideo/VideoModal';\nimport GalleryModal from 'src/views/Employer/Company/ImageGallery/GalleryModal';\n\nconst DashboardCard = (props) => {\n  const { title, action, children, className, modalName } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  const [aboutMe, setAboutMe] = useState(\"Write Yourself:\");\n  const aboutMeFunc = (eTargetValue, eTargetName) => {\n    props.setAboutMe(eTargetValue, eTargetName)\n  };\n\n\n  return (\n    <Card className={`${className && className}`}>\n      <CardHeader\n        tag=\"h6\"\n        className=\"d-flex justify-content-between align-items-center bg-primary\"\n      >\n        <CardTitle className=\"m-0 text-white p-2\">\n          {title}\n        </CardTitle>\n        {action && (\n          <Button\n            size=\"sm\"\n            onClick={toggle}\n            className=\"btn-icon text-white\"\n            color=\"link\"\n          >\n            {modalName === 'basic' && (\n              <DashboardModal\n                modal={modal}\n                toggle={toggle}\n                title=\"basic information\"\n\n              >\n                <BasicInfoModal setUserBasicInfo={aboutMeFunc} />\n              </DashboardModal>\n            )}\n            {modalName === 'about' && (\n              <DashboardModal modal={modal} toggle={toggle} title=\"About us\" >\n                <AboutModal setUserAboutMe={aboutMeFunc} />\n              </DashboardModal>\n            )}\n            {modalName === 'videoLink' && (\n              <DashboardModal modal={modal} toggle={toggle} title=\"Intro video\">\n                <VideoModal />\n              </DashboardModal>\n            )}\n            {modalName === 'gallery' && (\n              <DashboardModal modal={modal} toggle={toggle} title=\"Intro video\">\n                <GalleryModal />\n              </DashboardModal>\n            )}\n\n            <FontAwesomeIcon icon={faEdit} />\n          </Button>\n        )}\n      </CardHeader>\n      {children && <CardBody >{children}</CardBody>}\n    </Card>\n  );\n};\n\nexport default DashboardCard;\n","import React from 'react';\nimport { ListGroupItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Information = (props) => {\n  const { icon, title, description, className } = props;\n  return (\n    <ListGroupItem className={`d-flex p-1 ${className}`}>\n      <FontAwesomeIcon className=\"mt-2 text-primary\" icon={icon} />\n      <div className=\"ml-4 pb-4\">\n        <p className=\"m-0 d-block\">{title}</p>\n        <span className=\"m-0 d-block text-muted\">{description}</span>\n      </div>\n    </ListGroupItem>\n  );\n};\n\nexport default Information;\n","import React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { accountService } from '../../views/services/account.service';\nimport { alertService } from '../../views/services/alert.service';\nimport { Col, Row, FormGroup, Label, Input, CustomInput, Button } from 'reactstrap';\n\nconst ProfileEditForm = ({ history, user, setUserEdit }) => {\n\n    const onChange = (e) => {\n        e.persist();\n        setUserEdit(e.target.value, e.target.name);\n    };\n    const initialValues = {\n        username: user.firstName,\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        password: '',\n        confirmPassword: '',\n    };\n\n\n    const [isDeleting, setIsDeleting] = useState(false);\n    function onDelete() {\n        setIsDeleting(true);\n        accountService.delete(user.id).then(() => alertService.success('Account deleted successfully'));\n    }\n\n    const validationSchema = Yup.object().shape({\n        firstName: Yup.string().required('First Name is required'),\n        lastName: Yup.string().required('Last Name is required'),\n        email: Yup.string().email('Email is invalid').required('Email is required'),\n        password: Yup.string().min(6, 'Password must be at least 6 characters'),\n        confirmPassword: Yup.string()\n            .when('password', (password, schema) => {\n                if (password) return schema.required('Confirm Password is required');\n            })\n            .oneOf([Yup.ref('password')], 'Passwords must match'),\n    });\n\n    function onSubmit(fields, { setStatus, setSubmitting }) {\n        console.log(setStatus());\n        setStatus();\n        accountService\n            .update(user.id, fields)\n            .then(() => {\n                alertService.success('Update successful', { keepAfterRouteChange: true });\n                history.push('.');\n                console.log('then');\n            })\n            .catch((error) => {\n                setSubmitting(false);\n                alertService.error(error);\n                console.log('catch: ');\n            });\n    }\n\n    return user.role === \"user from Google\" ? (\n        <Formik onSubmit={onSubmit}>\n            {({ errors, touched, isSubmitting }) => (\n                <Form>\n                    <Row form className='p-5'>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for='email'>Email</Label>\n                                <Input\n                                    name='email'\n                                    value={user.email}\n                                    type='text'\n                                    className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')}\n\n                                />\n                                <ErrorMessage name='email' component='div' className='invalid-feedback' />\n                            </FormGroup>\n                        </Col>\n\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for='firstName'>First name</Label>\n                                <Field\n                                    name='firstName'\n                                    type='text'\n                                    placeholder={user.firstName}\n                                    className={\n                                        'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')\n                                    }\n                                    onChange={onChange}\n                                />\n                                <ErrorMessage name='firstName' component='div' className='invalid-feedback' />\n                            </FormGroup>\n                        </Col>\n\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for='lastName'>Last name</Label>\n                                <Field\n                                    name='lastName'\n                                    placeholder={user.lastName}\n                                    type='text'\n                                    className={\n                                        'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')\n                                    }\n                                    onChange={onChange}\n                                />\n                                <ErrorMessage name='lastName' component='div' className='invalid-feedback' />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                </Form>\n            )}\n        </Formik>\n\n    ) : (\n        <Formik initialValues={initialValues} onSubmit={onSubmit}>\n            {({ errors, touched, isSubmitting }) => (\n                <Form>\n                    <Row form className='p-5'>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for='email'>Email</Label>\n                                <Field\n                                    name='email'\n                                    placeholder={user.email}\n                                    type='text'\n                                    className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')}\n                                />\n                                <ErrorMessage name='email' component='div' className='invalid-feedback' />\n                            </FormGroup>\n                        </Col>\n\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for='firstName'>First name</Label>\n                                <Field\n                                    name='firstName'\n                                    type='text'\n                                    placeholder={user.firstName}\n                                    className={\n                                        'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')\n                                    }\n                                />\n                                <ErrorMessage name='firstName' component='div' className='invalid-feedback' />\n                            </FormGroup>\n                        </Col>\n\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for='lastName'>Last name</Label>\n                                <Field\n                                    name='lastName'\n                                    placeholder={user.lastName}\n                                    type='text'\n                                    className={\n                                        'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')\n                                    }\n                                    onChange={onChange}\n                                />\n                                <ErrorMessage name='lastName' component='div' className='invalid-feedback' />\n                            </FormGroup>\n                        </Col>\n                        <Col md={12}>\n                            <FormGroup>\n                                <Label className='pt-3'>\n                                    Change Password &nbsp;\n                                    <i>(Leave blank to keep the same password)</i>\n                                </Label>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for='examplePassword'>New password</Label>\n                                <Input type='password' name='password' placeholder='*************' />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for='examplePassword'>Repeat new password</Label>\n                                <Input type='password' name='password' placeholder='*************' />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    {/* ------------------------------------------------------------ */}\n                    <Button type='submit' color='primary' className='outline-hover--effect'>\n                        Save changes\n                    </Button>\n                </Form>\n            )}\n        </Formik>\n\n    )\n}\n\n\nexport default ProfileEditForm;\n","import React from 'react';\nimport { Col, Row, FormGroup, Label, Input, Button } from 'reactstrap';\n\n// Own component\nimport DashboardCard from 'src/components/DashboardCard';\n\nconst SocialNetwork = () => {\n  return (\n    <DashboardCard title=\"Social network\" className=\"mt-5 mb-5\">\n      <Row form>\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"examplePassword\">Google</Label>\n            <Input\n              type=\"text\"\n              name=\"google\"\n              placeholder=\"https//:google.com/webstrot\"\n            />\n          </FormGroup>\n        </Col>\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Facebook</Label>\n            <Input\n              type=\"text\"\n              name=\"facebook\"\n              placeholder=\"https//:facebook.com/webstrot\"\n            />\n          </FormGroup>\n        </Col>\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"examplePassword\">Twitter</Label>\n            <Input\n              type=\"text\"\n              name=\"twitter\"\n              id=\"twitter\"\n              placeholder=\"https//:twitter/webstrot\"\n            />\n          </FormGroup>\n        </Col>\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Linkedin</Label>\n            <Input\n              type=\"text\"\n              name=\"linkedin\"\n              placeholder=\"https//:linkedin.com/webstrot\"\n            />\n          </FormGroup>\n        </Col>\n      </Row>\n      <Button color=\"primary\" className=\"outline-hover--effect\">\n        Add More\n      </Button>\n    </DashboardCard>\n  );\n};\n\nexport default SocialNetwork;\n","import React from 'react';\nimport { Col, Row, FormGroup, Label, Input } from 'reactstrap';\nimport DashboardCard from 'src/components/DashboardCard';\n\nconst SecurityForm = () => {\n  return (\n    <DashboardCard title=\"Password &Security\" className=\"mt-5 mb-5\">\n      <Row form>\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"examplePassword\">Verification Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"webstrot@example.com\"\n            />\n          </FormGroup>\n        </Col>\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"examplePassword\">Current Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"*************\"\n            />\n          </FormGroup>\n        </Col>\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"examplePassword\">New Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"*************\"\n            />\n          </FormGroup>\n        </Col>\n        <Col md={6}>\n          <FormGroup>\n            <Label for=\"examplePassword\">Repet New Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"*************\"\n            />\n          </FormGroup>\n        </Col>\n      </Row>\n    </DashboardCard>\n  );\n};\n\nexport default SecurityForm;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"fluid\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Media, Input, Row } from \"reactstrap\";\n\nconst BrowseImage = (props) => {\n  const { image, text, firstColmn, secondColmn, textPosition } = props;\n  return (\n    <Container>\n      <Media className='p-5 border-bottom overflow-hidden'>\n        <Row>\n          <div className={`${firstColmn}`}>\n            <Media left href='#'>\n              <Media object src={image} alt='profile picture' style={{ width: \"100px\" }} />\n            </Media>\n          </div>\n          <div className={`${secondColmn}`}>\n            <Media body className={`ml-md-5 ${textPosition}`}>\n              <Media tag='p' heading>\n                {text}\n              </Media>\n              <Input type='file' name='file' className='w-50 d-inline-block' />\n            </Media>\n          </div>\n        </Row>\n      </Media>\n    </Container>\n  );\n};\n\nexport default BrowseImage;\n","import React from 'react';\nimport { ListGroup, Row, Col } from 'reactstrap';\nimport {\n  faCalendar,\n  faEnvelope,\n  faMapMarker,\n  faGlobeAsia,\n  faInfoCircle,\n} from '@fortawesome/free-solid-svg-icons';\n// Own Component\nimport DashboardCard from 'src/components/DashboardCard';\nimport Information from 'src/components/Information';\n\n\nconst BasicInformation = (props) => {\n\n  const data = [\n    {\n      icon: faEnvelope,\n      title: 'First name:',\n      description: props.user.firstName,\n    },\n    {\n      icon: faEnvelope,\n      title: 'Last name:',\n      description: props.user.lastName,\n    },\n    {\n      icon: faEnvelope,\n      title: 'Email:',\n      description: props.user.email,\n    },\n\n  ];\n  const data2 = [\n    {\n      icon: faCalendar,\n      title: 'Job title:',\n      description: props.user.jobTitle,\n    },\n    {\n      icon: faMapMarker,\n      title: 'Location:',\n      description: props.user.location,\n    },\n  ];\n\n\n  const setAboutMe = (eTargetValue, eTargetName) => {\n    props.setAboutMe(eTargetValue, eTargetName);\n  };\n\n  return (\n    <DashboardCard modalName=\"basic\" setAboutMe={setAboutMe} title=\"Basic information\" action className=\"mb-5\">\n      <Row>\n        <Col lg={6}>\n          <ListGroup>\n            {data && data.map((item, i) => <Information key={i} {...item} />)}\n          </ListGroup>\n        </Col>\n        <Col lg={6}>\n          <ListGroup>\n            {data2 && data2.map((item, i) => <Information key={i} {...item} />)}\n          </ListGroup>\n        </Col>\n      </Row>\n    </DashboardCard>\n  );\n};\n\nexport default BasicInformation;\n","import React, { useState } from 'react';\nimport DashboardCard from 'src/components/DashboardCard';\nimport { FormGroup } from 'reactstrap';\n\nconst AboutUs = (props) => {\n\n\n  const aboutMe = props.user.aboutMe\n\n  const setAboutMe = (eTargetValue, eTargetName) => {\n    props.setAboutMe(eTargetValue, eTargetName);\n  };\n\n\n\n\n  return (\n    <DashboardCard title=\"About me\" setAboutMe={setAboutMe} action className=\"mb-5\" modalName=\"about\" >\n      <FormGroup>\n        <textarea\n          type='text'\n          className='form-control'\n          name='aboutMe'\n          rows='5'\n          placeholder={aboutMe}\n        ></textarea>\n      </FormGroup>\n    </DashboardCard>\n  );\n};\n\nexport default AboutUs;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Card, Input, FormGroup, Label, Form } from 'reactstrap';\nimport ProfileEditForm from 'src/components/ProfileEditForm';\nimport SocialNetwork from 'src/components/SocialLinkForm';\nimport SecurityForm from 'src/components/SecurityForm';\nimport BrowseImage from 'src/components/BrowseImage';\nimport { Update } from './../../profile/Update';\nimport DashboardCard from 'src/components/DashboardCard';\nimport BasicInformation from './BasicInformation';\nimport AboutUs from './AboutUs';\nimport { updateUser } from '../../../redux/auth/thunks';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nconst ProfileSetting = ({ updateUser }) => {\n\n    const [user, setUser] = useState({});\n    const token = localStorage.getItem('token');\n\n    var config2 = {\n        headers: {\n            'Authorization': token\n        }\n    }\n    useEffect(() => {\n        function fetchData() {\n            axios.get(`https://www.togedoortestgo.site/graphql/accounts/${localStorage.id}`, config2).then((res) => {\n                setUser(res.data);\n            });\n        }\n        fetchData();\n    }, [token]);\n\n\n\n    const editUser = (eTargetValue, eTargetName) => {\n        setUser({ ...user, [eTargetName]: eTargetValue });\n        console.log(user)\n    }\n\n\n    return (\n        <div>\n            <DashboardCard title='Profile settings' className='mt-5 mb-5'>\n                <BrowseImage\n                    image={user.picture}\n                    text='Change Your Picture'\n                    firstColumn='col-md-2 col-sm-2 col-xs-2 text-center text-md-left'\n                    secondColumn='col-md-10 col-sm-10 col-xs-10'\n                    textPosition='text-center text-md-left'\n                /></DashboardCard>\n            {/* <ProfileEditForm user={user} setUserEdit={editUser} /> */}\n            {/* <Update user={props.user} /> */}\n            <BasicInformation user={user} setAboutMe={editUser} />\n            <AboutUs user={user} setAboutMe={editUser} />\n            <FormGroup check className='mb-5'></FormGroup>\n            <a href='/candidate/profile'>\n                <Button color='primary' onClick={() => {\n                    updateUser(user.id, user);\n                }} className='outline-hover--effect'>\n                    Save changes\n                </Button></a>\n        </div>\n    );\n};\n\nProfileSetting.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n// export default Signin;\nexport default connect(mapStateToProps, { updateUser })(ProfileSetting);\n\n\n\n// export default ProfileSetting;\n"],"sourceRoot":""}