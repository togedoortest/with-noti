{"version":3,"sources":["components/Modal/index.js","views/Candidate/ProfileSetting/BasicInformation/BasicInfoModal/index.js","views/Candidate/ProfileSetting/AboutUs/AboutModal/index.js","views/Employer/Company/IntroVideo/VideoModal/index.js","views/Employer/Company/ImageGallery/GalleryModal/index.js","components/DashboardCard/index.js","views/Candidate/EditPost/EditMyJob/index.js","views/Candidate/EditPost/index.js"],"names":["DashboardModal","props","modal","toggle","children","to","title","Modal","isOpen","className","ModalHeader","tag","icon","faEdit","Form","ModalBody","ModalFooter","Button","color","onClick","BasicInfoModal","handleChanged","e","persist","setUserBasicInfo","target","value","name","FormGroup","row","Label","for","sm","Col","Input","type","id","placeholder","onChange","AboutModal","console","log","setUserAboutMe","VideoModal","GalleryModal","DashboardCard","action","modalName","useState","setModal","aboutMeFunc","eTargetValue","eTargetName","setAboutMe","Card","CardHeader","CardTitle","size","CardBody","connect","state","isAuthenticated","auth","serviceID","categories","setCategories","subCategories","setSubCategories","subCategoryName","setSubCategoryName","file","setFile","filename","setFilename","store","getState","categoryName","handleCategoryName","myService","setMyService","useEffect","a","axios","get","response","TempoMyService","data","serviceImage","subCategoryID","then","res","split","join","res2","subcategories","fetchData","onSubmit","formData","FormData","append","JSON","stringify","patch","catch","error","tempoC","_id","map","category","key","results","filter","subCategory","i","JobTitle","Row","form","md","Salary","description","rows","files","htmlFor","href","lassName","EditPost","match","params","history"],"mappings":"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","file":"static/js/37.360e2152.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-regular-svg-icons';\nimport { Link } from 'react-router-dom';\n\nconst DashboardModal = (props) => {\n    const { modal, toggle, children, to, title } = props;\n\n\n\n    return (\n        <Modal isOpen={modal} toggle={toggle} className='mt-13' >\n            <ModalHeader tag='h6' toggle={toggle} className='border-0'>\n                <FontAwesomeIcon className='text-primary mr-1' icon={faEdit} />\n                <span className='  text-dark'>{title}</span>\n            </ModalHeader>\n            <Form>\n                {children && <ModalBody>{children}</ModalBody>}\n                <ModalFooter className='border-0 justify-content-start'>\n                    <Button color='primary' onClick={toggle} >\n                        Save Updates\n                    </Button>{' '}\n                    <Link to={to || '#'} className='text-primary' onClick={toggle}>\n                        cancel\n                    </Link>{' '}\n                </ModalFooter>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default DashboardModal;\n","import React from 'react';\nimport { Col, FormGroup, Label, Input } from 'reactstrap';\nconst BasicInfoModal = (props) => {\n\n\n  const handleChanged = (e) => {\n    e.persist();\n    props.setUserBasicInfo(e.target.value, e.target.name)\n  };\n\n\n  return (\n    <>\n      <FormGroup row>\n        <Label for=\"exampetext\" sm={3}>\n          First name :\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"firstName\"\n            id=\"exampleEmail\"\n            placeholder=\"Please insert your first name\"\n            onChange={handleChanged}\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"exampetext\" sm={3}>\n          Last name :\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"lastName\"\n            id=\"exampleEmail\"\n            placeholder=\"Please insert your last name\"\n            onChange={handleChanged}\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"exampetext\" sm={3}>\n          Job title :\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"jobTitle\"\n            id=\"exampleEmail\"\n            placeholder=\"Please insert your job title\"\n            onChange={handleChanged}\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"exampleEmail\" sm={3}>\n          Location :\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"location\"\n            id=\"exampleEmail\"\n            onChange={handleChanged}\n            placeholder=\"Please insert your location\"\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n        </Col>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default BasicInfoModal;\n","import React from 'react';\nimport { Col, FormGroup, Label, Input } from 'reactstrap';\nconst AboutModal = (props) => {\n  console.log(props)\n\n  const handleChanged = (e) => {\n    e.persist();\n    props.setUserAboutMe(e.target.value, e.target.name)\n  };\n\n  return (\n    <FormGroup row>\n      <Label for=\"exampleText\" sm={3}>\n        Write Yourself:\n      </Label>\n      <Col sm={9}>\n        <Input\n          type=\"textarea\"\n          name=\"aboutMe\"\n          id=\"exampleText\"\n          placeholder=\"Write YourSelf\"\n          className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          onChange={handleChanged}\n        />\n      </Col>\n    </FormGroup>\n  );\n};\n\nexport default AboutModal;\n","import React from 'react';\nimport { Col, FormGroup, Label, Input } from 'reactstrap';\nconst VideoModal = () => {\n  return (\n    <FormGroup row>\n      <Label for=\"exampleEmail\" sm={3}>\n        Video Link :\n      </Label>\n      <Col sm={9}>\n        <Input\n          type=\"text\"\n          name=\"videolink\"\n          id=\"exampleEmail\"\n          placeholder=\"Youtube Url Or Browse Link\"\n          className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n        />\n      </Col>\n    </FormGroup>\n  );\n};\n\nexport default VideoModal;\n","import React from 'react';\nimport { Col, FormGroup, Label, Input } from 'reactstrap';\nconst GalleryModal = () => {\n  return (\n    <>\n      <FormGroup row>\n        <Label for=\"exampleText\" sm={3}>\n          Gallery 01:\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"Title\"\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n          <Input\n            type=\"text\"\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"Link\"\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n          <Label for=\"exampleFile\" className=\"text-muted m-3\">\n            Image\n          </Label>\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"exampleText\" sm={3}>\n          Gallery 02:\n        </Label>\n        <Col sm={9}>\n          <Input\n            type=\"text\"\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"Title\"\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n          <Input\n            type=\"text\"\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"Link\"\n            className=\"border-top-0 border-left-0 border-right-0 boder-bottom\"\n          />\n          <Label for=\"exampleFile\" className=\"text-muted m-3\">\n            Image\n          </Label>\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n        </Col>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default GalleryModal;\n","import React, { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardBody, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-regular-svg-icons';\n\nimport DashboardModal from '../Modal';\nimport BasicInfoModal from 'src/views/Candidate/ProfileSetting/BasicInformation/BasicInfoModal';\nimport AboutModal from 'src/views/Candidate/ProfileSetting/AboutUs/AboutModal';\nimport VideoModal from 'src/views/Employer/Company/IntroVideo/VideoModal';\nimport GalleryModal from 'src/views/Employer/Company/ImageGallery/GalleryModal';\n\nconst DashboardCard = (props) => {\n  const { title, action, children, className, modalName } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  const [aboutMe, setAboutMe] = useState(\"Write Yourself:\");\n  const aboutMeFunc = (eTargetValue, eTargetName) => {\n    props.setAboutMe(eTargetValue, eTargetName)\n  };\n\n\n  return (\n    <Card className={`${className && className}`}>\n      <CardHeader\n        tag=\"h6\"\n        className=\"d-flex justify-content-between align-items-center bg-primary\"\n      >\n        <CardTitle className=\"m-0 text-white p-2\">\n          {title}\n        </CardTitle>\n        {action && (\n          <Button\n            size=\"sm\"\n            onClick={toggle}\n            className=\"btn-icon text-white\"\n            color=\"link\"\n          >\n            {modalName === 'basic' && (\n              <DashboardModal\n                modal={modal}\n                toggle={toggle}\n                title=\"basic information\"\n\n              >\n                <BasicInfoModal setUserBasicInfo={aboutMeFunc} />\n              </DashboardModal>\n            )}\n            {modalName === 'about' && (\n              <DashboardModal modal={modal} toggle={toggle} title=\"About us\" >\n                <AboutModal setUserAboutMe={aboutMeFunc} />\n              </DashboardModal>\n            )}\n            {modalName === 'videoLink' && (\n              <DashboardModal modal={modal} toggle={toggle} title=\"Intro video\">\n                <VideoModal />\n              </DashboardModal>\n            )}\n            {modalName === 'gallery' && (\n              <DashboardModal modal={modal} toggle={toggle} title=\"Intro video\">\n                <GalleryModal />\n              </DashboardModal>\n            )}\n\n            <FontAwesomeIcon icon={faEdit} />\n          </Button>\n        )}\n      </CardHeader>\n      {children && <CardBody >{children}</CardBody>}\n    </Card>\n  );\n};\n\nexport default DashboardCard;\n","import React, { useState, useEffect } from 'react';\nimport { Form, FormGroup, Label, Input, Col, Row, Button } from 'reactstrap';\nimport DashboardCard from 'src/components/DashboardCard';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport store from '../../../../store';\nconst EditMyJob = ({ serviceID }) => {\n\n\n    const [categories, setCategories] = useState([]);\n    const [subCategories, setSubCategories] = useState([]);\n    const [subCategoryName, setSubCategoryName] = useState(\"\");\n    const [file, setFile] = useState('');\n    const [filename, setFilename] = useState('');\n    const user = store.getState();\n    const [categoryName, handleCategoryName] = useState(\"\");\n    const [myService, setMyService] = useState({});\n\n\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n\n                const response = await axios.get(`https://www.togedoortestgo.site/graphql/services/${serviceID}`)\n                const TempoMyService = response.data\n                setMyService(TempoMyService);\n                setFilename(TempoMyService.serviceImage);\n\n\n                axios.get(`https://www.togedoortestgo.site/graphql/subCategories/${TempoMyService.subCategoryID}`)\n                    .then((res) => {\n                        console.log(res.data.name)\n                        setSubCategoryName(res.data.name)\n                    })\n\n                axios.get(`https://www.togedoortestgo.site/graphql/categories/name/${TempoMyService.categoryName\n                    .split(\" \")\n                    .join(\"-\")}`)\n                    .then((res2) => {\n                        setSubCategories(res2.data.subcategories)\n                    })\n\n            } catch (error) {\n                console.log(error.response);\n            }\n        }\n        fetchData();\n    }, []);\n\n\n\n    const onSubmit = e => {\n        const formData = new FormData();\n        if (file) {\n\n            formData.append('file', file);\n            console.log(file)\n            formData.append(\"service\", JSON.stringify(myService));\n\n            axios.patch('https://www.togedoortestgo.site/graphql/services/editServiceWithFile', formData)\n\n                .then((response) => {\n                    console.log(response.data);\n                })\n                .catch((error) => {\n                    console.log(error);\n                })\n        } else {\n            console.log(myService)\n            console.log('editServiceNoFile')\n            formData.append(\"service\", JSON.stringify(myService));\n            axios.patch('https://www.togedoortestgo.site/graphql/services/editServiceNoFile', formData)\n                .then((response) => {\n                    console.log(response)\n                    console.log('editServiceNoFile')\n                    console.log(response.data);\n                })\n                .catch((error) => {\n                    console.log(error);\n                })\n\n        }\n\n    };\n\n    const onChangeSubCategory = (e) => {\n        e.persist();\n        const results = subCategories.filter((subCategory) => subCategory.name === e.target.value)\n        setMyService({ ...myService, [e.target.name]: results[0]._id });\n        setSubCategoryName(e.target.value)\n        console.log(myService)\n\n    };\n\n    const onChange = (e) => {\n        e.persist();\n        setMyService({ ...myService, [e.target.name]: e.target.value });\n        console.log(myService)\n\n    };\n\n    const onChangeCategory = (e) => {\n        e.persist();\n        setMyService({ ...myService, [e.target.name]: e.target.value });\n        handleCategoryName(e.target.value);\n        console.log(myService)\n    };\n\n\n\n    useEffect(() => {\n        var tempoC = ''\n        axios.get(\"https://www.togedoortestgo.site/graphql/categories\").then((response) => {\n            tempoC = response.data\n            setCategories(tempoC);\n        });\n\n    }, [])\n\n\n    useEffect(() => {\n\n        async function fetchData() {\n\n            const response = await axios.get(\n                `https://www.togedoortestgo.site/graphql/categories/name/${categoryName\n                    .split(\" \")\n                    .join(\"-\")}`\n            );\n            setSubCategories(response.data.subcategories);\n            setMyService({ ...myService, subCategoryID: response.data.subcategories[0]._id })\n        }\n\n        fetchData();\n    }, [categoryName]);\n\n\n    const onChangefile = e => {\n        setFile(e.target.files[0]);\n        setFilename(e.target.files[0].name)\n        console.log(e.target.files[0])\n        console.log(e.target.files[0].name)\n        console.log(e.target.name)\n        setMyService({ ...myService, [e.target.name]: e.target.files[0].name });\n        console.log(myService)\n    };\n\n\n    return (\n        <>\n            {myService ? (\n                <DashboardCard title='Edit project' className='mb-5'>\n                    <Form onSubmit={onSubmit}>\n                        <FormGroup>\n                            <Label for='exampleSelect1'>Project category</Label>\n                            <Input type='select' value={myService.categoryName} name='categoryName' id='exampleSelect1' onChange={onChangeCategory}>\n                                {categories.map((category, key) => (\n                                    <option >{category.name}</option>\n                                ))}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for='exampleSelect1'>Sub category</Label>\n                            <Input type='select' value={subCategoryName} name='subCategoryID' id='exampleSelect1' onChange={onChangeSubCategory}>\n                                {subCategories.map((subCategory, i) => (\n                                    <option key={i}>\n                                        {subCategory.name}\n                                    </ option>\n                                ))}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for='exampleEmail1'>Project title</Label>\n                            <Input type='text' value={myService.JobTitle} name='JobTitle' onChange={onChange} />\n                        </FormGroup>\n                        <Row form>\n                            <Col md={12}>\n                                <FormGroup>\n                                    <Label for='exampleSelect3'>Price</Label>\n                                    <Input type='number' value={myService.Salary} name='Salary' onChange={onChange}></Input>\n                                </FormGroup>\n                            </Col>\n                            <Col md={12}>\n                                <FormGroup>\n                                    <Label for='exampleSelect3' className='form-label'>\n                                        About this project\n                                    </Label>\n                                    <textarea\n                                        type='text'\n                                        className='form-control'\n                                        name='description'\n                                        value={myService.description}\n                                        rows='5'\n                                        onChange={onChange}></textarea>\n                                </FormGroup>\n                                <Label for='exampleSelect3' className='form-label'>\n                                    {' '}\n                                    PROJECT IMAGE:{' '}\n                                </Label>\n                            </Col>\n                            <Col md={12}>\n                                <FormGroup>\n                                    <Input type='file' name='serviceImage' className='custom-file-input' id='customFile' onChange={onChangefile} />\n                                    <Label for='customFile' name='serviceImage' className='custom-file-label' htmlFor='customFile'>\n                                        {filename}\n                                    </Label>\n                                </FormGroup>\n                            </Col>\n                            <Col md={12}>\n                                <div className='text-center'>\n                                    <Button type='submit' color='primary' href='/candidate/manage' lassName='outline-hover--effect ' onClick={onSubmit}>\n                                        Edit project\n                                    </Button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Form>\n                </DashboardCard>\n            ) : <div>Loading...</div>}\n        </>\n    );\n};\nEditMyJob.propTypes = {\n    user: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {})(EditMyJob);\n","import React from 'react';\nimport EditMyJob from './EditMyJob';\n\nconst EditPost = ({ match: { params }, }) => {\n\n    const { serviceID } = (params)\n\n\n\n    return (\n        <>\n            <EditMyJob serviceID={serviceID} history={history} />\n        </>\n    );\n};\n\nexport default EditPost;\n"],"sourceRoot":""}