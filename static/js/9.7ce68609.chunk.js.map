{"version":3,"sources":["../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/polyfills/symbols.mjs","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","../node_modules/graphql/jsutils/instanceOf.mjs","../node_modules/graphql/jsutils/defineInspect.mjs","../node_modules/graphql/jsutils/invariant.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/language/blockString.mjs","../../../../src/utilities/common/maybe.ts","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../../../../src/utilities/common/global.ts","../node_modules/ts-invariant/process/index.js","../node_modules/@apollo/client/node_modules/tslib/tslib.es6.js","../../src/equality.ts","../node_modules/ts-invariant/node_modules/tslib/tslib.es6.js","../../src/invariant.ts","../../../../src/utilities/globals/DEV.ts","../node_modules/graphql/polyfills/objectEntries.mjs","../node_modules/graphql/jsutils/mapValue.mjs","../node_modules/graphql/jsutils/toObjMap.mjs","../node_modules/graphql/jsutils/keyValMap.mjs","../node_modules/graphql/jsutils/identityFunc.mjs","../node_modules/graphql/jsutils/naturalCompare.mjs","../node_modules/graphql/jsutils/suggestionList.mjs","../node_modules/graphql/language/visitor.mjs","../node_modules/graphql/language/printer.mjs","../node_modules/graphql/utilities/valueFromASTUntyped.mjs","../node_modules/graphql/type/definition.mjs","../node_modules/graphql/jsutils/keyMap.mjs","../node_modules/graphql/jsutils/didYouMean.mjs","../../../../src/utilities/common/arrays.ts","../../../../src/utilities/globals/graphql.ts","../../../src/errors/index.ts","../../../src/core/networkStatus.ts","../../../../src/react/parser/index.ts","../../../../src/react/data/OperationData.ts","../../../../src/react/data/QueryData.ts","../../../../src/utilities/common/canUse.ts","../../../../src/react/context/ApolloContext.ts","../../../../../src/react/hooks/utils/useBaseQuery.ts","../../../../../src/react/hooks/utils/useDeepMemo.ts","../../../../../src/react/hooks/utils/useAfterFastRefresh.ts","../../../../src/react/hooks/useQuery.ts","../node_modules/graphql-tag/node_modules/tslib/tslib.es6.js","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs","../../src/index.ts"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","inspect","value","formatValue","seenValues","JSON","stringify","name","concat","previouslySeenValues","indexOf","customInspectFn","object","String","nodejsCustomInspectSymbol","getCustomFn","undefined","customValue","call","Array","isArray","array","length","len","Math","min","remaining","items","i","push","join","formatArray","keys","Object","tag","toString","replace","getObjectTag","map","key","formatObject","formatObjectValue","asyncIterator","SYMBOL_TO_STRING_TAG","toStringTag","Location","startToken","endToken","source","this","start","end","toJSON","defineInspect","Token","kind","line","column","prev","next","isNode","maybeNode","Kind","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","devAssert","condition","message","Boolean","Error","for","process","classObject","fn","invariant","isObjectLike","dedentBlockStringValue","rawString","lines","split","commonIndent","_commonIndent","isFirstLine","isEmptyLine","indent","charCodeAt","getBlockStringIndentation","slice","startLine","isBlank","endLine","str","printBlockString","indentation","arguments","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","hasTrailingSlash","printAsMultipleLines","result","maybe","thunk","getLocation","position","match","lineRegexp","exec","body","index","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","locationLine","subLineIndex","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","prefix","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Map","Function","TypeError","has","get","set","Wrapper","_construct","_getPrototypeOf","create","_setPrototypeOf","Parent","args","_isNativeReflectConstruct","Reflect","construct","a","instance","bind","sham","Proxy","Date","e","o","p","setPrototypeOf","__proto__","getPrototypeOf","GraphQLError","_Error","subClass","superClass","_inherits","Constructor","protoProps","staticProps","_super","Derived","hasNativeReflectConstruct","Super","NewTarget","_createSuper","nodes","positions","path","originalError","extensions","_locations2","_source2","_positions2","_extensions2","_this","_classCallCheck","_nodes$0$loc","_nodes","_source","loc","_locations","_positions","reduce","list","node","pos","_extensions","originalExtensions","defineProperties","locations","stack","captureStackTrace","error","output","_i2","_error$nodes2","_i4","_error$locations2","printError","_taggedTemplateLiteral","strings","raw","globalThis","window","global","_","safeGlobal","needToRemove","remove","env","NODE_ENV","extendStatics","d","b","hasOwnProperty","__extends","__","__assign","assign","t","s","n","fnToStr","previousComparisons","equal","check","clear","aTag","previouslyCompared","aKeys","definedKeys","bKeys","keyCount","k","size","aIterator","entries","isMap","info","done","aKey","aValue","Uint8Array","byteLength","aCode","full","suffix","fromIndex","endsWith","nativeCodeSuffix","isDefinedKey","bSet","Set","add","genericMessage","proto","framesToPop","InvariantError","verbosityLevels","verbosityLevel","wrapConsoleMethod","method","console","log","debug","warn","GLOBAL_KEY","__DEV__","objectEntries","mapValue","_objectEntries2","_key","_value","toObjMap","keyValMap","keyFn","valFn","item","identityFunc","x","DIGIT_0","isDigit","code","isNaN","suggestionList","input","options","optionsByDistance","lexicalDistance","LexicalDistance","threshold","option","distance","measure","sort","distanceDiff","aStr","bStr","aIdx","bIdx","aChar","bChar","aNum","bNum","naturalCompare","_input","_inputLowerCase","toLowerCase","_inputArray","stringToArray","_rows","fill","optionLowerCase","tmp","aLength","bLength","rows","j","upRow","currentRow","smallestCell","_j","cost","currentCell","doubleDiagonalCell","strLength","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","getVisitFn","visitor","isLeaving","kindVisitor","kindSpecificVisitor","leave","enter","specificVisitor","specificKindVisitor","print","ast","root","visitorKeys","inArray","edits","parent","ancestors","newRoot","isEdited","pop","clone","_Object$keys2","editOffset","ii","editKey","editValue","splice","_visitorKeys$node$kin","visitFn","visit","printDocASTReducer","definitions","op","operation","varDefs","wrap","variableDefinitions","directives","selectionSet","variable","type","defaultValue","block","selections","alias","argsLine","_ref4","_ref5","_ref6","typeCondition","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","values","_ref14","fields","_ref15","_ref16","_ref17","_ref18","_ref19","addDescription","_ref20","operationTypes","_ref21","_ref22","_ref23","interfaces","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","types","_ref28","_ref29","_ref30","_ref31","repeatable","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","cb","description","maybeArray","_maybeArray$filter$jo","separator","maybeString","isMultiline","some","valueFromASTUntyped","valueNode","variables","parseInt","parseFloat","field","_createClass","isType","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isListType","isNonNullType","instanceOf","GraphQLScalarType","GraphQLObjectType","GraphQLInterfaceType","GraphQLUnionType","GraphQLEnumType","GraphQLInputObjectType","GraphQLList","GraphQLNonNull","ofType","assertType","isNullableType","assertNullableType","resolveThunk","undefineIfEmpty","arr","config","_config$parseValue","_config$serialize","_config$parseLiteral","parseValue","specifiedByUrl","serialize","parseLiteral","astNode","extensionASTNodes","_proto","toConfig","_this$extensionASTNod","isTypeOf","_fields","defineFieldMap","_interfaces","defineInterfaces","_proto2","getFields","getInterfaces","fieldsToFieldsConfig","_resolveThunk","fieldMap","isPlainObj","fieldConfig","fieldName","_fieldConfig$args","resolve","argsConfig","argName","argConfig","deprecationReason","subscribe","isDeprecated","arg","resolveType","_proto3","_this$extensionASTNod2","_types","defineTypes","_proto4","getTypes","_this$extensionASTNod3","typeName","valueMap","_values","valueName","valueConfig","_valueLookup","enumValue","_nameLookup","_proto5","getValues","getValue","outputValue","inputValue","valueStr","didYouMeanEnumValue","_variables","_valueStr","_this$extensionASTNod4","enumType","unknownValueStr","firstArg","secondArg","subMessage","suggestions","selected","lastItem","didYouMean","defineInputFieldMap","_proto6","_this$extensionASTNod5","isNonEmptyArray","NetworkStatus","DocumentType","graphQLErrors","clientErrors","networkError","errorMessage","extraInfo","err","forEach","ApolloError","cache","operationName","Query","Mutation","Subscription","context","onNewData","runLazy","previous","runLazyQuery","cleanup","lazyOptions","obsRefetch","currentObservable","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","refreshClient","getOptions","skip","query","removeQuerySubscription","removeObservable","updateObservableQuery","getExecuteSsrResult","getExecuteResult","executeLazy","loading","networkStatus","ready","called","data","fetchData","ssr","Promise","startQuerySubscription","afterExecute","lazy","isMounted","ssrInitiated","client","disableNetworkFetches","handleErrorOrCompleted","previousOptions","unmount","renderPromises","ssrDisabled","fetchDisabled","ssrLoading","stale","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","verifyDocumentType","displayName","fetchPolicy","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","setOptions","catch","currentSubscription","previousResult","resubscribeToQuery","last","resetLastResults","currentResult","getCurrentResult","partial","errors","getLastResult","previousData","resetQueryStoreErrors","onCompleted","onError","unsubscribe","andDelete","newOptions","storePrevious","isNew","document","cached","fragments","queries","mutations","subscriptions","definition","parser","requiredOperationName","usedOperationName","canUseWeakMap","WeakMap","navigator","product","useBaseQuery","getApolloContext","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","then","memoFn","ref","useDeepMemo","queryResult","effectFn","useAfterFastRefresh","useQuery","syntaxError","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","Source","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","Lexer","startOfFileToken","lastToken","token","lineStart","advance","lookahead","_token$next","readToken","printCharCode","fromCharCode","toUpperCase","lexer","bodyLength","_line","_col","readComment","readBlockString","readString","readNumber","readName","unexpectedCharacterMessage","col","firstCode","isFloat","readDigits","isNameStart","c","chunkStart","charCode","char2hex","invalidSequence","rawValue","Parser","sourceObj","isSource","_lexer","_options","parseName","expectToken","parseDocument","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","parseVariable","parseTypeReference","expectOptionalToken","parseValueLiteral","parseSelection","parseFragment","parseField","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","any","_this2","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","parseOperationTypeDefinition","parseImplementsInterfaces","parseFieldsDefinition","_this$_options2","allowLegacySDLImplementsInterfaces","delimitedMany","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","parseDirectiveLocations","parseDirectiveLocation","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","delimiterKind","isPunctuatorTokenKind"],"mappings":"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","file":"static/js/9.7ce68609.chunk.js","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable flowtype/no-weak-types */\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' && Symbol.iterator != null ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_ASYNC_ITERATOR = typeof Symbol === 'function' && Symbol.asyncIterator != null ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_TO_STRING_TAG = typeof Symbol === 'function' && Symbol.toStringTag != null ? Symbol.toStringTag : '@@toStringTag';\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport inspect from \"./inspect.mjs\";\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n */\n\n// See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n// See: https://webpack.js.org/guides/production/\nexport default process.env.NODE_ENV === 'production' ? // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n// eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  return value instanceof constructor;\n} : // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  if (value instanceof constructor) {\n    return true;\n  }\n\n  if (_typeof(value) === 'object' && value !== null) {\n    var _value$constructor;\n\n    var className = constructor.prototype[Symbol.toStringTag];\n    var valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n    Symbol.toStringTag in value ? value[Symbol.toStringTag] : (_value$constructor = value.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name;\n\n    if (className === valueClassName) {\n      var stringifiedValue = inspect(value);\n      throw new Error(\"Cannot use \".concat(className, \" \\\"\").concat(stringifiedValue, \"\\\" from another module or realm.\\n\\nEnsure that there is only one instance of \\\"graphql\\\" in the node_modules\\ndirectory. If different versions of \\\"graphql\\\" are the dependencies of other\\nrelied on modules, use \\\"resolutions\\\" to ensure only one version is installed.\\n\\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\\n\\nDuplicate \\\"graphql\\\" modules cannot be used at the same time since different\\nversions may have different capabilities and behavior. The data from one\\nversion used in the function from another could produce confusing and\\nspurious results.\"));\n    }\n  }\n\n  return false;\n};\n","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nexport function getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","export function maybe<T>(thunk: () => T): T | undefined {\n  try { return thunk() } catch {}\n}\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { maybe } from \"./maybe\";\n\ndeclare global {\n  const __DEV__: boolean | undefined;\n}\n\nexport default (\n  maybe(() => globalThis) ||\n  maybe(() => window) ||\n  maybe(() => self) ||\n  maybe(() => global) ||\n  maybe(() => Function(\"return this\")())\n) as typeof globalThis & {\n  __DEV__: typeof __DEV__;\n};\n","function maybe(thunk) {\n  try { return thunk() } catch (_) {}\n}\n\nconst safeGlobal = (\n  maybe(function() { return globalThis }) ||\n  maybe(function() { return window }) ||\n  maybe(function() { return self }) ||\n  maybe(function() { return global }) ||\n  maybe(function() { return Function(\"return this\")() })\n);\n\nlet needToRemove = false;\n\nexport function install() {\n  if (safeGlobal &&\n      !maybe(function() { return process.env.NODE_ENV }) &&\n      !maybe(function() { return process })) {\n    Object.defineProperty(safeGlobal, \"process\", {\n      value: {\n        env: {\n          // This default needs to be \"production\" instead of \"development\", to\n          // avoid the problem https://github.com/graphql/graphql-js/pull/2894\n          // will eventually solve, once merged and released.\n          NODE_ENV: \"production\",\n        },\n      },\n      // Let anyone else change global.process as they see fit, but hide it from\n      // Object.keys(global) enumeration.\n      configurable: true,\n      enumerable: false,\n      writable: true,\n    });\n    needToRemove = true;\n  }\n}\n\n// Call install() at least once, when this module is imported.\ninstall();\n\nexport function remove() {\n  if (needToRemove) {\n    delete safeGlobal.process;\n    needToRemove = false;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","const { toString, hasOwnProperty } = Object.prototype;\nconst fnToStr = Function.prototype.toString;\nconst previousComparisons = new Map<object, Set<object>>();\n\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a: any, b: any): boolean {\n  try {\n    return check(a, b);\n  } finally {\n    previousComparisons.clear();\n  }\n}\n\n// Allow default imports as well.\nexport default equal;\n\nfunction check(a: any, b: any): boolean {\n  // If the two values are strictly equal, our job is easy.\n  if (a === b) {\n    return true;\n  }\n\n  // Object.prototype.toString returns a representation of the runtime type of\n  // the given value that is considerably more precise than typeof.\n  const aTag = toString.call(a);\n  const bTag = toString.call(b);\n\n  // If the runtime types of a and b are different, they could maybe be equal\n  // under some interpretation of equality, but for simplicity and performance\n  // we just return false instead.\n  if (aTag !== bTag) {\n    return false;\n  }\n\n  switch (aTag) {\n    case '[object Array]':\n      // Arrays are a lot like other objects, but we can cheaply compare their\n      // lengths as a short-cut before comparing their elements.\n      if (a.length !== b.length) return false;\n      // Fall through to object case...\n    case '[object Object]': {\n      if (previouslyCompared(a, b)) return true;\n\n      const aKeys = definedKeys(a);\n      const bKeys = definedKeys(b);\n\n      // If `a` and `b` have a different number of enumerable keys, they\n      // must be different.\n      const keyCount = aKeys.length;\n      if (keyCount !== bKeys.length) return false;\n\n      // Now make sure they have the same keys.\n      for (let k = 0; k < keyCount; ++k) {\n        if (!hasOwnProperty.call(b, aKeys[k])) {\n          return false;\n        }\n      }\n\n      // Finally, check deep equality of all child properties.\n      for (let k = 0; k < keyCount; ++k) {\n        const key = aKeys[k];\n        if (!check(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Error]':\n      return a.name === b.name && a.message === b.message;\n\n    case '[object Number]':\n      // Handle NaN, which is !== itself.\n      if (a !== a) return b !== b;\n      // Fall through to shared +a === +b case...\n    case '[object Boolean]':\n    case '[object Date]':\n      return +a === +b;\n\n    case '[object RegExp]':\n    case '[object String]':\n      return a == `${b}`;\n\n    case '[object Map]':\n    case '[object Set]': {\n      if (a.size !== b.size) return false;\n      if (previouslyCompared(a, b)) return true;\n\n      const aIterator = a.entries();\n      const isMap = aTag === '[object Map]';\n\n      while (true) {\n        const info = aIterator.next();\n        if (info.done) break;\n\n        // If a instanceof Set, aValue === aKey.\n        const [aKey, aValue] = info.value;\n\n        // So this works the same way for both Set and Map.\n        if (!b.has(aKey)) {\n          return false;\n        }\n\n        // However, we care about deep equality of values only when dealing\n        // with Map structures.\n        if (isMap && !check(aValue, b.get(aKey))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Uint16Array]':\n    case '[object Uint8Array]': // Buffer, in Node.js.\n    case '[object Uint32Array]':\n    case '[object Int32Array]':\n    case '[object Int8Array]':\n    case '[object Int16Array]':\n    case '[object ArrayBuffer]':\n      // DataView doesn't need these conversions, but the equality check is\n      // otherwise the same.\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n      // Fall through...\n    case '[object DataView]': {\n      let len = a.byteLength;\n      if (len === b.byteLength) {\n        while (len-- && a[len] === b[len]) {\n          // Keep looping as long as the bytes are equal.\n        }\n      }\n      return len === -1;\n    }\n\n    case '[object AsyncFunction]':\n    case '[object GeneratorFunction]':\n    case '[object AsyncGeneratorFunction]':\n    case '[object Function]': {\n      const aCode = fnToStr.call(a);\n      if (aCode !== fnToStr.call(b)) {\n        return false;\n      }\n\n      // We consider non-native functions equal if they have the same code\n      // (native functions require === because their code is censored).\n      // Note that this behavior is not entirely sound, since !== function\n      // objects with the same code can behave differently depending on\n      // their closure scope. However, any function can behave differently\n      // depending on the values of its input arguments (including this)\n      // and its calling context (including its closure scope), even\n      // though the function object is === to itself; and it is entirely\n      // possible for functions that are not === to behave exactly the\n      // same under all conceivable circumstances. Because none of these\n      // factors are statically decidable in JavaScript, JS function\n      // equality is not well-defined. This ambiguity allows us to\n      // consider the best possible heuristic among various imperfect\n      // options, and equating non-native functions that have the same\n      // code has enormous practical benefits, such as when comparing\n      // functions that are repeatedly passed as fresh function\n      // expressions within objects that are otherwise deeply equal. Since\n      // any function created from the same syntactic expression (in the\n      // same code location) will always stringify to the same code\n      // according to fnToStr.call, we can reasonably expect these\n      // repeatedly passed function expressions to have the same code, and\n      // thus behave \"the same\" (with all the caveats mentioned above),\n      // even though the runtime function objects are !== to one another.\n      return !endsWith(aCode, nativeCodeSuffix);\n    }\n  }\n\n  // Otherwise the values are not equal.\n  return false;\n}\n\nfunction definedKeys<TObject extends object>(obj: TObject) {\n  // Remember that the second argument to Array.prototype.filter will be\n  // used as `this` within the callback function.\n  return Object.keys(obj).filter(isDefinedKey, obj);\n}\nfunction isDefinedKey<TObject extends object>(\n  this: TObject,\n  key: keyof TObject,\n) {\n  return this[key] !== void 0;\n}\n\nconst nativeCodeSuffix = \"{ [native code] }\";\n\nfunction endsWith(full: string, suffix: string) {\n  const fromIndex = full.length - suffix.length;\n  return fromIndex >= 0 &&\n    full.indexOf(suffix, fromIndex) === fromIndex;\n}\n\nfunction previouslyCompared(a: object, b: object): boolean {\n  // Though cyclic references can make an object graph appear infinite from the\n  // perspective of a depth-first traversal, the graph still contains a finite\n  // number of distinct object references. We use the previousComparisons cache\n  // to avoid comparing the same pair of object references more than once, which\n  // guarantees termination (even if we end up comparing every object in one\n  // graph to every object in the other graph, which is extremely unlikely),\n  // while still allowing weird isomorphic structures (like rings with different\n  // lengths) a chance to pass the equality test.\n  let bSet = previousComparisons.get(a);\n  if (bSet) {\n    // Return true here because we can be sure false will be returned somewhere\n    // else if the objects are not equivalent.\n    if (bSet.has(b)) return true;\n  } else {\n    previousComparisons.set(a, bSet = new Set);\n  }\n  bSet.add(b);\n  return false;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","const genericMessage = \"Invariant Violation\";\nconst {\n  setPrototypeOf = function (obj: any, proto: any) {\n    obj.__proto__ = proto;\n    return obj;\n  },\n} = Object as any;\n\nexport class InvariantError extends Error {\n  framesToPop = 1;\n  name = genericMessage;\n  constructor(message: string | number = genericMessage) {\n    super(\n      typeof message === \"number\"\n        ? `${genericMessage}: ${message} (see https://github.com/apollographql/invariant-packages)`\n        : message\n    );\n    setPrototypeOf(this, InvariantError.prototype);\n  }\n}\n\nexport function invariant(\n  condition: any,\n  message?: string | number,\n): asserts condition {\n  if (!condition) {\n    throw new InvariantError(message);\n  }\n}\n\nconst verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"] as const;\nexport type VerbosityLevel = (typeof verbosityLevels)[number];\nexport type ConsoleMethodName = Exclude<VerbosityLevel, \"silent\">;\nlet verbosityLevel = verbosityLevels.indexOf(\"log\");\n\nfunction wrapConsoleMethod<M extends ConsoleMethodName>(name: M) {\n  return function () {\n    if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n      // Default to console.log if this host environment happens not to provide\n      // all the console.* methods we need.\n      const method = console[name] || console.log;\n      return method.apply(console, arguments as any);\n    }\n  } as (typeof console)[M];\n}\n\nexport namespace invariant {\n  export const debug = wrapConsoleMethod(\"debug\");\n  export const log = wrapConsoleMethod(\"log\");\n  export const warn = wrapConsoleMethod(\"warn\");\n  export const error = wrapConsoleMethod(\"error\");\n}\n\nexport function setVerbosity(level: VerbosityLevel): VerbosityLevel {\n  const old = verbosityLevels[verbosityLevel];\n  verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n  return old;\n}\n\nexport default invariant;\n","import global from \"../common/global\";\nimport { maybe } from \"../common/maybe\";\n\n// To keep string-based find/replace minifiers from messing with __DEV__ inside\n// string literals or properties like global.__DEV__, we construct the \"__DEV__\"\n// string in a roundabout way that won't be altered by find/replace strategies.\nconst __ = \"__\";\nconst GLOBAL_KEY = [__, __].join(\"DEV\");\n\nfunction getDEV() {\n  try {\n    return Boolean(__DEV__);\n  } catch {\n    Object.defineProperty(global, GLOBAL_KEY, {\n      // In a buildless browser environment, maybe(() => process.env.NODE_ENV)\n      // evaluates as undefined, so __DEV__ becomes true by default, but can be\n      // initialized to false instead by a script/module that runs earlier.\n      value: maybe(() => process.env.NODE_ENV) !== \"production\",\n      enumerable: false,\n      configurable: true,\n      writable: true,\n    });\n    // Using computed property access rather than global.__DEV__ here prevents\n    // string-based find/replace strategies from munging this to global.false:\n    return (global as any)[GLOBAL_KEY];\n  }\n}\n\nexport default getDEV();\n","/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar objectEntries = Object.entries || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return [key, obj[key]];\n  });\n};\n\nexport default objectEntries;\n","import objectEntries from \"../polyfills/objectEntries.mjs\";\n\n/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nexport default function mapValue(map, fn) {\n  var result = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = objectEntries(map); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var _key = _ref2[0];\n    var _value = _ref2[1];\n    result[_key] = fn(_value, _key);\n  }\n\n  return result;\n}\n","import objectEntries from \"../polyfills/objectEntries.mjs\";\nexport default function toObjMap(obj) {\n  /* eslint-enable no-redeclare */\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  var map = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = objectEntries(obj); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var key = _ref2[0];\n    var value = _ref2[1];\n    map[key] = value;\n  }\n\n  return map;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nexport default function keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = valFn(item);\n    return map;\n  }, Object.create(null));\n}\n","/**\n * Returns the first argument it receives.\n */\nexport default function identityFunc(x) {\n  return x;\n}\n","/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport default function naturalCompare(aStr, bStr) {\n  var aIdx = 0;\n  var bIdx = 0;\n\n  while (aIdx < aStr.length && bIdx < bStr.length) {\n    var aChar = aStr.charCodeAt(aIdx);\n    var bChar = bStr.charCodeAt(bIdx);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      var aNum = 0;\n\n      do {\n        ++aIdx;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIdx);\n      } while (isDigit(aChar) && aNum > 0);\n\n      var bNum = 0;\n\n      do {\n        ++bIdx;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIdx);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIdx;\n      ++bIdx;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nvar DIGIT_0 = 48;\nvar DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n","import naturalCompare from \"./naturalCompare.mjs\";\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\n\nexport default function suggestionList(input, options) {\n  var optionsByDistance = Object.create(null);\n  var lexicalDistance = new LexicalDistance(input);\n  var threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (var _i2 = 0; _i2 < options.length; _i2++) {\n    var option = options[_i2];\n    var distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort(function (a, b) {\n    var distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nvar LexicalDistance = /*#__PURE__*/function () {\n  function LexicalDistance(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0)];\n  }\n\n  var _proto = LexicalDistance.prototype;\n\n  _proto.measure = function measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    var optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    var a = stringToArray(optionLowerCase);\n    var b = this._inputArray;\n\n    if (a.length < b.length) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var aLength = a.length;\n    var bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    var rows = this._rows;\n\n    for (var j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (var i = 1; i <= aLength; i++) {\n      var upRow = rows[(i - 1) % 3];\n      var currentRow = rows[i % 3];\n      var smallestCell = currentRow[0] = i;\n\n      for (var _j = 1; _j <= bLength; _j++) {\n        var cost = a[i - 1] === b[_j - 1] ? 0 : 1;\n        var currentCell = Math.min(upRow[_j] + 1, // delete\n        currentRow[_j - 1] + 1, // insert\n        upRow[_j - 1] + cost // substitute\n        );\n\n        if (i > 1 && _j > 1 && a[i - 1] === b[_j - 2] && a[i - 2] === b[_j - 1]) {\n          // transposition\n          var doubleDiagonalCell = rows[(i - 2) % 3][_j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[_j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    var distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  };\n\n  return LexicalDistance;\n}();\n\nfunction stringToArray(str) {\n  var strLength = str.length;\n  var array = new Array(strLength);\n\n  for (var i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n}\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n\n    case Kind.OBJECT:\n      return keyValMap(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  } // istanbul ignore next (Not reachable. All possible value nodes have been considered)\n\n\n  false || invariant(0, 'Unexpected value node: ' + inspect(valueNode));\n}\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport objectEntries from \"../polyfills/objectEntries.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport mapValue from \"../jsutils/mapValue.mjs\";\nimport toObjMap from \"../jsutils/toObjMap.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\nimport didYouMean from \"../jsutils/didYouMean.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport identityFunc from \"../jsutils/identityFunc.mjs\";\nimport defineInspect from \"../jsutils/defineInspect.mjs\";\nimport suggestionList from \"../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { valueFromASTUntyped } from \"../utilities/valueFromASTUntyped.mjs\";\nexport function isType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType(type) || isNonNullType(type);\n}\nexport function assertType(type) {\n  if (!isType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL type.\"));\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nexport function assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Scalar type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nexport function assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Object type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nexport function assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Interface type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nexport function assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Union type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nexport function assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Enum type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nexport function assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Input Object type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\nexport function assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL List type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nexport function assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Non-Null type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nexport function isInputType(type) {\n  return isScalarType(type) || isEnumType(type) || isInputObjectType(type) || isWrappingType(type) && isInputType(type.ofType);\n}\nexport function assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL input type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nexport function isOutputType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isWrappingType(type) && isOutputType(type.ofType);\n}\nexport function assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL output type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexport function assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL leaf type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexport function assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL composite type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexport function assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL abstract type.\"));\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         parents: { type: new GraphQLList(PersonType) },\n *         children: { type: new GraphQLList(PersonType) },\n *       })\n *     })\n *\n */\n// FIXME: workaround to fix issue with Babel parser\n\n/* ::\ndeclare class GraphQLList<+T: GraphQLType> {\n  +ofType: T;\n  static <T>(ofType: T): GraphQLList<T>;\n  // Note: constructors cannot be used for covariant types. Drop the \"new\".\n  constructor(ofType: GraphQLType): void;\n}\n*/\n\nexport function GraphQLList(ofType) {\n  // istanbul ignore else (to be removed in v16.0.0)\n  if (this instanceof GraphQLList) {\n    this.ofType = assertType(ofType);\n  } else {\n    return new GraphQLList(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\nGraphQLList.prototype.toString = function toString() {\n  return '[' + String(this.ofType) + ']';\n};\n\nGraphQLList.prototype.toJSON = function toJSON() {\n  return this.toString();\n};\n\nObject.defineProperty(GraphQLList.prototype, SYMBOL_TO_STRING_TAG, {\n  get: function get() {\n    return 'GraphQLList';\n  }\n}); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLList);\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n *     const RowType = new GraphQLObjectType({\n *       name: 'Row',\n *       fields: () => ({\n *         id: { type: new GraphQLNonNull(GraphQLString) },\n *       })\n *     })\n *\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n// FIXME: workaround to fix issue with Babel parser\n\n/* ::\ndeclare class GraphQLNonNull<+T: GraphQLNullableType> {\n  +ofType: T;\n  static <T>(ofType: T): GraphQLNonNull<T>;\n  // Note: constructors cannot be used for covariant types. Drop the \"new\".\n  constructor(ofType: GraphQLType): void;\n}\n*/\n\nexport function GraphQLNonNull(ofType) {\n  // istanbul ignore else (to be removed in v16.0.0)\n  if (this instanceof GraphQLNonNull) {\n    this.ofType = assertNullableType(ofType);\n  } else {\n    return new GraphQLNonNull(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\nGraphQLNonNull.prototype.toString = function toString() {\n  return String(this.ofType) + '!';\n};\n\nGraphQLNonNull.prototype.toJSON = function toJSON() {\n  return this.toString();\n};\n\nObject.defineProperty(GraphQLNonNull.prototype, SYMBOL_TO_STRING_TAG, {\n  get: function get() {\n    return 'GraphQLNonNull';\n  }\n}); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLNonNull);\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexport function assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL wrapping type.\"));\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nexport function assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL nullable type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\nexport function getNullableType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nexport function isNamedType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type);\n}\nexport function assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL named type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\nexport function getNamedType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    var unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nfunction resolveThunk(thunk) {\n  // $FlowFixMe[incompatible-use]\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\nfunction undefineIfEmpty(arr) {\n  return arr && arr.length > 0 ? arr : undefined;\n}\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function does not return a value (i.e. it returns\n * `undefined`) then an error will be raised and a `null` value will be returned\n * in the response. If the serialize function returns `null`, then no error will\n * be included in the response.\n *\n * Example:\n *\n *     const OddType = new GraphQLScalarType({\n *       name: 'Odd',\n *       serialize(value) {\n *         if (value % 2 === 1) {\n *           return value;\n *         }\n *       }\n *     });\n *\n */\n\n\nexport var GraphQLScalarType = /*#__PURE__*/function () {\n  function GraphQLScalarType(config) {\n    var _config$parseValue, _config$serialize, _config$parseLiteral;\n\n    var parseValue = (_config$parseValue = config.parseValue) !== null && _config$parseValue !== void 0 ? _config$parseValue : identityFunc;\n    this.name = config.name;\n    this.description = config.description;\n    this.specifiedByUrl = config.specifiedByUrl;\n    this.serialize = (_config$serialize = config.serialize) !== null && _config$serialize !== void 0 ? _config$serialize : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral = (_config$parseLiteral = config.parseLiteral) !== null && _config$parseLiteral !== void 0 ? _config$parseLiteral : function (node, variables) {\n      return parseValue(valueFromASTUntyped(node, variables));\n    };\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.specifiedByUrl == null || typeof config.specifiedByUrl === 'string' || devAssert(0, \"\".concat(this.name, \" must provide \\\"specifiedByUrl\\\" as a string, \") + \"but got: \".concat(inspect(config.specifiedByUrl), \".\"));\n    config.serialize == null || typeof config.serialize === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"serialize\\\" function. If this custom Scalar is also used as an input type, ensure \\\"parseValue\\\" and \\\"parseLiteral\\\" functions are also provided.\"));\n\n    if (config.parseLiteral) {\n      typeof config.parseValue === 'function' && typeof config.parseLiteral === 'function' || devAssert(0, \"\".concat(this.name, \" must provide both \\\"parseValue\\\" and \\\"parseLiteral\\\" functions.\"));\n    }\n  }\n\n  var _proto = GraphQLScalarType.prototype;\n\n  _proto.toConfig = function toConfig() {\n    var _this$extensionASTNod;\n\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByUrl: this.specifiedByUrl,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod = this.extensionASTNodes) !== null && _this$extensionASTNod !== void 0 ? _this$extensionASTNod : []\n    };\n  };\n\n  _proto.toString = function toString() {\n    return this.name;\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLScalarType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLScalarType';\n    }\n  }]);\n\n  return GraphQLScalarType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLScalarType);\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n *     const AddressType = new GraphQLObjectType({\n *       name: 'Address',\n *       fields: {\n *         street: { type: GraphQLString },\n *         number: { type: GraphQLInt },\n *         formatted: {\n *           type: GraphQLString,\n *           resolve(obj) {\n *             return obj.number + ' ' + obj.street\n *           }\n *         }\n *       }\n *     });\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         name: { type: GraphQLString },\n *         bestFriend: { type: PersonType },\n *       })\n *     });\n *\n */\nexport var GraphQLObjectType = /*#__PURE__*/function () {\n  function GraphQLObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.isTypeOf == null || typeof config.isTypeOf === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"isTypeOf\\\" as a function, \") + \"but got: \".concat(inspect(config.isTypeOf), \".\"));\n  }\n\n  var _proto2 = GraphQLObjectType.prototype;\n\n  _proto2.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto2.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto2.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto2.toString = function toString() {\n    return this.name;\n  };\n\n  _proto2.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLObjectType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLObjectType';\n    }\n  }]);\n\n  return GraphQLObjectType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLObjectType);\n\nfunction defineInterfaces(config) {\n  var _resolveThunk;\n\n  var interfaces = (_resolveThunk = resolveThunk(config.interfaces)) !== null && _resolveThunk !== void 0 ? _resolveThunk : [];\n  Array.isArray(interfaces) || devAssert(0, \"\".concat(config.name, \" interfaces must be an Array or a function which returns an Array.\"));\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return mapValue(fieldMap, function (fieldConfig, fieldName) {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field config must be an object.\"));\n    !('isDeprecated' in fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    fieldConfig.resolve == null || typeof fieldConfig.resolve === 'function' || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field resolver must be a function if \") + \"provided, but got: \".concat(inspect(fieldConfig.resolve), \".\"));\n    var argsConfig = (_fieldConfig$args = fieldConfig.args) !== null && _fieldConfig$args !== void 0 ? _fieldConfig$args : {};\n    isPlainObj(argsConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" args must be an object with argument names as keys.\"));\n    var args = objectEntries(argsConfig).map(function (_ref) {\n      var argName = _ref[0],\n          argConfig = _ref[1];\n      return {\n        name: argName,\n        description: argConfig.description,\n        type: argConfig.type,\n        defaultValue: argConfig.defaultValue,\n        deprecationReason: argConfig.deprecationReason,\n        extensions: argConfig.extensions && toObjMap(argConfig.extensions),\n        astNode: argConfig.astNode\n      };\n    });\n    return {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: args,\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      isDeprecated: fieldConfig.deprecationReason != null,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\n\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, function (field) {\n    return {\n      description: field.description,\n      type: field.type,\n      args: argsToArgsConfig(field.args),\n      resolve: field.resolve,\n      subscribe: field.subscribe,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode\n    };\n  });\n}\n/**\n * @internal\n */\n\n\nexport function argsToArgsConfig(args) {\n  return keyValMap(args, function (arg) {\n    return arg.name;\n  }, function (arg) {\n    return {\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode\n    };\n  });\n}\nexport function isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n *     const EntityType = new GraphQLInterfaceType({\n *       name: 'Entity',\n *       fields: {\n *         name: { type: GraphQLString }\n *       }\n *     });\n *\n */\nexport var GraphQLInterfaceType = /*#__PURE__*/function () {\n  function GraphQLInterfaceType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat(inspect(config.resolveType), \".\"));\n  }\n\n  var _proto3 = GraphQLInterfaceType.prototype;\n\n  _proto3.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto3.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto3.toConfig = function toConfig() {\n    var _this$extensionASTNod2;\n\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod2 = this.extensionASTNodes) !== null && _this$extensionASTNod2 !== void 0 ? _this$extensionASTNod2 : []\n    };\n  };\n\n  _proto3.toString = function toString() {\n    return this.name;\n  };\n\n  _proto3.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLInterfaceType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLInterfaceType';\n    }\n  }]);\n\n  return GraphQLInterfaceType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLInterfaceType);\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n *     const PetType = new GraphQLUnionType({\n *       name: 'Pet',\n *       types: [ DogType, CatType ],\n *       resolveType(value) {\n *         if (value instanceof Dog) {\n *           return DogType;\n *         }\n *         if (value instanceof Cat) {\n *           return CatType;\n *         }\n *       }\n *     });\n *\n */\nexport var GraphQLUnionType = /*#__PURE__*/function () {\n  function GraphQLUnionType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._types = defineTypes.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat(inspect(config.resolveType), \".\"));\n  }\n\n  var _proto4 = GraphQLUnionType.prototype;\n\n  _proto4.getTypes = function getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  };\n\n  _proto4.toConfig = function toConfig() {\n    var _this$extensionASTNod3;\n\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod3 = this.extensionASTNodes) !== null && _this$extensionASTNod3 !== void 0 ? _this$extensionASTNod3 : []\n    };\n  };\n\n  _proto4.toString = function toString() {\n    return this.name;\n  };\n\n  _proto4.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLUnionType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLUnionType';\n    }\n  }]);\n\n  return GraphQLUnionType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLUnionType);\n\nfunction defineTypes(config) {\n  var types = resolveThunk(config.types);\n  Array.isArray(types) || devAssert(0, \"Must provide Array of types or a function which returns such an array for Union \".concat(config.name, \".\"));\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n *     const RGBType = new GraphQLEnumType({\n *       name: 'RGB',\n *       values: {\n *         RED: { value: 0 },\n *         GREEN: { value: 1 },\n *         BLUE: { value: 2 }\n *       }\n *     });\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport var GraphQLEnumType\n/* <T> */\n= /*#__PURE__*/function () {\n  function GraphQLEnumType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(this._values.map(function (enumValue) {\n      return [enumValue.value, enumValue];\n    }));\n    this._nameLookup = keyMap(this._values, function (value) {\n      return value.name;\n    });\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n  }\n\n  var _proto5 = GraphQLEnumType.prototype;\n\n  _proto5.getValues = function getValues() {\n    return this._values;\n  };\n\n  _proto5.getValue = function getValue(name) {\n    return this._nameLookup[name];\n  };\n\n  _proto5.serialize = function serialize(outputValue) {\n    var enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent value: \").concat(inspect(outputValue)));\n    }\n\n    return enumValue.name;\n  };\n\n  _proto5.parseValue = function parseValue(inputValue)\n  /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      var valueStr = inspect(inputValue);\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent non-string value: \").concat(valueStr, \".\") + didYouMeanEnumValue(this, valueStr));\n    }\n\n    var enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new GraphQLError(\"Value \\\"\".concat(inputValue, \"\\\" does not exist in \\\"\").concat(this.name, \"\\\" enum.\") + didYouMeanEnumValue(this, inputValue));\n    }\n\n    return enumValue.value;\n  };\n\n  _proto5.parseLiteral = function parseLiteral(valueNode, _variables)\n  /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== Kind.ENUM) {\n      var valueStr = print(valueNode);\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent non-enum value: \").concat(valueStr, \".\") + didYouMeanEnumValue(this, valueStr), valueNode);\n    }\n\n    var enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      var _valueStr = print(valueNode);\n\n      throw new GraphQLError(\"Value \\\"\".concat(_valueStr, \"\\\" does not exist in \\\"\").concat(this.name, \"\\\" enum.\") + didYouMeanEnumValue(this, _valueStr), valueNode);\n    }\n\n    return enumValue.value;\n  };\n\n  _proto5.toConfig = function toConfig() {\n    var _this$extensionASTNod4;\n\n    var values = keyValMap(this.getValues(), function (value) {\n      return value.name;\n    }, function (value) {\n      return {\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      values: values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod4 = this.extensionASTNodes) !== null && _this$extensionASTNod4 !== void 0 ? _this$extensionASTNod4 : []\n    };\n  };\n\n  _proto5.toString = function toString() {\n    return this.name;\n  };\n\n  _proto5.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLEnumType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLEnumType';\n    }\n  }]);\n\n  return GraphQLEnumType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLEnumType);\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  var allNames = enumType.getValues().map(function (value) {\n    return value.name;\n  });\n  var suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) || devAssert(0, \"\".concat(typeName, \" values must be an object with value names as keys.\"));\n  return objectEntries(valueMap).map(function (_ref2) {\n    var valueName = _ref2[0],\n        valueConfig = _ref2[1];\n    isPlainObj(valueConfig) || devAssert(0, \"\".concat(typeName, \".\").concat(valueName, \" must refer to an object with a \\\"value\\\" key \") + \"representing an internal value but got: \".concat(inspect(valueConfig), \".\"));\n    !('isDeprecated' in valueConfig) || devAssert(0, \"\".concat(typeName, \".\").concat(valueName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    return {\n      name: valueName,\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      isDeprecated: valueConfig.deprecationReason != null,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: valueConfig.extensions && toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n *     const GeoPoint = new GraphQLInputObjectType({\n *       name: 'GeoPoint',\n *       fields: {\n *         lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *         lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *         alt: { type: GraphQLFloat, defaultValue: 0 },\n *       }\n *     });\n *\n */\nexport var GraphQLInputObjectType = /*#__PURE__*/function () {\n  function GraphQLInputObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineInputFieldMap.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n  }\n\n  var _proto6 = GraphQLInputObjectType.prototype;\n\n  _proto6.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto6.toConfig = function toConfig() {\n    var _this$extensionASTNod5;\n\n    var fields = mapValue(this.getFields(), function (field) {\n      return {\n        description: field.description,\n        type: field.type,\n        defaultValue: field.defaultValue,\n        extensions: field.extensions,\n        astNode: field.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      fields: fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod5 = this.extensionASTNodes) !== null && _this$extensionASTNod5 !== void 0 ? _this$extensionASTNod5 : []\n    };\n  };\n\n  _proto6.toString = function toString() {\n    return this.name;\n  };\n\n  _proto6.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLInputObjectType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLInputObjectType';\n    }\n  }]);\n\n  return GraphQLInputObjectType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLInputObjectType);\n\nfunction defineInputFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return mapValue(fieldMap, function (fieldConfig, fieldName) {\n    !('resolve' in fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field has a resolve property, but Input Types cannot define resolvers.\"));\n    return {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\n\nexport function isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: { name: 'Jon', num: '555-1234' },\n *     //   Jenny: { name: 'Jenny', num: '867-5309' } }\n *     const entriesByName = keyMap(\n *       phoneBook,\n *       entry => entry.name\n *     )\n *\n *     // { name: 'Jenny', num: '857-6309' }\n *     const jennyEntry = entriesByName['Jenny']\n *\n */\nexport default function keyMap(list, keyFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = item;\n    return map;\n  }, Object.create(null));\n}\n","var MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\n// eslint-disable-next-line no-redeclare\nexport default function didYouMean(firstArg, secondArg) {\n  var _ref = typeof firstArg === 'string' ? [firstArg, secondArg] : [undefined, firstArg],\n      subMessage = _ref[0],\n      suggestionsArg = _ref[1];\n\n  var message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  var suggestions = suggestionsArg.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  });\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  var selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  var lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n","export function isNonEmptyArray<T>(value?: ArrayLike<T>): value is Array<T> {\n  return Array.isArray(value) && value.length > 0;\n}\n","// The ordering of these imports is important, because it ensures the temporary\n// process.env.NODE_ENV polyfill is defined globally (if necessary) before we\n// import { isType } from 'graphql'. The instanceOf function that we really care\n// about (the one that uses process.env.NODE_ENV) is not exported from the\n// top-level graphql package, but isType uses instanceOf, and is exported.\nimport { remove } from 'ts-invariant/process';\nimport { isType } from 'graphql';\n\nexport function removeTemporaryGlobals() {\n  // Calling isType here just to make sure it won't be tree-shaken away,\n  // provided applyFixes is called elsewhere.\n  isType(null);\n  return remove();\n}\n","import { invariant } from \"ts-invariant\";\nimport { DEV } from \"../utilities\";\ninvariant(\"boolean\" === typeof DEV, DEV);\n\nimport { GraphQLError } from 'graphql';\n\nimport { isNonEmptyArray } from '../utilities';\nimport { ServerParseError } from '../link/http';\nimport { ServerError } from '../link/utils';\n\nexport function isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nconst generateErrorMessage = (err: ApolloError) => {\n  let message = '';\n  // If we have GraphQL errors present, add that to the error message.\n  if (isNonEmptyArray(err.graphQLErrors) || isNonEmptyArray(err.clientErrors)) {\n    const errors = ((err.graphQLErrors || []) as readonly Error[])\n      .concat(err.clientErrors || []);\n    errors.forEach((error: Error) => {\n      const errorMessage = error\n        ? error.message\n        : 'Error message not found.';\n      message += `${errorMessage}\\n`;\n    });\n  }\n\n  if (err.networkError) {\n    message += `${err.networkError.message}\\n`;\n  }\n\n  // strip newline from the end of the message\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nexport class ApolloError extends Error {\n  public message: string;\n  public graphQLErrors: ReadonlyArray<GraphQLError>;\n  public clientErrors: ReadonlyArray<Error>;\n  public networkError: Error | ServerParseError | ServerError | null;\n\n  // An object that can be used to provide some additional information\n  // about an error, e.g. specifying the type of error this is. Used\n  // internally within Apollo Client.\n  public extraInfo: any;\n\n  // Constructs an instance of ApolloError given a GraphQLError\n  // or a network error. Note that one of these has to be a valid\n  // value or the constructed error will be meaningless.\n  constructor({\n    graphQLErrors,\n    clientErrors,\n    networkError,\n    errorMessage,\n    extraInfo,\n  }: {\n    graphQLErrors?: ReadonlyArray<GraphQLError>;\n    clientErrors?: ReadonlyArray<Error>;\n    networkError?: Error | ServerParseError | ServerError | null;\n    errorMessage?: string;\n    extraInfo?: any;\n  }) {\n    super(errorMessage);\n    this.graphQLErrors = graphQLErrors || [];\n    this.clientErrors = clientErrors || [];\n    this.networkError = networkError || null;\n    this.message = errorMessage || generateErrorMessage(this);\n    this.extraInfo = extraInfo;\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = ApolloError.prototype;\n  }\n}\n","/**\n * The current status of a query’s execution in our system.\n */\nexport enum NetworkStatus {\n  /**\n   * The query has never been run before and the query is now currently running. A query will still\n   * have this network status even if a partial data result was returned from the cache, but a\n   * query was dispatched anyway.\n   */\n  loading = 1,\n\n  /**\n   * If `setVariables` was called and a query was fired because of that then the network status\n   * will be `setVariables` until the result of that query comes back.\n   */\n  setVariables = 2,\n\n  /**\n   * Indicates that `fetchMore` was called on this query and that the query created is currently in\n   * flight.\n   */\n  fetchMore = 3,\n\n  /**\n   * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n   * and the refetch request is currently in flight.\n   */\n  refetch = 4,\n\n  /**\n   * Indicates that a polling query is currently in flight. So for example if you are polling a\n   * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n   * a poll request has been sent but not resolved.\n   */\n  poll = 6,\n\n  /**\n   * No request is in flight for this query, and no errors happened. Everything is OK.\n   */\n  ready = 7,\n\n  /**\n   * No request is in flight for this query, but one or more errors were detected.\n   */\n  error = 8,\n}\n\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(\n  networkStatus?: NetworkStatus,\n): boolean {\n  return networkStatus ? networkStatus < 7 : false;\n}\n","import {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\nimport { invariant } from 'ts-invariant';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to saftey check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments = document.definitions.filter(\n    (x: DefinitionNode) => x.kind === 'FragmentDefinition'\n  );\n\n  const queries = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'query'\n  );\n\n  const mutations = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'mutation'\n  );\n\n  const subscriptions = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'subscription'\n  );\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n","import { DocumentNode } from 'graphql';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nimport { ApolloClient } from '../../core';\nimport { DocumentType, parser, operationName } from '../parser';\nimport { CommonOptions } from '../types/types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: any = {};\n  public client: ApolloClient<object>;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: any) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","import { equal } from '@wry/equality';\n\nimport { ApolloError } from '../../errors';\n\nimport {\n  ApolloClient,\n  NetworkStatus,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  ObservableQuery,\n  FetchMoreOptions,\n  UpdateQueryOptions,\n  DocumentNode,\n  TypedDocumentNode,\n} from '../../core';\n\nimport {\n  ObservableSubscription\n} from '../../utilities';\n\nimport { DocumentType } from '../parser';\nimport {\n  QueryResult,\n  QueryDataOptions,\n  QueryTuple,\n  QueryLazyOptions,\n  ObservableQueryFields,\n} from '../types/types';\nimport { OperationData } from './OperationData';\n\ntype ObservableQueryOptions<TData, TVars> =\n  ReturnType<QueryData<TData, TVars>[\"prepareObservableQueryOptions\"]>;\n\nexport class QueryData<TData, TVariables> extends OperationData<\n  QueryDataOptions<TData, TVariables>\n> {\n  public onNewData: () => void;\n  public currentObservable?: ObservableQuery<TData, TVariables>;\n  private currentSubscription?: ObservableSubscription;\n  private runLazy: boolean = false;\n  private lazyOptions?: QueryLazyOptions<TVariables>;\n  private previous: {\n    client?: ApolloClient<object>;\n    query?: DocumentNode | TypedDocumentNode<TData, TVariables>;\n    observableQueryOptions?: ObservableQueryOptions<TData, TVariables>;\n    result?: QueryResult<TData, TVariables>;\n    loading?: boolean;\n    options?: QueryDataOptions<TData, TVariables>;\n    error?: ApolloError;\n  } = Object.create(null);\n\n  constructor({\n    options,\n    context,\n    onNewData\n  }: {\n    options: QueryDataOptions<TData, TVariables>;\n    context: any;\n    onNewData: () => void;\n  }) {\n    super(options, context);\n    this.onNewData = onNewData;\n  }\n\n  public execute(): QueryResult<TData, TVariables> {\n    this.refreshClient();\n\n    const { skip, query } = this.getOptions();\n    if (skip || query !== this.previous.query) {\n      this.removeQuerySubscription();\n      this.removeObservable(!skip);\n      this.previous.query = query;\n    }\n\n    this.updateObservableQuery();\n\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  }\n\n  public executeLazy(): QueryTuple<TData, TVariables> {\n    return !this.runLazy\n      ? [\n          this.runLazyQuery,\n          {\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            called: false,\n            data: undefined\n          }\n        ]\n      : [this.runLazyQuery, this.execute()];\n  }\n\n  // For server-side rendering\n  public fetchData(): Promise<void> | boolean {\n    const options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    return new Promise(resolve => this.startQuerySubscription(resolve));\n  }\n\n  public afterExecute({ lazy = false }: { lazy?: boolean } = {}) {\n    this.isMounted = true;\n    const options = this.getOptions();\n    if (\n      this.currentObservable &&\n      !this.ssrInitiated() &&\n      !this.client.disableNetworkFetches\n    ) {\n      this.startQuerySubscription();\n    }\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    this.previousOptions = options;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    this.removeQuerySubscription();\n    this.removeObservable(true);\n    delete this.previous.result;\n  }\n\n  public getOptions() {\n    const options = super.getOptions();\n\n    if (this.lazyOptions) {\n      options.variables = {\n        ...options.variables,\n        ...this.lazyOptions.variables\n      } as TVariables;\n      options.context = {\n        ...options.context,\n        ...this.lazyOptions.context\n      };\n    }\n\n    // skip is not supported when using lazy query execution.\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  }\n\n  public ssrInitiated() {\n    return this.context && this.context.renderPromises;\n  }\n\n  private runLazyQuery = (options?: QueryLazyOptions<TVariables>) => {\n    this.cleanup();\n    this.runLazy = true;\n    this.lazyOptions = options;\n    this.onNewData();\n  };\n\n  private getExecuteSsrResult() {\n    const { ssr, skip } = this.getOptions();\n    const ssrDisabled = ssr === false;\n    const fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    const ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined,\n      stale: false,\n      client: this.client,\n      ...this.observableQueryFields(),\n    } as QueryResult<TData, TVariables>;\n\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      this.previous.result = ssrLoading;\n      return ssrLoading;\n    }\n\n    if (this.ssrInitiated()) {\n      const result = this.getExecuteResult() || ssrLoading;\n      if (result.loading && !skip) {\n        this.context.renderPromises!.addQueryPromise(this, () => null);\n      }\n      return result;\n    }\n  }\n\n  private prepareObservableQueryOptions() {\n    const options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    const displayName = options.displayName || 'Query';\n\n    // Set the fetchPolicy to cache-first for network-only and cache-and-network\n    // fetches for server side renders.\n    if (\n      this.ssrInitiated() &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return {\n      ...options,\n      displayName,\n      context: options.context,\n    };\n  }\n\n  private initializeObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    if (this.ssrInitiated()) {\n      this.currentObservable = this.context!.renderPromises!.getSSRObservable(\n        this.getOptions()\n      );\n    }\n\n    if (!this.currentObservable) {\n      const observableQueryOptions = this.prepareObservableQueryOptions();\n\n      this.previous.observableQueryOptions = {\n        ...observableQueryOptions,\n        children: void 0,\n      };\n      this.currentObservable = this.refreshClient().client.watchQuery({\n        ...observableQueryOptions\n      });\n\n      if (this.ssrInitiated()) {\n        this.context!.renderPromises!.registerSSRObservable(\n          this.currentObservable,\n          observableQueryOptions\n        );\n      }\n    }\n  }\n\n  private updateObservableQuery() {\n    // If we skipped initially, we may not have yet created the observable\n    if (!this.currentObservable) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    const newObservableQueryOptions = {\n      ...this.prepareObservableQueryOptions(),\n      children: void 0,\n    };\n\n    if (this.getOptions().skip) {\n      this.previous.observableQueryOptions = newObservableQueryOptions;\n      return;\n    }\n\n    if (\n      !equal(newObservableQueryOptions, this.previous.observableQueryOptions)\n    ) {\n      this.previous.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable\n        .setOptions(newObservableQueryOptions)\n        // The error will be passed to the child container, so we don't\n        // need to log it here. We could conceivably log something if\n        // an option was set. OTOH we don't log errors w/ the original\n        // query. See https://github.com/apollostack/react-apollo/issues/404\n        .catch(() => {});\n    }\n  }\n\n  // Setup a subscription to watch for Apollo Client `ObservableQuery` changes.\n  // When new data is received, and it doesn't match the data that was used\n  // during the last `QueryData.execute` call (and ultimately the last query\n  // component render), trigger the `onNewData` callback. If not specified,\n  // `onNewData` will fallback to the default `QueryData.onNewData` function\n  // (which usually leads to a query component re-render).\n  private startQuerySubscription(onNewData: () => void = this.onNewData) {\n    if (this.currentSubscription || this.getOptions().skip) return;\n\n    this.currentSubscription = this.currentObservable!.subscribe({\n      next: ({ loading, networkStatus, data }) => {\n        const previousResult = this.previous.result;\n\n        // Make sure we're not attempting to re-render similar results\n        if (\n          previousResult &&\n          previousResult.loading === loading &&\n          previousResult.networkStatus === networkStatus &&\n          equal(previousResult.data, data)\n        ) {\n          return;\n        }\n\n        onNewData();\n      },\n      error: error => {\n        this.resubscribeToQuery();\n        if (!error.hasOwnProperty('graphQLErrors')) throw error;\n\n        const previousResult = this.previous.result;\n        if (\n          (previousResult && previousResult.loading) ||\n          !equal(error, this.previous.error)\n        ) {\n          this.previous.error = error;\n          onNewData();\n        }\n      }\n    });\n  }\n\n  private resubscribeToQuery() {\n    this.removeQuerySubscription();\n\n    // Unfortunately, if `lastError` is set in the current\n    // `observableQuery` when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore it afterwards (so the subscription\n    // has a chance to stay open).\n    const { currentObservable } = this;\n    if (currentObservable) {\n      const last = currentObservable[\"last\"];\n      try {\n        currentObservable.resetLastResults();\n        this.startQuerySubscription();\n      } finally {\n        currentObservable[\"last\"] = last;\n      }\n    }\n  }\n\n  private getExecuteResult(): QueryResult<TData, TVariables> {\n    let result = this.observableQueryFields() as QueryResult<TData, TVariables>;\n    const options = this.getOptions();\n\n    // When skipping a query (ie. we're not querying for data but still want\n    // to render children), make sure the `data` is cleared out and\n    // `loading` is set to `false` (since we aren't loading anything).\n    //\n    // NOTE: We no longer think this is the correct behavior. Skipping should\n    // not automatically set `data` to `undefined`, but instead leave the\n    // previous data in place. In other words, skipping should not mandate\n    // that previously received data is all of a sudden removed. Unfortunately,\n    // changing this is breaking, so we'll have to wait until Apollo Client\n    // 4.0 to address this.\n    if (options.skip) {\n      result = {\n        ...result,\n        data: undefined,\n        error: undefined,\n        loading: false,\n        networkStatus: NetworkStatus.ready,\n        called: true,\n      };\n    } else if (this.currentObservable) {\n      // Fetch the current result (if any) from the store.\n      const currentResult = this.currentObservable.getCurrentResult();\n      const { data, loading, partial, networkStatus, errors } = currentResult;\n      let { error } = currentResult;\n\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      if (errors && errors.length > 0) {\n        error = new ApolloError({ graphQLErrors: errors });\n      }\n\n      result = {\n        ...result,\n        data,\n        loading,\n        networkStatus,\n        error,\n        called: true\n      };\n\n      if (loading) {\n        // Fall through without modifying result...\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.getLastResult() || ({} as any))\n            .data\n        });\n      } else {\n        const { fetchPolicy } = this.currentObservable.options;\n        const { partialRefetch } = options;\n        if (\n          partialRefetch &&\n          partial &&\n          (!data || Object.keys(data).length === 0) &&\n          fetchPolicy !== 'cache-only'\n        ) {\n          // When a `Query` component is mounted, and a mutation is executed\n          // that returns the same ID as the mounted `Query`, but has less\n          // fields in its result, Apollo Client's `QueryManager` returns the\n          // data as `undefined` since a hit can't be found in the cache.\n          // This can lead to application errors when the UI elements rendered by\n          // the original `Query` component are expecting certain data values to\n          // exist, and they're all of a sudden stripped away. To help avoid\n          // this we'll attempt to refetch the `Query` data.\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n      }\n    }\n\n    result.client = this.client;\n    // Store options as this.previousOptions.\n    this.setOptions(options, true);\n\n    const previousResult = this.previous.result;\n\n    this.previous.loading =\n      previousResult && previousResult.loading || false;\n\n    // Ensure the returned result contains previousData as a separate\n    // property, to give developers the flexibility of leveraging outdated\n    // data while new data is loading from the network. Falling back to\n    // previousResult.previousData when previousResult.data is falsy here\n    // allows result.previousData to persist across multiple results.\n    result.previousData = previousResult &&\n      (previousResult.data || previousResult.previousData);\n\n    this.previous.result = result;\n\n    // Any query errors that exist are now available in `result`, so we'll\n    // remove the original errors from the `ObservableQuery` query store to\n    // make sure they aren't re-displayed on subsequent (potentially error\n    // free) requests/responses.\n    this.currentObservable && this.currentObservable.resetQueryStoreErrors();\n\n    return result;\n  }\n\n  private handleErrorOrCompleted() {\n    if (!this.currentObservable || !this.previous.result) return;\n\n    const { data, loading, error } = this.previous.result;\n\n    if (!loading) {\n      const {\n        query,\n        variables,\n        onCompleted,\n        onError,\n        skip\n      } = this.getOptions();\n\n      // No changes, so we won't call onError/onCompleted.\n      if (\n        this.previousOptions &&\n        !this.previous.loading &&\n        equal(this.previousOptions.query, query) &&\n        equal(this.previousOptions.variables, variables)\n      ) {\n        return;\n      }\n\n      if (onCompleted && !error && !skip) {\n        onCompleted(data as TData);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  }\n\n  private removeQuerySubscription() {\n    if (this.currentSubscription) {\n      this.currentSubscription.unsubscribe();\n      delete this.currentSubscription;\n    }\n  }\n\n  private removeObservable(andDelete: boolean) {\n    if (this.currentObservable) {\n      this.currentObservable[\"tearDownQuery\"]();\n      if (andDelete) {\n        delete this.currentObservable;\n      }\n    }\n  }\n\n  private obsRefetch = (variables?: Partial<TVariables>) =>\n    this.currentObservable?.refetch(variables);\n\n  private obsFetchMore = (\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, TData> &\n      FetchMoreOptions<TData, TVariables>\n  ) => this.currentObservable?.fetchMore(fetchMoreOptions);\n\n  private obsUpdateQuery = <TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>\n    ) => TData\n  ) => this.currentObservable?.updateQuery(mapFn);\n\n  private obsStartPolling = (pollInterval: number) => {\n    this.currentObservable?.startPolling(pollInterval);\n  };\n\n  private obsStopPolling = () => {\n    this.currentObservable?.stopPolling();\n  };\n\n  private obsSubscribeToMore = <\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) => this.currentObservable?.subscribeToMore(options);\n\n  private observableQueryFields() {\n    return {\n      variables: this.currentObservable?.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    } as ObservableQueryFields<TData, TVariables>;\n  }\n}\n","export const canUseWeakMap = typeof WeakMap === 'function' && !(\n  typeof navigator === 'object' &&\n  navigator.product === 'ReactNative'\n);\n\nexport const canUseWeakSet = typeof WeakSet === 'function';\n","import * as React from 'react';\nimport { ApolloClient } from '../../core';\nimport { canUseWeakMap } from '../../utilities';\n\nexport interface ApolloContextValue {\n  client?: ApolloClient<object>;\n  renderPromises?: Record<any, any>;\n}\n\n// To make sure Apollo Client doesn't create more than one React context\n// (which can lead to problems like having an Apollo Client instance added\n// in one context, then attempting to retrieve it from another different\n// context), a single Apollo context is created and tracked in global state.\n// We use React.createContext as the key instead of just React to avoid\n// ambiguities between default and namespace React imports.\n\nconst cache = new (canUseWeakMap ? WeakMap : Map)<\n  typeof React.createContext,\n  React.Context<ApolloContextValue>\n>();\n\nexport function getApolloContext() {\n  let context = cache.get(React.createContext)!;\n  if (!context) {\n    context = React.createContext<ApolloContextValue>({});\n    context.displayName = 'ApolloContext';\n    cache.set(React.createContext, context);\n  }\n  return context;\n}\n\nexport { getApolloContext as resetApolloContext }\n","import { useContext, useEffect, useReducer, useRef } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport {\n  QueryHookOptions,\n  QueryDataOptions,\n  QueryTuple,\n  QueryResult,\n} from '../../types/types';\nimport { QueryData } from '../../data';\nimport { useDeepMemo } from './useDeepMemo';\nimport { OperationVariables } from '../../../core';\nimport { getApolloContext } from '../../context';\nimport { useAfterFastRefresh } from './useAfterFastRefresh';\n\nexport function useBaseQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>,\n  lazy = false\n) {\n  const context = useContext(getApolloContext());\n  const [tick, forceUpdate] = useReducer(x => x + 1, 0);\n  const updatedOptions = options ? { ...options, query } : { query };\n\n  const queryDataRef = useRef<QueryData<TData, TVariables>>();\n  const queryData = queryDataRef.current || (\n    queryDataRef.current = new QueryData<TData, TVariables>({\n      options: updatedOptions as QueryDataOptions<TData, TVariables>,\n      context,\n      onNewData() {\n        if (!queryData.ssrInitiated()) {\n          // When new data is received from the `QueryData` object, we want to\n          // force a re-render to make sure the new data is displayed. We can't\n          // force that re-render if we're already rendering however so to be\n          // safe we'll trigger the re-render in a microtask. In case the\n          // component gets unmounted before this callback fires, we re-check\n          // queryDataRef.current.isMounted before calling forceUpdate().\n          Promise.resolve().then(() => queryDataRef.current && queryDataRef.current.isMounted && forceUpdate());\n        } else {\n          // If we're rendering on the server side we can force an update at\n          // any point.\n          forceUpdate();\n        }\n      }\n    })\n  );\n\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  // `onError` and `onCompleted` callback functions will not always have a\n  // stable identity, so we'll exclude them from the memoization key to\n  // prevent `afterExecute` from being triggered un-necessarily.\n  const memo = {\n    options: {\n      ...updatedOptions,\n      onError: void 0,\n      onCompleted: void 0\n    } as QueryHookOptions<TData, TVariables>,\n    context,\n    tick\n  };\n\n  const result = useDeepMemo(\n    () => (lazy ? queryData.executeLazy() : queryData.execute()),\n    memo\n  );\n\n  const queryResult = lazy\n    ? (result as QueryTuple<TData, TVariables>)[1]\n    : (result as QueryResult<TData, TVariables>);\n\n  if (__DEV__) {\n    // ensure we run an update after refreshing so that we reinitialize\n    useAfterFastRefresh(forceUpdate);\n  }\n\n  useEffect(() => {\n    return () => {\n      queryData.cleanup();\n      // this effect can run multiple times during a fast-refresh\n      // so make sure we clean up the ref\n      queryDataRef.current = void 0;\n    }\n  }, []);\n\n  useEffect(() => queryData.afterExecute({ lazy }), [\n    queryResult.loading,\n    queryResult.networkStatus,\n    queryResult.error,\n    queryResult.data,\n    queryData.currentObservable,\n  ]);\n\n  return result;\n}\n","import { useRef } from 'react';\nimport { equal } from '@wry/equality';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nexport function useDeepMemo<TKey, TValue>(\n  memoFn: () => TValue,\n  key: TKey\n): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n","import { useEffect, useRef } from \"react\";\n\n/**\n * This hook allows running a function only immediately after a react\n * fast refresh or live reload.\n *\n * Useful in order to ensure that we can reinitialize things that have been\n * disposed by cleanup functions in `useEffect`.\n * @param effectFn a function to run immediately after a fast refresh\n */\nexport function useAfterFastRefresh(effectFn: () => unknown) {\n  if (__DEV__) {\n    const didRefresh = useRef(false);\n    useEffect(() => {\n      return () => {\n        // Detect fast refresh, only runs multiple times in fast refresh\n        didRefresh.current = true;\n      };\n    }, []);\n\n    useEffect(() => {\n      if (didRefresh.current === true) {\n        // This block only runs after a fast refresh\n        didRefresh.current = false;\n        effectFn();\n      }\n    }, [])\n  }\n}\n","import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { QueryHookOptions, QueryResult } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    typeof body === 'string' || devAssert(0, \"Body must be a string. Received: \".concat(inspect(body), \".\"));\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Source, isSource } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","import { __assign } from \"tslib\";\nimport { parse } from 'graphql';\nvar docCache = new Map();\nvar fragmentSourceMap = new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\nfunction normalize(string) {\n    return string.replace(/[\\s,]+/g, ' ').trim();\n}\nfunction cacheKeyFromLoc(loc) {\n    return normalize(loc.source.body.substring(loc.start, loc.end));\n}\nfunction processFragments(ast) {\n    var seenKeys = new Set();\n    var definitions = [];\n    ast.definitions.forEach(function (fragmentDefinition) {\n        if (fragmentDefinition.kind === 'FragmentDefinition') {\n            var fragmentName = fragmentDefinition.name.value;\n            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n            var sourceKeySet = fragmentSourceMap.get(fragmentName);\n            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n                if (printFragmentWarnings) {\n                    console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n                        + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n                        + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n                }\n            }\n            else if (!sourceKeySet) {\n                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n            }\n            sourceKeySet.add(sourceKey);\n            if (!seenKeys.has(sourceKey)) {\n                seenKeys.add(sourceKey);\n                definitions.push(fragmentDefinition);\n            }\n        }\n        else {\n            definitions.push(fragmentDefinition);\n        }\n    });\n    return __assign(__assign({}, ast), { definitions: definitions });\n}\nfunction stripLoc(doc) {\n    var workSet = new Set(doc.definitions);\n    workSet.forEach(function (node) {\n        if (node.loc)\n            delete node.loc;\n        Object.keys(node).forEach(function (key) {\n            var value = node[key];\n            if (value && typeof value === 'object') {\n                workSet.add(value);\n            }\n        });\n    });\n    var loc = doc.loc;\n    if (loc) {\n        delete loc.startToken;\n        delete loc.endToken;\n    }\n    return doc;\n}\nfunction parseDocument(source) {\n    var cacheKey = normalize(source);\n    if (!docCache.has(cacheKey)) {\n        var parsed = parse(source, {\n            experimentalFragmentVariables: experimentalFragmentVariables\n        });\n        if (!parsed || parsed.kind !== 'Document') {\n            throw new Error('Not a valid GraphQL document.');\n        }\n        docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n    }\n    return docCache.get(cacheKey);\n}\nexport function gql(literals) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (typeof literals === 'string') {\n        literals = [literals];\n    }\n    var result = literals[0];\n    args.forEach(function (arg, i) {\n        if (arg && arg.kind === 'Document') {\n            result += arg.loc.source.body;\n        }\n        else {\n            result += arg;\n        }\n        result += literals[i + 1];\n    });\n    return parseDocument(result);\n}\nexport function resetCaches() {\n    docCache.clear();\n    fragmentSourceMap.clear();\n}\nexport function disableFragmentWarnings() {\n    printFragmentWarnings = false;\n}\nexport function enableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = true;\n}\nexport function disableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = false;\n}\nvar extras = {\n    gql: gql,\n    resetCaches: resetCaches,\n    disableFragmentWarnings: disableFragmentWarnings,\n    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables\n};\n(function (gql_1) {\n    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\ngql[\"default\"] = gql;\nexport default gql;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}