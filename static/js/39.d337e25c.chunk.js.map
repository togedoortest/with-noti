{"version":3,"sources":["../node_modules/reactstrap/es/CardTitle.js","views/Candidate/Sidebar/index.js","views/Candidate/index.js"],"names":["propTypes","tag","tagPropType","className","PropTypes","string","cssModule","object","CardTitle","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","CandidateSidebar","user","setUser","submit","userID","confirmAlert","title","message","buttons","label","href","style","color","onClick","localStorage","removeItem","logout","res","console","log","auth2","window","gapi","getAuthInstance","signOut","then","disconnect","onLogoutFailure","signOutgoogle","error","handleLogout","axios","delete","catch","err","Card","CardImg","src","picture","CardBody","firstName","lastName","ListGroup","ListGroupItem","exact","to","icon","faUserPlus","faSuitcase","faEdit","faCheckSquare","faTag","CardFooter","id","faTrashAlt","AppliedJob","lazy","ProfileSetting","Resume","Favourite","Pricing","CreatePost","EditPost","ManageJobs","Routes","path","useRouteMatch","useState","token","getItem","config2","headers","useEffect","get","data","setAppliesProjects","element","Container","Row","Col","lg","md","sm","Sidebar","fallback","render","withTitle","component","userAppliedProject"],"mappings":"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","file":"static/js/39.d337e25c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","\nimport {\n    Card,\n    CardImg,\n    CardBody,\n    CardTitle,\n    CardFooter,\n    ListGroup,\n    ListGroupItem,\n    Progress,\n} from 'reactstrap';\nimport { NavLink, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSuitcase,\n    faUserPlus,\n    faEdit,\n    faCheckSquare,\n    faTag,\n    faPowerOff,\n    faTrashAlt,\n} from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\n\n\nconst CandidateSidebar = ({ user, setUser }) => {\n\n    const handleLogout = () => {\n        try {\n\n            localStorage.removeItem('token');\n            localStorage.removeItem('email');\n            localStorage.removeItem('id');\n            //google\n\n            const logout = (res) => {\n                console.log('out google');\n                console.log(res);\n\n            };\n            const signOutgoogle = () => {\n                const auth2 = window.gapi.auth2.getAuthInstance();\n                if (auth2 != null) {\n                    auth2.signOut().then(auth2.disconnect().then(logout));\n                    // userSubject.next(null);\n\n                } else {\n                    this.props.onLogoutFailure();\n                }\n            };\n            signOutgoogle();\n            // end google\n\n            localStorage.removeItem('token');\n            localStorage.removeItem('email');\n            localStorage.removeItem('id');\n\n            // userSubject.next(null);\n\n\n        } catch (error) {\n            console.log(error);\n        }\n        setUser({})\n\n    };\n\n\n    const submit = (userID) => {\n\n\n        confirmAlert({\n            title: 'Confirm to delete profile',\n            message: 'Are you sure to delete the profile ?.',\n            buttons: [\n                {\n                    label: <a href=\"/\" style={{ color: 'white' }}> Yes </a>,\n                    // label: 'Yes',\n                    onClick: () => {\n                        handleLogout(),\n                            console.log(userID)\n                        axios.delete(`https://www.togedoortestgo.site/graphql/accounts/${userID}`)\n                            .then((res) => {\n\n                                try {\n\n                                    localStorage.removeItem('token');\n                                    localStorage.removeItem('email');\n                                    localStorage.removeItem('id');\n                                    //google\n\n                                    const logout = (res) => {\n                                        console.log('out google');\n                                        console.log(res);\n\n                                    };\n                                    const signOutgoogle = () => {\n                                        const auth2 = window.gapi.auth2.getAuthInstance();\n                                        if (auth2 != null) {\n                                            auth2.signOut().then(auth2.disconnect().then(logout));\n                                            // userSubject.next(null);\n\n                                        } else {\n                                            this.props.onLogoutFailure();\n                                        }\n                                    };\n                                    signOutgoogle();\n                                    // end google\n\n                                    localStorage.removeItem('token');\n                                    localStorage.removeItem('email');\n                                    localStorage.removeItem('id');\n\n                                    // userSubject.next(null);\n\n\n                                } catch (error) {\n                                    console.log(error);\n                                }\n                                console.log(res);\n                            }).catch((err) => {\n                                console.log(err);\n                            })\n                    }\n                },\n                {\n                    label: 'No',\n                    // onClick: () => alert('Click No')\n                }\n            ]\n        })\n    };\n\n    return (\n        <Card className='sidebar-nav mb-6'>\n            <CardImg src={user.picture} />\n            <CardBody className='text-center'>\n                <CardTitle tag='h5'>\n                    {user.firstName} {user.lastName}\n                </CardTitle>\n            </CardBody>\n            <CardBody className='p-0'>\n                <ListGroup>\n                    <ListGroupItem>\n                        <NavLink exact to='/candidate/profile'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faUserPlus} />\n                            Profile setting\n                        </NavLink>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <a href='/candidate/manage'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faSuitcase} />\n                            Manage projects\n                        </a>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <a href='/candidate/post'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faEdit} />\n                            Post new project\n                        </a>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <NavLink exact to='/candidate/apply'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faCheckSquare} />\n                            Applied project\n                        </NavLink>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <NavLink exact to='/candidate/plan'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faTag} />\n                            Pricing plans\n                        </NavLink>\n                    </ListGroupItem>\n                </ListGroup>\n            </CardBody>\n            <CardFooter className='bg-white p-0 py-3'>\n                <ListGroup>\n                    <ListGroupItem onClick={() => { submit(user.id) }}>\n                        <Link>\n                            {' '}\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faTrashAlt} />\n                            Delete profile\n                        </Link>\n                    </ListGroupItem>\n                </ListGroup>\n            </CardFooter>\n        </Card>\n    );\n};\n\nexport default CandidateSidebar;\n","import React, { Suspense, lazy, useState, useEffect } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport withTitle from 'src/components/TitleComponent';\nimport { SubFallback } from 'src/components/Fallback';\nimport Sidebar from './Sidebar';\nimport axios from 'axios';\nconst Dashboard = lazy(() => import('./Dashboard'));\nconst AppliedJob = lazy(() => import('./AppliedJob'));\nconst ProfileSetting = lazy(() => import('./ProfileSetting'));\nconst Resume = lazy(() => import('./Resume'));\nconst Favourite = lazy(() => import('./Favourite'));\nconst Pricing = lazy(() => import('./Pricing'));\nconst CreatePost = lazy(() => import('./CreatePost'));\nconst EditPost = lazy(() => import('./EditPost'));\nconst ManageJobs = lazy(() => import('./ManageJob'));\n\nconst Routes = () => {\n    const { path } = useRouteMatch();\n    const [user, setUser] = useState({});\n    const token = localStorage.getItem('token');\n\n    var config2 = {\n        headers: {\n            'Authorization': token\n        }\n    }\n\n    const editUser = (eTargetValue, eTargetName) => {\n        console.log(eTargetValue, eTargetName)\n        setUser({ ...user, [eTargetName]: eTargetValue });\n        console.log(user)\n        // updateUser(user.id, user)\n    }\n\n\n\n    useEffect(() => {\n        function fetchData() {\n            axios.get(`https://www.togedoortestgo.site/graphql/accounts/${localStorage.id}`, config2).then((res) => {\n                setUser(res.data);\n            });\n        }\n        fetchData();\n    }, [token]);\n\n    const setAppliesProjects = (element) => {\n        setUser(element)\n    }\n\n\n    return (\n        <Container className='pt-8'>\n            <Row>\n                <Col lg={3} md={12} sm={12}>\n                    <Sidebar user={user} setUser={setUser} />\n                </Col>\n                <Col lg={9} md={12} sm={12}>\n                    <Suspense fallback={<SubFallback />}>\n                        <Switch>\n                            <Route\n                                exact\n                                path={`${path}/edit/:serviceID`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: EditPost,\n                                        title: 'Edit Post',\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/apply`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: AppliedJob,\n                                        title: 'Candidate applied projects',\n                                        user: user,\n                                        userAppliedProject: (setAppliesProjects),\n                                        ...props,\n                                    })\n                                }\n                                user={user}\n                            />\n                            <Route\n                                exact\n                                path={`${path}/profile`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: ProfileSetting,\n                                        title: 'Edit candidate profile',\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/manage`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: ManageJobs,\n                                        title: 'Manage projects',\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/post`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: CreatePost,\n                                        title: 'Post new project',\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/resume`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: Resume,\n                                        title: 'Candidates resume',\n                                        user: user,\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/favourite`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: Favourite,\n                                        user: user,\n                                        title: 'Favorite projects',\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/plan`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: Pricing,\n                                        title: 'Pricing plans',\n                                        ...props,\n                                    })\n                                }\n                            />\n                        </Switch>\n                    </Suspense>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\n\nexport default Routes;\n\n"],"sourceRoot":""}