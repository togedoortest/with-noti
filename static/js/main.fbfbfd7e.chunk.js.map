{"version":3,"sources":["redux/utils/setAuthToken.js","views/services/account.service.js","views/Signin/index.module.css","components/SocialLink/index.js","components/Fallback/index.js","views/services/alert.service.js","views/services/index.js","assets/images/Signin/login-left2.jpg","components/LoginItem/index.js","redux/auth/types.js","views/helpers/fetch-wrapper.js","views/Signin/index.js","components/Header/MenuBar/index.js","components/Header/ButtonGroups/index.js","components/Header/Logo/index.js","components/Header/Navigation/index.js","components/Header/index.js","components/Footer/FooNav/index.js","Chat/components/Login.js","Chat/hooks/useLocalStorage.js","Chat/contexts/SocketProvider.js","Chat/contexts/ConversationsProvider.js","Chat/components/Conversations.js","Chat/components/ContactsOLD.js","Chat/components/NewContactModal.js","Chat/components/NewConversationModal.js","Chat/components/Sidebar.js","Chat/components/OpenConversation.js","Chat/components/Dashboard.js","Chat/contexts/ContactsProvider.js","Chat/components/Chat.js","views/helpers/fake-backend.js","views/helpers/history.js","views/account/VerifyEmail.jsx","views/account/ForgotPassword.jsx","views/account/ResetPassword.jsx","views/account/Login.jsx","views/account/Register.jsx","views/account/Index.jsx","views/App/index.js","index.js","components/TitleComponent/index.js","components/LoginItem/index.module.css","redux/auth/actions.js","redux/auth/thunks.js","redux/auth/reducers.js","redux/index.js","store.js","redux/utils/api.js"],"names":["setAuthToken","token","id","api","defaults","headers","common","localStorage","setItem","removeItem","console","log","refreshTokenTimeout","userSubject","BehaviorSubject","baseUrl","email","password","a","fetchWrapper","post","user","next","startRefreshTokenTimer","logout","clearTimeout","refreshToken","get","params","put","value","delete","x","jwtToken","JSON","parse","atob","split","timeout","Date","exp","getTime","now","setTimeout","accountService","login","register","verifyEmail","forgotPassword","validateResetToken","resetPassword","confirmPassword","getAll","getById","create","update","asObservable","module","exports","SocialLink","props","parentClass","childClass","to","type","msg","className","title","icon","faFacebookF","faTwitter","faLinkedinIn","faGooglePlusG","faPinterestP","faCommentDots","SubFallback","Fallback","alertSubject","Subject","defaultId","alertService","onAlert","pipe","filter","success","message","options","error","alert","AlertType","info","warn","clear","autoClose","undefined","connect","state","isAuthenticated","auth","ApiGoogle","responseGoogle","response","Card","CardImg","width","src","LoginLeft","alt","CardImgOverlay","height","CardBody","cls","List","ListGroup","ListGroupItem","color","render","renderProps","Button","onClick","disabled","faGoogle","clientId","buttonText","onSuccess","onFailure","cookiePolicy","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","EDIT_USER_REQUEST","EDIT_USER_SUCCESS","EDIT_USER_FAIL","ACCOUNT_DELETED","url","body","config1","authHeader","axios","then","handleResponse","config","method","catch","userValue","isLoggedIn","isApiUrl","startsWith","Authorization","data","statusText","includes","status","Promise","reject","useForm","handleSubmit","control","errors","formState","useState","isAuthenticatedGoogle","setIsAuthenticatedGoogle","formData","setFormData","onChange","e","val","fn","target","name","emailValidation","rules","required","pattern","errorMsg","passValidation","minLength","md","lg","onSubmit","from","location","pathname","history","push","field","inputplaceholder","placeholder","autoComplete","addonType","faEnvelope","faLock","check","block","Menubar","hideBorder","content","faHome","faUserEdit","faFileArchive","href","faSms","faIdCard","res","auth2","window","gapi","getAuthInstance","signOut","disconnect","onLogoutFailure","signOutgoogle","setUser","faSignOutAlt","open","setOpen","wrapperClassName","onToggle","header","faTimes","faBars","dropdownOpen","setDropdownOpen","getItem","config2","useEffect","Dropdown","isOpen","toggle","prevState","DropdownToggle","Media","left","object","picture","style","marginTop","heading","tag","firstName","lastName","DropdownMenu","NavItem","exact","faSuitcase","Logo","Navigation","visable","setVisable","resetNavBoc","classnames","onMouseLeave","Navbar","Nav","onMouseEnter","setVisible","disableCompensation","topOffset","isSticky","fluid","Row","Col","xl","sm","xs","faSquare","Login","useLocalStorage","key","initialValue","prefixedKey","jsonValue","setValue","stringify","SocketContext","React","createContext","SocketProvider","children","socket","setSocket","newSocket","io","path","withCredentials","extraHeaders","query","close","Provider","ConversationsContext","Isminmized","useConversations","useContext","ConversationsProvider","setConversations","setSelectedConversationIndex","ConversationAndID","setConversationAndID","addMessageToConversation","useCallback","text","Push","focus","this","conversations","fetchData","on","off","selectedConversation","sendMessage","recipients","emit","Chatting","MyId","FuncIsmimized","isminmized","FuncDeleteConversation","deleteId","DeleteId","ConnectedUserID","reload","selectConversationIndex","createConversation","prevConversations","messages","addEventListener","Conversations","variant","map","conversation","index","Item","float","firstname","action","confirmAlert","buttons","label","marginRight","paddingTop","paddingBottom","paddingRight","paddingLeft","backgroundColor","top","right","fontSize","borderRadius","notRead","Contacts","NewContactModal","NewConversationModal","ChattingWith","CONVERSATIONS_KEY","Sidebar","activeKey","setActiveKey","modalOpen","setModalOpen","conversationsOpen","closeModal","Tab","Container","onSelect","Content","Pane","eventKey","Modal","show","onHide","withRouter","match","setText","setRef","node","scrollIntoView","smooth","ObjWithConversation","find","Messages","Topic","topic","lastMessage","length","ref","substring","getConversationById","Form","preventDefault","Group","InputGroup","Control","as","resize","Append","Dashboard","setshow","funcShow","ContactsContext","ContactsProvider","contacts","setContacts","createContact","prevContacts","useBeforeunload","event","onIdSubmit","usersKey","createBrowserHistory","VerifyEmail","EmailStatus","emailStatus","queryString","search","replace","keepAfterRouteChange","RemoveKoken","getBody","ForgotPassword","validationSchema","Yup","shape","initialValues","setSubmitting","finally","touched","isSubmitting","component","ResetPassword","TokenStatus","setToken","tokenStatus","setTokenStatus","min","oneOf","getForm","registerUser","acceptTerms","jobTitle","aboutMe","fields","setStatus","htmlFor","Account","store","Register","LayoutOne","lazy","Blog","Candidate","Employer","About","ContactUs","NotFound","Pricing","Company","CompanyDetails","Job","JobDetails","Signup","Signin","useLocation","fallback","slice","withTitle","Chat","dispatch","loadUser","ReactDOM","document","getElementById","TitleComponent","Component","loginSuccess","payload","loginFail","tokenId","updateUser","userID","patch","err","initialState","loading","combineReducers","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","baseURL","interceptors","use"],"mappings":"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","file":"static/js/main.fbfbfd7e.chunk.js","sourcesContent":["import api from \"./api\";\n\nconst setAuthToken = (token,id) => {\n  if (token) {\n    api.defaults.headers.common[\"Authorization\"] = token;\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"id\", id);\n  } else {\n    delete api.defaults.headers.common[\"Authorization\"];\n    localStorage.removeItem(\"token\");\n    console.log(\"deleted token\");\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { BehaviorSubject } from 'rxjs';\nimport { fetchWrapper } from '../helpers/fetch-wrapper';\n\nconst userSubject = new BehaviorSubject(null);\nconst baseUrl = 'https://www.togedoortestgo.site/graphql/accounts';\n\n// function authHeader(url) {\n//     // return auth header with jwt if user is logged in and request is to the api url\n//     const user = accountService.userValue;\n//     const isLoggedIn = user && user.jwtToken;\n//     const isApiUrl = url.startsWith('https://www.togedoortestgo.site/graphql');\n//     console.log('user:_', user);\n//     console.log('isLoggedIn:_', isLoggedIn);\n//     console.log('isApiUrl:_', isApiUrl);\n\n//     if (isLoggedIn && isApiUrl) {\n//         return { Authorization: `Bearer ${user.jwtToken}` };\n//     } else {\n//         console.log('{} nothing');\n//         return {};\n//     }\n// }\n\nasync function login(email, password) {\n    const user = await fetchWrapper.post(`${baseUrl}/authenticate`, { email, password });\n    console.log(user);\n    // publish user to subscribers and start timer to refresh token\n    userSubject.next(user);\n    startRefreshTokenTimer();\n    return user;\n}\n\nfunction logout() {\n    // revoke token, stop refresh timer, publish null to user subscribers and redirect to login page\n    fetchWrapper.post(`${baseUrl}/revoke-token`, {});\n    stopRefreshTokenTimer();\n    userSubject.next(null);\n    // history.push('/account/login');\n}\n\nasync function refreshToken() {\n    const user = await fetchWrapper.post(`${baseUrl}/refresh-token`, {});\n    // publish user to subscribers and start timer to refresh token\n    userSubject.next(user);\n    startRefreshTokenTimer();\n    console.log(user);\n    return user;\n}\n\nfunction register(params) {\n    return fetchWrapper.post(`${baseUrl}/register`, params);\n}\n\nfunction verifyEmail(token) {\n    return fetchWrapper.post(`${baseUrl}/verify-email`, { token });\n}\n\nfunction forgotPassword(email) {\n    return fetchWrapper.post(`${baseUrl}/forgot-password`, { email });\n}\n\nfunction validateResetToken(token) {\n    return fetchWrapper.post(`${baseUrl}/validate-reset-token`, { token });\n}\n\nfunction resetPassword({ token, password, confirmPassword }) {\n    return fetchWrapper.post(`${baseUrl}/reset-password`, { token, password, confirmPassword });\n}\n\nasync function getAll() {\n    return await fetchWrapper.get(baseUrl);\n}\n\nfunction getById(id) {\n    return fetchWrapper.get(`${baseUrl}/${id}`);\n}\n\nfunction create(params) {\n    return fetchWrapper.post(baseUrl, params);\n}\n\nasync function update(id, params) {\n    const user = await fetchWrapper.put(`${baseUrl}/${id}`, params);\n    // update stored user if the logged in user updated their own record\n    if (user.id === userSubject.value.id) {\n        // publish updated user to subscribers\n        user = { ...userSubject.value, ...user };\n        userSubject.next(user);\n    }\n    return user;\n}\n\n// prefixed with underscore because 'delete' is a reserved word in javascript\nasync function _delete(id) {\n    const x = await fetchWrapper.delete(`${baseUrl}/${id}`);\n    // auto logout if the logged in user deleted their own record\n    if (id === userSubject.value.id) {\n        logout();\n    }\n    return x;\n}\n\n// helper functions\n\nlet refreshTokenTimeout;\n\nfunction startRefreshTokenTimer() {\n    // parse json object from base64 encoded jwt token\n    const jwtToken = JSON.parse(atob(userSubject.value.jwtToken.split('.')[1]));\n\n    // set a timeout to refresh the token a minute before it expires\n    const expires = new Date(jwtToken.exp * 1000);\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\n    refreshTokenTimeout = setTimeout(refreshToken, timeout);\n}\n\nfunction stopRefreshTokenTimer() {\n    clearTimeout(refreshTokenTimeout);\n}\n\nexport const accountService = {\n    login,\n    logout,\n    refreshToken,\n    register,\n    verifyEmail,\n    forgotPassword,\n    validateResetToken,\n    resetPassword,\n    getAll,\n    getById,\n    create,\n    update,\n    delete: _delete,\n    user: userSubject.asObservable(),\n    get userValue() {\n        console.log(userSubject);\n        return userSubject.value;\n    },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMsg\":\"Signin_errorMsg__TRrsb\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFacebookF,\n  faTwitter,\n  faLinkedinIn,\n  faGooglePlusG,\n  faPinterestP,\n} from '@fortawesome/free-brands-svg-icons';\nimport { faCommentDots } from '@fortawesome/free-regular-svg-icons';\n\nconst SocialLink = (props) => {\n  const { parentClass, childClass, to, type, msg } = props;\n  return (\n    <ul className={`social-link d-flex m-0 p-0 ${parentClass}`}>\n      <li className=\"mr-2\">\n        <Link\n          className={` ${childClass && childClass}`}\n          title=\"Facebook\"\n          to={to || '#'}\n        >\n          <FontAwesomeIcon icon={faFacebookF} />\n        </Link>\n      </li>\n      <li className=\"mr-2\">\n        <Link\n          className={` ${childClass && childClass}`}\n          title=\"Twitter\"\n          to={to || '#'}\n        >\n          <FontAwesomeIcon icon={faTwitter} />\n        </Link>\n      </li>\n      <li className=\"mr-2\">\n        <Link\n          className={` ${childClass && childClass}`}\n          title=\"Linkedin\"\n          to={to || '#'}\n        >\n          <FontAwesomeIcon icon={faLinkedinIn} />\n        </Link>\n      </li>\n      <li>\n        <Link\n          className={` ${childClass && childClass}`}\n          title=\"Google\"\n          to={to || '#'}\n        >\n          <FontAwesomeIcon icon={faGooglePlusG} />\n        </Link>\n      </li>\n      {type === 'bloger' && (\n        <>\n          <li>\n            <Link\n              className={` ${childClass && childClass}`}\n              title=\"Google\"\n              to={to || '#'}\n            >\n              <FontAwesomeIcon icon={faPinterestP} />\n            </Link>\n          </li>\n          <li>\n            <Link\n              className={` ${childClass && childClass} position-relative`}\n              title=\"Google\"\n              to={to || '#'}\n            >\n              <FontAwesomeIcon icon={faCommentDots} />\n              <span className=\"tool-tip position-absolute bg-primary text-white font-10 rounded-circle d-flex justify-content-center align-items-center\">\n                {msg}\n              </span>\n            </Link>\n          </li>\n        </>\n      )}\n    </ul>\n  );\n};\n\nexport default SocialLink;\n","import React from 'react';\n\nexport const SubFallback = () => {\n  return (\n    <div className=\"sk-cube-grid\">\n      <div className=\"sk-cube sk-cube1\" />\n      <div className=\"sk-cube sk-cube2\" />\n      <div className=\"sk-cube sk-cube3\" />\n      <div className=\"sk-cube sk-cube4\" />\n      <div className=\"sk-cube sk-cube5\" />\n      <div className=\"sk-cube sk-cube6\" />\n      <div className=\"sk-cube sk-cube7\" />\n      <div className=\"sk-cube sk-cube8\" />\n      <div className=\"sk-cube sk-cube9\" />\n    </div>\n  );\n};\n\nconst Fallback = () => {\n  return (\n    <div className=\"jb_preloader position-fixed bg-white\">\n      <div className=\"spinner_wrap position-absolute\">\n        <div className=\"spinner bg-white rounded-circle\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Fallback;\n","import { Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nconst alertSubject = new Subject();\nconst defaultId = 'default-alert';\n\nexport const alertService = {\n    onAlert,\n    success,\n    error,\n    info,\n    warn,\n    alert,\n    clear,\n};\n\nexport const AlertType = {\n    Success: 'Success',\n    Error: 'Error',\n    Info: 'Info',\n    Warning: 'Warning',\n};\n\n// enable subscribing to alerts observable\nfunction onAlert(id = defaultId) {\n    return alertSubject.asObservable().pipe(filter((x) => x && x.id === id));\n}\n\n// convenience methods\nfunction success(message, options) {\n    console.log('success worked');\n    // alert('success worked')\n    // alert({ ...options, type: AlertType.Success, message });\n}\n\nfunction error(message, options) {\n    alert({ ...options, type: AlertType.Error, message });\n}\n\nfunction info(message, options) {\n    alert({ ...options, type: AlertType.Info, message });\n}\n\nfunction warn(message, options) {\n    alert({ ...options, type: AlertType.Warning, message });\n}\n\n// core alert method\nfunction alert(alert) {\n    alert.id = alert.id || defaultId;\n    alert.autoClose = alert.autoClose === undefined ? true : alert.autoClose;\n    alertSubject.next(alert);\n}\n\n// clear alerts\nfunction clear(id = defaultId) {\n    alertSubject.next({ id });\n}\n","export * from './account.service';\nexport * from './alert.service';\n","export default __webpack_public_path__ + \"static/media/login-left2.3d541667.jpg\";","import React from 'react';\nimport { Card, CardImg, CardBody, CardImgOverlay, Button, ListGroup, ListGroupItem, List } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFacebookF, faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport LoginLeft from '../../assets/images/Signin/login-left2.jpg';\nimport cls from './index.module.css';\nimport GoogleLogin from 'react-google-login';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport { ApiGoogle } from '../../redux/auth/thunks';\nimport axios from 'axios'\nconst LoginItem = ({ ApiGoogle }) => {\n\n    // const [isAuthenticatedGoogle, setIsAuthenticatedGoogle] = useState(false);\n\n    const responseFacebook = (response) => {\n        console.log(response);\n    };\n\n    const responseGoogle = async (response) => {\n        console.log(response);\n        ApiGoogle(response);\n    };\n\n\n\n    return (\n        <Card className='text-center border-0'>\n            <CardImg width='100%' src={LoginLeft} alt='Card image cap' />\n            <CardImgOverlay>\n                <img\n                    id='img-Logo'\n                    height='50'\n                    alt='img-logo'\n                    src='https://static.wixstatic.com/media/8d6fde_4ca895424eaf43f6a56e6bdeef5f2d14~mv2.png/v1/crop/x_0,y_0,w_664,h_211/fill/w_245,h_71,al_c,q_85,usm_0.66_1.00_0.01/TogeDOOR_edited.webp'\n                />\n                <CardBody className='text-center pt-6'>\n                    <h1 className={cls['headers']} id='content-title'>\n                        How It Works?\n                    </h1>\n                    <List type='unstyled'>\n                        <h2 className={cls['headers']}>Your Gigs Journey</h2>\n                        <br />\n                        <div className={cls['div-contain'] + ' row'}>\n                            <ul className={cls['uls']}>\n                                <h3 className={cls['headers']}>Gig Provider</h3>\n                                <li className={cls['bullets']}>1. Register</li>\n                                <li className={cls['bullets']}>2. Post gigs</li>\n                                <li className={cls['bullets']}>3. Approve Submitters</li>\n                            </ul>\n                            <ul>\n                                <h3 className={cls['headers']}>Gig Submitter</h3>\n                                <li className={cls['bullets']}>1. Register</li>\n                                <li className={cls['bullets']}>2. Review gigs</li>\n                                <li className={cls['bullets']}>3. Apply for gigs</li>\n                            </ul>\n                        </div>\n                    </List>\n                    <hr />\n                    <ListGroup>\n                        {/* <ListGroupItem className='bg-transparent p-0'>\n                            <FacebookLogin\n                                appId='394386971840074'\n                                autoLoad={false}\n                                fields='name,email,picture'\n                                scope='public_profile,email'\n                                callback={responseFacebook}\n                                render={(renderProps) => (\n                                    <Button\n                                        disabled\n                                        color='primary'\n                                        className='outline-hover--effect'\n                                        onClick={renderProps.onClick}>\n                                        Login With Facebook\n                                        <FontAwesomeIcon className='ml-5' icon={faFacebookF} />\n                                    </Button>\n                                )}\n                            />\n                        </ListGroupItem> */}\n                        <br />\n                        <ListGroupItem className='bg-transparent p-0'>\n                            <GoogleLogin\n                                color='primary'\n                                render={(renderProps) => (\n                                    <Button\n                                        color='primary'\n                                        className='outline-hover--effect'\n                                        onClick={renderProps.onClick}\n                                        disabled={renderProps.disabled}>\n                                        &nbsp; Login With Google &nbsp;\n                                        <FontAwesomeIcon className='ml-5' icon={faGoogle} />\n                                    </Button>\n                                )}\n                                className='outline-hover--effect btn-primary'\n                                clientId='584638914485-2tdlq9omj9crtfevmucsj5d0rq6v90nt.apps.googleusercontent.com'\n                                buttonText='Login With Google'\n                                onSuccess={responseGoogle}\n                                onFailure={responseGoogle}\n                                cookiePolicy={'single_host_origin'}\n                            />\n                        </ListGroupItem>\n                    </ListGroup>\n                </CardBody>\n                <div className='login-or-register position-absolute font-18 d-none d-lg-block'>\n                    <h6 className='text-white font-weight-bold'>OR</h6>\n                </div>\n            </CardImgOverlay>\n        </Card>\n    );\n};\nLoginItem.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n// export default Signin;\nexport default connect(mapStateToProps, { ApiGoogle })(LoginItem);\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const EDIT_USER_REQUEST = \"EDIT_USER_REQUEST\";\nexport const EDIT_USER_SUCCESS = \"EDIT_USER_SUCCESS\";\nexport const EDIT_USER_FAIL = \"EDIT_USER_FAIL\";\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\n","// import config from '../helpers/';\n// import { config } from '@fortawesome/fontawesome-svg-core';\nimport { accountService } from '../services';\n// import { accountService } from '@/_services';\n\nimport axios from 'axios';\nexport const fetchWrapper = {\n    get,\n    post,\n    put,\n    delete: _delete,\n};\n\n// function get(url) {\n//     const requestOptions = {\n//         method: 'GET',\n//         headers: authHeader(url),\n//     };\n//     return fetch(url, requestOptions).then(handleResponse);\n// }\n\nasync function get(url) {\n    const config = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            ...authHeader(url),\n        },\n    };\n    return await axios\n        .get(url, config)\n        .then((response) => handleResponse(response))\n        .catch((error) => {\n            console.log('`fetch-wrapper.js` get(url) error: ', error);\n        });\n}\n\n// function post(url, body) {\n//     const requestOptions = {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json', ...authHeader(url) },\n//         credentials: 'include',\n//         body: JSON.stringify(body)\n//     };\n//     return fetch(url, requestOptions).then(handleResponse);\n// }\n\nasync function post(url, body) {\n    // return handleResponse('from post')\n    const config = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            ...authHeader(url),\n        },\n    };\n    console.log('url:_', url);\n    console.log('body:_', body);\n    console.log('config:_', config);\n    await axios.post(url, body, config).then((response) => {\n        console.log(response);\n        return handleResponse(response);\n    });\n\n    // axios.post(url,body,config1) .then((response) => {\n    //   console.log(response);\n    //   // history.push('/')\n    //   return handleResponse(response)\n    // })\n    // .catch((error) => {\n    //     console.log(error);\n    // })\n}\n\n// function put(url, body) {\n//     const requestOptions = {\n//         method: 'PUT',\n//         headers: { 'Content-Type': 'application/json', ...authHeader(url) },\n//         body: JSON.stringify(body)\n//     };\n//     return fetch(url, requestOptions).then(handleResponse);\n// }\n\nfunction put(url, body) {\n    var config1 = {\n        headers: {\n            'Content-Type': 'application/json',\n            ...authHeader(url),\n        },\n    };\n    return axios.post(url, body, config1).then(handleResponse);\n\n    //  .then((response) => {\n    //     console.log(response);\n    //     // return handleResponse(response)\n    // // return handleResponse\n    //   })\n    //     .catch((error) => {\n    //       console.log(error);\n    //     })\n    //  ) }\n}\n\n// prefixed with underscored because delete is a reserved word in javascript\n// function _delete(url) {\n//     const requestOptions = {\n//         method: 'DELETE',\n//         headers: authHeader(url)\n//     };\n//     return fetch(url, requestOptions).then(handleResponse);\n// }\n\nfunction _delete(url) {\n    var config1 = {\n        headers: {\n            'Content-Type': 'application/json',\n            ...authHeader(url),\n        },\n    };\n    // return( axios.post(url,config1)\n\n    //        .then((response) => {\n    //           console.log(response);\n    //           return handleResponse(response)\n    //         })\n    //         .catch((error) => {\n    //           console.log(error);\n    //         })\n    // )\n    return axios.post(url, config1).then(handleResponse);\n}\n\n// helper functions\n\n// function authHeader(url) {\n//     //https://www.togedoortestgo.site/graphql/accounts\n//     // return auth header with jwt if user is logged in and request is to the api url\n//     const user = accountService.userValue;\n//     const isLoggedIn = user && user.jwtToken;\n//     const isApiUrl = url.startsWith('https://www.togedoortestgo.site/graphql');\n//     // console.log('accountService.userValue: ', accountService.userValue);\n//     console.log('user', user);\n//     // console.log('user.jwtToken: ', user.jwtToken);\n//     // console.log('isLoggedIn', isLoggedIn);\n//     // console.log('isApiUrl', isApiUrl);\n//     if (isLoggedIn && isApiUrl) {\n//         return { Authorization: `Bearer ${user.jwtToken}` };\n//     } else {\n//         return {};\n//     }\n// }\n\nfunction authHeader(url) {\n    // return auth header with jwt if user is logged in and request is to the api url\n    const user = accountService.userValue;\n    const isLoggedIn = user && user.jwtToken;\n    const isApiUrl = url.startsWith('https://www.togedoortestgo.site/graphql');\n    if (isLoggedIn && isApiUrl) {\n        return { Authorization: `Bearer ${user.jwtToken}` };\n    } else {\n        return {};\n    }\n}\nasync function handleResponse(response) {\n    console.log('response');\n    console.log(response);\n    // return (response.then((text) => {\n    const data = await response;\n\n    if (!data.statusText === 'ok') {\n        console.log('return data');\n        if ([401, 403].includes(response.status) && accountService.userValue) {\n            // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n            accountService.logout();\n        }\n\n        const error = (data && data.message) || response.statusText;\n        return Promise.reject(error);\n    }\n    return data;\n}\n// return response.data;\n\n// return response\n\n// )}\n","import React, { useState } from 'react';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n    Container,\n    Row,\n    Col,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n    Card,\n    InputGroup,\n    InputGroupText,\n    InputGroupAddon,\n} from 'reactstrap';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\nimport LoginItem from 'src/components/LoginItem';\nimport { Link, Redirect } from 'react-router-dom';\nimport { login } from '../../redux/auth/thunks';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useForm, Controller } from 'react-hook-form';\nimport cls from './index.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { accountService, alertService } from \"../../views/services\";\n\n\nconst Signin = ({ login, isAuthenticated, ApiGoogle }) => {\n\n\n    const {\n        handleSubmit,\n        control,\n        formState: { errors },\n    } = useForm();\n\n    const [isAuthenticatedGoogle, setIsAuthenticatedGoogle] = useState(false);\n    const [formData, setFormData] = useState({ email: '', password: '' });\n    const { email, password } = formData;\n\n    const onChange = (e, val, fn) => {\n        setFormData({ ...formData, [e.target.name]: val });\n        fn(val);\n    };\n\n\n    function onSubmit({ email, password },) {\n\n        alertService.clear();\n        login(email, password)\n            .then(() => {\n                const { from } = location.state || { from: { pathname: \"/\" } };\n                history.push(from);\n            })\n            .catch(error => {\n                alertService.error(error);\n            });\n    }\n\n\n    if (isAuthenticatedGoogle) {\n        return <Redirect to='/' />;\n    }\n    if (isAuthenticated) {\n        return <Redirect to='/' />;\n    }\n\n    const responseGoogle = async (response) => {\n        console.log(response);\n        ApiGoogle(response);\n    };\n\n    const emailValidation = {\n        rules: {\n            required: true,\n            pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Invalid email address',\n            },\n        },\n        error: errors.email && <p className={cls.errorMsg}>{errors.email.message}</p>,\n    };\n\n    const passValidation = {\n        rules: {\n            required: true,\n            minLength: 6,\n            message: 'This is the required field',\n        },\n        error: errors.password && <p className={cls.errorMsg}>This is the required field</p>,\n    };\n\n    return (\n        <Container className='pt-13'>\n            <Card className='overflow-hidden'>\n                <Row>\n                    <Col md={12} lg={6} className='p-0'>\n                        <LoginItem setIsAuthenticatedGoogle={setIsAuthenticatedGoogle} />\n                    </Col>\n                    <Col md={12} lg={6} className='p-0'>\n                        <Form className='text-center login-form  py-14 px-13' onSubmit={handleSubmit(onSubmit)}>\n                            <h4 className='pb-5'>Login</h4>\n                            <InputGroup className=' mb-4'>\n                                <Controller\n                                    control={control}\n                                    name='email'\n                                    rules={emailValidation.rules}\n                                    render={({ field }) => (\n                                        <Input\n                                            className='bg-transparent text-primary border-right-0'\n                                            name='email'\n                                            type='email'\n                                            inputplaceholder='Email Address*'\n                                            placeholder='Email'\n                                            autoComplete='off'\n                                            onChange={(e) => onChange(e, e.target.value, field.onChange)}\n                                        />\n                                    )}\n                                />\n                                <InputGroupAddon addonType='append'>\n                                    <InputGroupText className='bg-transparent text-primary border-left-0'>\n                                        <FontAwesomeIcon className='text-primary' icon={faEnvelope} />\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                            </InputGroup>\n                            {emailValidation.error}\n                            {/*....................................................................... */}\n                            <InputGroup className=' mb-4'>\n                                <Controller\n                                    control={control}\n                                    name='password'\n                                    rules={passValidation.rules}\n                                    render={({ field }) => (\n                                        <Input\n                                            className='border-right-0'\n                                            name='password'\n                                            type='password'\n                                            inputplaceholder='Password*'\n                                            placeholder='Password'\n                                            autoComplete='off'\n                                            onChange={(e) => onChange(e, e.target.value, field.onChange)}\n                                        />\n                                    )}\n                                />\n\n                                <InputGroupAddon addonType='append'>\n                                    <InputGroupText className='bg-transparent text-primary border-left-0'>\n                                        <FontAwesomeIcon className='text-primary' icon={faLock} />\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                            </InputGroup>\n                            {passValidation.error}\n\n                            {/*....................................................................... */}\n                            <FormGroup check className='my-5'>\n                                <Label check className='text-muted'>\n                                    <Input type='checkbox' /> Remember me? &nbsp;\n                                    <Link to='/forget-Password' className='text-primary' id='forget-Password'>\n                                        Forgot Password\n                                    </Link>\n                                </Label>\n                            </FormGroup>\n                            <Button block color='primary' className='btn-lg  my-5 outline-hover--effect'>\n                                Login\n                            </Button>\n                            <FormGroup>\n                                <Label className='text-muted'>\n                                    Don’t have an acount? &nbsp;\n                                    <Link to='/account/register' className='text-primary'>\n                                        Sign up\n                                    </Link>\n                                </Label>\n                            </FormGroup>\n                        </Form>\n                    </Col>\n                </Row>\n            </Card>\n        </Container>\n    );\n};\n\nSignin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n// export default Signin;\nexport default connect(mapStateToProps, { login })(Signin);\n","// External components\nimport React, { useState } from 'react';\nimport { Input, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { faBars, faTimes, faSignOutAlt, faSms, faIdCard, faFileArchive, faUserEdit, faHome } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MultilevelSidebar from 'react-multilevel-sidebar';\nimport 'react-multilevel-sidebar/src/Sidebar.css';\n\n\nconst Menubar = () => {\n\n  const handleLogout = () => {\n    try {\n\n      localStorage.removeItem('token');\n      localStorage.removeItem('email');\n      localStorage.removeItem('id');\n      //google\n\n      const logout = (res) => {\n        console.log('out google');\n        console.log(res);\n\n      };\n      const signOutgoogle = () => {\n        const auth2 = window.gapi.auth2.getAuthInstance();\n        if (auth2 != null) {\n          auth2.signOut().then(auth2.disconnect().then(logout));\n          // userSubject.next(null);\n\n        } else {\n          this.props.onLogoutFailure();\n        }\n      };\n      signOutgoogle();\n      // end google\n\n      localStorage.removeItem('token');\n      localStorage.removeItem('email');\n      localStorage.removeItem('id');\n\n      // userSubject.next(null);\n\n\n    } catch (error) {\n      console.log(error);\n    }\n    setUser({})\n\n  };\n  const options = [\n\n    {\n      hideBorder: true,\n      content: [\n        {\n          id: 2,\n          name: <Link to=\"/\">Home</Link>,\n          icon: <FontAwesomeIcon className=\"text-dark\" icon={faHome} />,\n        },\n      ],\n    },\n    {\n      hideBorder: true,\n      content: [\n        {\n          id: 3,\n          name: <Link to=\"/candidate/profile\">Profile</Link>,\n          icon: <FontAwesomeIcon className=\"text-dark\" icon={faUserEdit} />,\n        },\n      ],\n    },\n\n    {\n      hideBorder: true,\n      content: [\n        {\n          id: 4,\n          name: <Link to=\"/job\">Projects</Link>,\n          icon: <FontAwesomeIcon className=\"text-dark\" icon={faFileArchive} />,\n        },\n      ],\n    },\n    {\n      hideBorder: true,\n      content: [\n        {\n          id: 5,\n          name: <a href=\"/chat/00000\"> Chat </a>,\n          icon: <FontAwesomeIcon className=\"text-dark\" icon={faSms} />,\n        },\n      ],\n    },\n    {\n      hideBorder: true,\n      content: [\n        {\n          id: 6,\n          name: <Link to=\"/contactus\">Contact</Link>,\n          icon: <FontAwesomeIcon className=\"text-dark\" icon={faIdCard} />,\n        },\n      ],\n    },\n    {\n      hideBorder: true,\n      content: [\n        {\n          id: 6,\n          name: <a className='nav-link single-link position-relative ' href='/' onClick={handleLogout}>\n\n            Logout\n          </a>,\n          icon: <FontAwesomeIcon className=\"text-dark\" icon={faSignOutAlt} />,\n        },\n      ],\n    },\n\n\n  ];\n  const [open, setOpen] = useState(false);\n  const handleClick = () => {\n    setOpen(false);\n  };\n\n\n\n  return (\n    <>\n      <MultilevelSidebar\n        open={open}\n        options={options}\n        wrapperClassName=\"header-menu-bar\"\n        onToggle={handleClick}\n        header={\n          <div className=\"text-left pl-4 pb-2 d-flex justify-content-between\">\n            <Link to=\"/\">\n              <img\n                src='https://static.wixstatic.com/media/8d6fde_4ca895424eaf43f6a56e6bdeef5f2d14~mv2.png/v1/crop/x_0,y_0,w_664,h_211/fill/w_245,h_71,al_c,q_85,usm_0.66_1.00_0.01/TogeDOOR_edited.webp'\n                alt=\"menu-logo\"\n                className=\"my-1\"\n              />{' '}\n            </Link>\n            <Button\n              onClick={() => setOpen(false)}\n              className=\"bg-white border-0 p-0 pr-3\"\n            >\n              <FontAwesomeIcon className=\"text-dark\" icon={faTimes} />{' '}\n            </Button>\n          </div>\n        }\n\n      />\n      {/* using in our button to open the sidebar */}\n      <Button\n        onClick={() => setOpen(true)}\n        className=\"bg-white border-0 d-xl-none d-lg-none d-inline-block text-primary ml-auto mr-md-3 mr-sm-2 p-sm-0\"\n      >\n        <FontAwesomeIcon icon={faBars} />\n      </Button>\n    </>\n  );\n};\n\nexport default Menubar;","// External components\nimport React, { useEffect, useState } from 'react';\nimport { BehaviorSubject } from 'rxjs';\nimport { Dropdown, DropdownToggle, DropdownMenu, Media, NavItem } from 'reactstrap';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { faUserEdit, faCog, faSignOutAlt, faSuitcase } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { accountService, alertService } from '../../../views/services';\nimport Menubar from '../MenuBar';\nimport store from '../../../store';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst ButtonGroups = ({ history }) => {\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const token = localStorage.getItem('token');\n    const [user, setUser] = useState({});\n\n    var config2 = {\n        headers: {\n            'Authorization': token\n        }\n    }\n\n    useEffect(() => {\n\n        function fetchData() {\n            axios.get(`https://www.togedoortestgo.site/graphql/accounts/${localStorage.id}`, config2)\n                .then(res => {\n                    setUser(res.data)\n                })\n        }\n        fetchData();\n        // useEffect(() => {\n        //     accountService.getAll().then(x => setUsers(x));\n    }, [token]);\n\n    const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n\n    const handleLogout = () => {\n        try {\n\n            localStorage.removeItem('token');\n            localStorage.removeItem('email');\n            localStorage.removeItem('id');\n            //google\n\n            const logout = (res) => {\n                console.log('out google');\n                console.log(res);\n\n            };\n            const signOutgoogle = () => {\n                const auth2 = window.gapi.auth2.getAuthInstance();\n                if (auth2 != null) {\n                    auth2.signOut().then(auth2.disconnect().then(logout));\n                    // userSubject.next(null);\n\n                } else {\n                    this.props.onLogoutFailure();\n                }\n            };\n            signOutgoogle();\n            // end google\n\n            localStorage.removeItem('token');\n            localStorage.removeItem('email');\n            localStorage.removeItem('id');\n\n            // userSubject.next(null);\n\n\n        } catch (error) {\n            console.log(error);\n        }\n        setUser({})\n\n    };\n\n\n\n    return (\n        <>\n            <Dropdown\n                className='user-profile d-xl-block d-lg-block d-md-block d-sm-block  d-none '\n                isOpen={dropdownOpen}\n                toggle={toggle}>\n                <DropdownToggle className='bg-transparent text-dark border-0 p-0'>\n                    <Media>\n                        {user ? (\n                            <Media left>\n                                <Media\n                                    object\n                                    src={user.picture}\n                                    alt=\"user profile\"\n                                    width=\"65px\"\n                                    style={{ marginTop: '10px' }}\n                                    height=\"60px\"\n                                    className=\"rounded-circle\"\n                                />\n                            </Media>\n                        ) : (<p></p>)}\n\n                        <Media\n                            body\n                            className='text-primary ml-3 d-none d-xl-block d-md-block d-lg-none'>\n                            <Media heading tag=\"h5\" className=\"text-dark\">\n                                {user.firstName} {user.lastName}\n                            </Media>\n                            {user.email}\n                            {/* {authenticatedUser && authenticatedUser.role === 'User' ? (\n                                <img src={temp} width='60' height='30' className='rounded-circle' />\n                            ) : authenticatedUser && authenticatedUser.role === 'user from Google' ? (\n                                <img\n                                    src={`https://www.togedoortestgo.site/graphql/${user.picture}`}\n                                    width='60'\n                                    height='30'\n                                    className='rounded-circle'\n                                />\n                            ) : (\n                                <img width='60' height='30' className='rounded-circle' />\n                            )} */}\n                        </Media>\n                    </Media>\n                </DropdownToggle>\n                <DropdownMenu className='p-0'>\n                    <NavItem>\n                        <NavLink className='nav-link single-link position-relative ' exact to='/candidate/profile'>\n                            <FontAwesomeIcon className='mr-2 position-relative text-primary' icon={faUserEdit} />\n                            Profile settings\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <a className='nav-link single-link position-relative ' href='/candidate/manage'>\n                            <FontAwesomeIcon className=' mr-2 position-relative text-primary' icon={faSuitcase} />\n                            My projects\n                        </a>\n                    </NavItem>\n                    <NavItem>\n                        <a className='nav-link single-link position-relative ' href='/' onClick={handleLogout}>\n                            <FontAwesomeIcon\n                                className=' mr-2 position-relative  text-primary'\n                                icon={faSignOutAlt}\n                            />\n                            Logout\n                        </a>\n                    </NavItem>\n                </DropdownMenu>\n            </Dropdown>\n            <Menubar />\n        </>\n    );\n};\n\n// export default ButtonGroups\nButtonGroups.propTypes = {\n    user: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {})(ButtonGroups);\n","// External components\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\nconst Logo = () => {\n  // const theme = useSelector((store) => store.theme);\n\n  return (\n    <Link to=\"/\" className=\"\">\n      <img\n        src={\n\n          'https://static.wixstatic.com/media/8d6fde_4ca895424eaf43f6a56e6bdeef5f2d14~mv2.png/v1/crop/x_0,y_0,w_664,h_211/fill/w_245,h_71,al_c,q_85,usm_0.66_1.00_0.01/TogeDOOR_edited.webp'}\n        alt=\"logo\"\n        className=\"image-fluid\"\n      />\n    </Link>\n  );\n};\n\nexport default Logo;\n","import React, { useState } from 'react';\nimport { Navbar, Nav, NavItem } from 'reactstrap';\nimport { Link, NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport NavBox from './NavBox';\nimport MegaDropdown from './MegaDropdown';\nimport MenuItem from './MenuItem';\n\n\nconst Navigation = () => {\n    const [visable, setVisable] = useState(false);\n\n\n\n    const resetNavBoc = () => {\n        setVisable(false);\n    };\n\n    return (\n        <div\n            className={classnames('navigation position-relative', {\n                'menu-container-visable': visable,\n            })}\n            onMouseLeave={resetNavBoc}>\n            <Navbar className='p-0 border-right d-lg-block d-xl-block d-none'>\n                <Nav>\n                    <NavItem className='dropdown'>\n                        <Link\n                            className='nav-link position-relative main-nav text-dark'\n                            to='/'\n                            onMouseEnter={resetNavBoc}>\n                            Home\n                        </Link>\n                    </NavItem>\n\n                    <NavItem >\n                        <Link\n                            className='nav-link position-relative main-nav text-dark'\n                            to='/job'>\n                            Projects\n                        </Link>\n                    </NavItem>\n                    <NavItem>\n                        <a href='/chat/00000'\n                            exact\n                            onMouseEnter={resetNavBoc}\n                            className='nav-link position-relative main-nav text-dark'\n                        >\n                            Chat\n                        </a>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink\n                            exact\n                            onMouseEnter={resetNavBoc}\n                            className='nav-link position-relative main-nav text-dark'\n                            to='/contactus'>\n                            Contact\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n            </Navbar>\n\n        </div>\n    );\n};\n\nexport default Navigation;\n","// External components\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Sticky } from 'react-sticky';\nimport { Navbar, Nav, NavItem } from 'reactstrap';\nimport { Link, NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\n// Own Components\nimport ButtonGroups from './ButtonGroups';\nimport Logo from './Logo';\nimport Navigation from './Navigation';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nconst Header = () => {\n\n    const token = localStorage.getItem('token');\n    const [visible, setVisible] = useState(false);\n    const resetNavBoc = () => setVisible(false);\n\n    return token ? (\n        <Sticky disableCompensation topOffset={400}>\n            {/* <> */}\n            {({ style, isSticky }) => (\n                <header\n                    style={style}\n                    className={` ${isSticky ? 'sticky-header' : 'position-relative border bg-white'}`}>\n                    <Container fluid>\n                        <Row className='align-items-center '>\n                            <Col xl={2} lg={2} md={2} sm={2} xs={2} className='d-flex'>\n                                <div className='jb-logo'>\n                                    <Logo />\n                                </div>\n                            </Col>\n                            <Col className='nav-col' xl={8} lg={9} md={5} sm={7} xs={5}>\n                                <Navigation />\n                            </Col>\n                            <Col className='p-0' xl={2} lg={1} md={5} sm={3} xs={5}>\n                                <div className='user-info d-flex justify-content-center align-items-center align-self-center text-center'>\n                                    <ButtonGroups />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </header>\n            )}\n            {/* </> */}\n        </Sticky>\n    ) : (\n        <Sticky disableCompensation topOffset={400}>\n            {({ style, isSticky }) => (\n                <header\n                    style={style}\n                    className={` ${isSticky ? 'sticky-header' : 'position-relative border bg-white'}`}>\n                    <Container fluid>\n                        <Row className='align-items-center '>\n                            <Col xl={2} lg={2} md={2} sm={2} xs={2} className='d-flex'>\n                                <div className='jb-logo'>\n                                    <Logo />\n                                </div>\n                            </Col>\n                            <Col className='nav-col' xl={8} lg={9} md={5} sm={7} xs={5}>\n                                <Navigation />\n                            </Col>\n                            <Col className='p-0' xl={2} lg={1} md={5} sm={3} xs={5}>\n                                <div className='align-items-center '>\n                                    <Navbar>\n                                        <Row>\n                                            <Nav>\n                                                <NavItem className='dropdown'>\n                                                    <NavLink\n                                                        className='nav-link position-relative main-nav text-dark'\n                                                        to='/signin'\n                                                        onMouseEnter={resetNavBoc}>\n                                                        Login\n                                                    </NavLink>\n                                                </NavItem>\n                                                <NavItem className='dropdown'>\n                                                    <NavLink\n                                                        onMouseEnter={resetNavBoc}\n                                                        className='nav-link position-relative main-nav text-dark'\n                                                        to='/account/register'>\n                                                        Register\n                                                    </NavLink>\n                                                </NavItem>\n                                            </Nav>\n                                        </Row>\n                                    </Navbar>\n                                </div>\n                            </Col>\n\n                        </Row>\n                    </Container>\n                </header>\n            )}\n        </Sticky>\n    );\n};\n\nHeader.propTypes = {\n    //   user: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {})(Header);\n","import React from 'react';\nimport { Card, CardHeader, CardBody, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport featImg1 from 'src/assets/images/Footer/feat-img1.png';\nimport featImg2 from 'src/assets/images/Footer/feat-img2.png';\nimport featImg3 from 'src/assets/images/Footer/feat-img3.png';\nimport featImg4 from 'src/assets/images/Footer/feat-img4.png';\nimport featImg5 from 'src/assets/images/Footer/feat-img5.png';\nimport featImg6 from 'src/assets/images/Footer/feat-img6.png';\nimport { Link } from 'react-router-dom';\n\nconst fooNav = [\n    {\n        title: 'Features',\n        item: [\n            {\n                icon: faSquare,\n                text: 'Job Management & Billing',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: 'Time & Materials Tracking',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: 'Standards Compliance ',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: 'Real Time GPS Tracking',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: 'Client Portal',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: ' Powerful Workflow',\n                type: null,\n            },\n        ],\n    },\n    {\n        title: 'Browse',\n        item: [\n            {\n                icon: faSquare,\n                text: 'Freelancers by Category',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: ' Freelancers in USA ',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: ' Freelancers in UK ',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: ' Freelancers in Canada',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: ' Freelancers in india',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: '  find jobs',\n                type: null,\n            },\n        ],\n    },\n    {\n        title: 'App & Integration',\n        item: [\n            {\n                icon: featImg1,\n                text: 'Xero',\n                type: 'image',\n            },\n            {\n                icon: featImg2,\n                text: ' Reckon',\n                type: 'image',\n            },\n            {\n                icon: featImg3,\n                text: ' Flexidocs',\n                type: 'image',\n            },\n            {\n                icon: featImg4,\n                text: ' Microsoft Exchange',\n                type: 'image',\n            },\n            {\n                icon: featImg5,\n                text: 'Mailchimp',\n                type: 'image',\n            },\n            {\n                icon: featImg6,\n                text: '  MYOB',\n                type: 'image',\n            },\n        ],\n    },\n];\n\nconst FooNav = ({ to }) => {\n    return (\n        <>\n            {fooNav &&\n                fooNav.map((item, i) => (\n                    <Col lg={3} sm={6} key={i}>\n                        <Card className='foo-nav bg-transparent border-0  '>\n                            <CardHeader tag='h5' className='bg-transparent border-0 text-white m-0 pb-4 mt-2 pl-0'>\n                                {item.title}\n                            </CardHeader>\n                            <CardBody tag='ul' className='pl-0 pr-0 '>\n                                {item.item.map((item, i) => (\n                                    <li key={i} className='d-flex'>\n                                        {item.type === 'image' ? (\n                                            <img src={item.icon} alt='feature' className='mb-3' />\n                                        ) : (\n                                            <FontAwesomeIcon\n                                                className='mt-2 text-primary h6 position-relative'\n                                                icon={item.icon}\n                                            />\n                                        )}\n                                        <Link to={to || '#'} className='mb-3 text-muted ml-4'>\n                                            {item.text}\n                                        </Link>\n                                    </li>\n                                ))}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                ))}\n        </>\n    );\n};\n\nexport default FooNav;\n","import React from \"react\";\n\nexport default function Login() {\n  return <div>Login</div>;\n}\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'whatsapp-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\n\nconst SocketContext = React.createContext();\n\nexport function useSocket() {\n  return useContext(SocketContext);\n}\n\nexport function SocketProvider({ id, children }) {\n  const [socket, setSocket] = useState();\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    if (token) {\n      console.log(\"soket useEffct\");\n      const newSocket = io(\"https://www.togedoortestgo.site/\", {\n        path: \"/graphql/socket/\",\n\n        // 'https://www.togedoortestgo.site/',{\n        //   'path': '/graphql/socket/',\n\n        withCredentials: true,\n        extraHeaders: {\n          \"my-custom-header\": \"abcd\",\n        },\n        query: { token },\n      });\n      setSocket(newSocket);\n\n      return () => newSocket.close();\n    }\n  }, [id]);\n  return <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>;\n}\n","import axios from \"axios\";\nimport React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { useSocket } from \"./SocketProvider\";\n// import ReactNotifications from 'react-browser-notifications';\nimport Push from 'push.js'\nconst ConversationsContext = React.createContext();\n\nvar Isminmized=false;\n\n   \nconsole.log(\"provider worked\");\n      window.addEventListener(\n    \n        'blur',\n        function () {\n          // setIsminmized(true)\n            console.log('blur');\n  Isminmized=true\n  console.log(\"Isminmized\");\n  console.log(Isminmized);\n        },\n        false\n    );\n    \n    window.addEventListener(\n        'focus',\n        function () {\n          // setIsminmized(false)\n        Isminmized=false\n            console.log('focus');\n            console.log(\"Isminmized\");\n            console.log(Isminmized);\n        },\n        false\n    );\n\n    console.log(\"Isminmized\");\nconsole.log(Isminmized);\n\n\n\n\n//not\n// let permission = Notification.permission;\n// if(permission === \"granted\") {\n//    showNotification();\n// } else if(permission === \"default\"){\n//    requestAndShowPermission();\n// } else {\n//   alert(\"Use normal alert\");\n// }\n// function showNotification() {\n//    if(document.visibilityState === \"visible\") {\n//        return;\n//    }\n//    var title = \"JavaScript Jeep\";\n//   //  icon = \"image-url\"\n//    var body = \"You just received a message\";\n//    var notification = new Notification('New Message', { body });\n//    notification.onclick = () => { \n//           notification.close();\n//           window.parent.focus();\n//    }\n// }\n// function requestAndShowPermission() {\n//    Notification.requestPermission(function (permission) {\n//       if (permission === \"granted\") {\n//             showNotification();\n//       }\n//    });\n// }\n\n\nexport function useConversations() {\n  return useContext(ConversationsContext);\n}\n\nexport function ConversationsProvider({ children }) {\n  const [conversations, setConversations] = useLocalStorage(\"conversations\", []);\n  const [selectedConversationIndex, setSelectedConversationIndex] = useState(0);\n\n  const [ConversationAndID, setConversationAndID] = useState([]);\n\n  // var [Isminmized, setIsminmized] = useState(false);\n  useEffect(() => {\n    \n// console.log(\"provider worked\");\n//       window.addEventListener(\n    \n//         'blur',\n//         function () {\n//           // setIsminmized(true)\n//             console.log('blur');\n//   Isminmized=true\n//         },\n//         false\n//     );\n    \n//     window.addEventListener(\n//         'focus',\n//         function () {\n//           // setIsminmized(false)\n//         Isminmized=false\n//             console.log('focus');\n//         },\n//         false\n//     );\n\n//     console.log(\"Isminmized\");\n// console.log(Isminmized);\n\n    },[])\n\n  if (false) {\n    conversations;\n    selectedConversationIndex;\n  }\n\n  const socket = useSocket();\n\n  function createConversation(recipients) {\n    setConversations((prevConversations) => {\n      return [...prevConversations, { recipients, messages: [] }];\n    });\n  }\n\n const addMessageToConversation = useCallback(({ text }) => {\n  // const addMessageToConversation = ({ text }) => {\n    setConversationAndID(text);\nconsole.log('test');\nconsole.log(text);\n\n\nconsole.log(\"on. reseved\")\n// var Isminmized = localStorage.getItem('Isminmized');\n\n// console.log(Isminmized);\n// if(Isminmized=='true'){console.log(\"push notefication\");\n\n\nif(Isminmized){console.log(\"push notefication\");\n\n\n\n\n\n\nshowNotifications()\n\n\nfunction showNotifications() {\n  \n  // title='New Message!' // Required\n  // body='You just received a message'\n  // icon=''\n\n\n  // $(\"#notify-button\").click(function(){\n    Push.create(\"New Message!\",{\n        body: \"You just received a message\",\n        icon: '/Logo_small.png',\n        timeout: 2000,\n        onClick: function () {\n            window.focus();\n            this.close();}\n        // }\n  //   });\n  // });\n  // $(\"#clear-button\").click(function(){ \n  //      Push.clear();\n  // });\n  // $(\"#check-button\").click(function(){ \n  //       console.log(Push.Permission.has());\n  // }\n  \n         } )\n\n\n\n    }\n    // showNotifications() \n \n\n} //if\n\n \n  // }\n}, []);\n  function handleClick(event) {\n    // Do something here such as\n    // console.log(\"Notification Clicked\") OR\n    // window.focus() OR\n  window.open(\"https://www.togedoortestgo.site/graphql/chat/00000\")\n\n    // Lastly, Close the notification\n    n.close(event.target.tag);\n}\n  useEffect(() => {\n    async function fetchData() {\n      const id = localStorage.getItem(\"id\");\n      try {\n        const response = await axios.get(\"https://www.togedoortestgo.site/graphql/accounts/\" + id);\n        setConversationAndID(response.data.conversations);\n      } catch (error) {\n        console.log(error.response);\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (socket == null) return;\n\n    socket.on(\"receive-message\", addMessageToConversation);\n\n\n  \n\n\n\n    return () => socket.off(\"receive-message\");\n  }, [socket, addMessageToConversation]);\n\n  function sendMessage(recipients, text) {\n    if (socket){\n    socket.emit(\"send-message\", { recipients, text });}\n\n    // addMessageToConversation({ recipients, text, sender: id })\n  }\n\n  function Chatting(id) {\n    const MyId = localStorage.getItem(\"id\");\n    socket.emit(\"Chatting\", { id, MyId });\n    console.log(\"chat id\");\n    console.log(id);\n  }\n\n  function FuncIsmimized(status) {\n    const MyId = localStorage.getItem(\"id\");\n    try {\n      \n      socket.emit(\"isminmized\", { isminmized:status, MyId });\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n  function  FuncDeleteConversation(deleteId) {\n    const MyId = localStorage.getItem(\"id\");\n    try {\n      \n      socket.emit(\"Delete\", {  DeleteId:deleteId });\n      console.log(\"delete id is\" + deleteId.ConnectedUserID);\n      window.location.reload(false);\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n \n  const value = {\n    conversations: ConversationAndID,\n    selectedConversation: \"val test\",\n    sendMessage,\n    Chatting,\n    FuncIsmimized,\n    FuncDeleteConversation,\n    selectConversationIndex: setSelectedConversationIndex,\n    createConversation,\n  };\n\n\n\n  return <ConversationsContext.Provider value={value}>{children}\n  \n  {/* <ReactNotifications\n  onRef={(ref) => (n = ref)} // Required\n  title='New Message!' // Required\n  body='You just received a message'\n  icon=''\n  tag='abcdef'\n  timeout='2000'\n  onClick={(event) => handleClick(event)}\n/>\n   */}\n  </ConversationsContext.Provider>;\n}\n\n\n\n\nfunction arrayEquality(a, b) {\n  if (a.length !== b.length) return false;\n\n  a.sort();\n  b.sort();\n\n  return a.every((element, index) => {\n    return element === b[index];\n  });\n}\nif (false) {\n  arrayEquality;\n}\n","\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { ListGroup,Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useConversations } from \"../contexts/ConversationsProvider\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\nimport { connect } from \"rxjs\";\nvar ChattingWith \nexport default function Conversations() {\n  const { conversations, Chatting,FuncDeleteConversation } = useConversations();\n\n    // const[ChattingWith,setChattingWith]=    useState('no')\n    ChattingWith = localStorage.getItem('ChattingWith');\n  const submit = (ConnectedUserID) => {\n    confirmAlert({\n      title: 'Confirm to delete conversation',\n      message: 'Are you sure to delete the conversation ?.',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => {FuncDeleteConversation({ConnectedUserID:ConnectedUserID})}\n        },\n        {\n          label: 'No',\n          // onClick: () => alert('Click No')\n        }\n      ]\n    })\n  };\n\n\n\n  return (\n    <ListGroup variant='flush'>\n\n      {conversations[0]\n        ? conversations.map ( (conversation, index) => (\n          <div>\n            <Link  to={\"/chat/\" + conversation.ConnectedUserID}>\n              <ListGroup.Item style={{width:\"100px\" ,float:\"left\"}}\n                onClick={() => {\n                  localStorage.setItem('ChattingWith',conversation.firstname )\n                  Chatting(conversation.ConnectedUserID);\n                  setTimeout(() => {\n               \n                    window.location.reload(false);\n                  }, 500);\n                  // localStorage.setItem('ChattingWith','no' )\n ChattingWith = localStorage.getItem('ChattingWith');\n                }}\n                key={index}\n                action>\n                {conversation.firstname}\n               \n                \n                {/* <div className=\"w3-padding w3-xlarge w3-teal\"> */}\n    \n   \n   \n  {/* </div> */}\n\n              </ListGroup.Item>\n            </Link>\n          <div>\n           <span onClick={()=>{submit(conversation.ConnectedUserID)}} style={{float:\"right\", marginTop:\"20px\", marginRight:\"20px\"}} className=\"w3-xxlarge fa fa-trash\"  >\n\n             {/* <i className=\"w3-xxlarge fa fa-trash\"></i> */}\n           </span>\n</div>\n\n           <div\n                  style={{\n\n                    paddingTop: \"4px\",\n                    paddingBottom: \"4px\",\n                    paddingRight: \"7px\",\n                    paddingLeft: \"7px\",\n                    backgroundColor: \"red\",\n                    color: \"white\",\n                  \n                    top: \"6px\",\n                    right: \"20px\",\n                    fontSize: \".7em\",\n                    borderRadius: \"30px\",\n                    marginTop: \"5px\",\n                   \n                    float:\"right\"\n                  }}\n                  className='badge alert'>\n                  {(conversation.notRead>0)?conversation.notRead:''}\n                </div>\n          \n\n\n             </div>\n          ))\n        : \"no con\"}\n    \n    </ListGroup>\n   \n  );\n}\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nexport default function Contacts() {\n  return <ListGroup variant='flush'>Contacts comp</ListGroup>;\n}\n","import React from \"react\";\n\nexport default function NewContactModal() {\n  return <div>NewContactModal</div>;\n}\n","import React from \"react\";\n\nexport default function NewConversationModal() {\n  return <div>NewConversationModal</div>;\n}\n","import React, { useState } from \"react\";\nimport { Tab, Nav, Button, Modal } from \"react-bootstrap\";\nimport Conversations from \"./Conversations\";\nimport Contacts from \"./ContactsOLD\";\nimport NewContactModal from \"./NewContactModal\";\nimport NewConversationModal from \"./NewConversationModal\";\nimport { useConversations } from \"../contexts/ConversationsProvider\";\nimport { Media } from \"reactstrap\";\nvar  ChattingWith = localStorage.getItem('ChattingWith');\nconst CONVERSATIONS_KEY = \"conversations\";\nconst CONTACTS_KEY = \"contacts\";\n\nexport default function Sidebar({ id }) {\n  const [activeKey, setActiveKey] = useState(CONVERSATIONS_KEY);\n  const [modalOpen, setModalOpen] = useState(false);\n  const { conversations } = useConversations();\n  const conversationsOpen = activeKey === CONVERSATIONS_KEY;\n\n  function closeModal() {\n    setModalOpen(false);\n  }\n  console.log(\"conversations from side bar\");\n  console.log(conversations);\n\n  return (\n    <div style={{ width: \"250px\" }} className='d-flex flex-column'>\n      <Tab.Container activeKey={activeKey} onSelect={setActiveKey}>\n        <Nav variant='tabs' className='justify-content-center'>\n          <Nav.Item>\n            {/* <Nav.Link eventKey={CONVERSATIONS_KEY}>Conversations</Nav.Link> */}\n          </Nav.Item>\n          <Nav.Item>\n            {/* <Nav.Link eventKey={CONTACTS_KEY}>Contacts</Nav.Link> */}\n          </Nav.Item>\n        </Nav>\n        <Tab.Content className='border-right overflow-auto flex-grow-1'>\n\n          <Tab.Pane eventKey={CONVERSATIONS_KEY}>{conversations ? <Conversations /> : \"no conn\"}</Tab.Pane>\n          <Tab.Pane eventKey={CONTACTS_KEY}>\n            <Contacts />\n          </Tab.Pane>\n        </Tab.Content>\n\n        <div className='p-2 border-top border-right small'>\n\n        <Media left>\n                                <Media\n                                    object\n                                    src={'https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=200&q=80'}\n                                    alt=\"user profile\"\n                                    width=\"50px\"\n                                    style={{ marginTop: '10px' }}\n                                    height=\"40px\"\n                                    className=\"rounded-circle\"\n                                />\n                            </Media>\n          <h4 className='text-muted'>  {  ChattingWith}</h4>\n          <br></br>\n          <br></br>\n\n          \n        </div>\n        {/* <Button onClick={() => setModalOpen(true)} className='rounded-0'>\n          New {conversationsOpen ? \"Conversation\" : \"Contact\"}\n        </Button> */}\n      </Tab.Container>\n\n      <Modal show={modalOpen} onHide={closeModal}>\n        {conversationsOpen ? (\n          <NewConversationModal closeModal={closeModal} />\n        ) : (\n          <NewContactModal closeModal={closeModal} />\n        )}\n      </Modal>\n    </div>\n  );\n}","import React, { useState, useCallback ,useRef} from \"react\";\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { useConversations } from \"../contexts/ConversationsProvider\";\n\nfunction OpenConversation({ match }) {\n  const [text, setText] = useState(\"\");\n\n  const setRef = useCallback((node) => {\n    if (node) {\n      console.log(\"node\");\n      console.log(node);\n      node.scrollIntoView({ smooth: true });\n    }\n  }, []);\n\n  // const setRef=(node) => {\n  //   if (node) {\n  //     node.scrollIntoView({ smooth: true });\n  //   }\n  // }\n\n\n  if (false) {\n    setRef;\n  }\n\n\n//  const divRef = useRef()\n  \n\n\n  \n  const { sendMessage, conversations } = useConversations();\n  function handleSubmit(e) {\n    e.preventDefault();\n    // const scrollToTop = () => {\n    //   window.scrollTo({\n    //     top: 0,\n    //     behavior: \"smooth\"\n    //   });\n    // };\n    // scrollToTop()\n\n\n    sendMessage([match.params.id], text);\n    setText(\"\");\n \n  }\n  console.log(\"OpenConversation \");\n  console.log(conversations);\n  if (conversations[0]) console.log(conversations[0].ConnectedUserID);\n\n  console.log(\"match.params.id\");\n  console.log(match.params.id);\n  const getConversationById = () => {\n    try {\n      let ObjWithConversation = conversations.find(({ ConnectedUserID }) => ConnectedUserID == match.params.id);\n      var Messages = ObjWithConversation.Topic.map((topic, index) => {\n        const lastMessage = ObjWithConversation.Topic.length - 1 === index\n\n        return (\n          <div \n          ref={lastMessage ? setRef : null}\n            key={index}\n            className={`my-1 d-flex flex-column ${\n              topic.substring(0, 8) == \"@?FX56##\" ? \"align-self-end align-items-end\" : \"align-items-start\"\n            }`}>\n            <div\n              className={`rounded px-2 py-1 ${\n                topic.substring(0, 8) == \"@?FX56##\" ? \"bg-primary text-white\" : \"border\"\n              }`}>\n              {topic.substring(0, 8) == \"@?FX56##\" ? topic.substring(8, topic.length) : topic}\n            </div>\n            <div   className={`text-muted small ${topic.substring(0, 8) == \"@?FX56##\" ? \"text-right\" : \"\"}`}>\n              {topic.substring(0, 8) == \"@?FX56##\" ? \"You\" : \"Him\"}\n            </div>\n          </div>\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    return Messages;\n  };\n\n  return (\n    <div className='d-flex flex-column flex-grow-1'  >\n      <div className='flex-grow-1 overflow-auto' >\n        <div className='d-flex flex-column align-items-start justify-content-end px-3'  >\n          {conversations[0] ? getConversationById() : \"no\"}\n        </div>\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className='m-2'>\n          <InputGroup>\n            <Form.Control\n              as='textarea'\n              required\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              style={{ height: \"75px\", resize: \"none\" }}\n            />\n            <InputGroup.Append>\n              <Button type='submit' >Send</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\nexport default withRouter(OpenConversation);\n","import React, { useState } from 'react'\nimport Sidebar from './Sidebar';\nimport OpenConversation from './OpenConversation';\nimport { useConversations } from '../contexts/ConversationsProvider';\n\nexport default function Dashboard({ id }) {\n  const { selectedConversation } = useConversations()\nconst [show,setshow]=useState(true)\nconst funcShow=()=>{\n  if(show)return(<Sidebar id={id} />)\n  \n  \n}\n  return (\n    <div>\n    <button className='btn btn-primary' onClick={()=>{setshow(!show)}}  >Show Conversation</button>\n    <div className=\"d-flex\" style={{ height: '100vh' }}>\n      \n    {funcShow()}\n      {selectedConversation && <OpenConversation />}\n    </div>\n    </div>\n  )\n}\n","import React, { useContext } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst ContactsContext = React.createContext();\n\nexport function useContacts() {\n  return useContext(ContactsContext);\n}\n\nexport function ContactsProvider({ children }) {\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", []);\n  console.log(\"contacts\");\n  console.log(contacts);\n\n  function createContact(id, name) {\n    setContacts((prevContacts) => {\n      return [...prevContacts, { id, name }];\n    });\n  }\n\n  return <ContactsContext.Provider value={{ contacts, createContact }}>{children}</ContactsContext.Provider>;\n}\n","import React, { useEffect, useState } from 'react';\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport { ContactsProvider } from '../contexts/ContactsProvider';\nimport { ConversationsProvider } from '../contexts/ConversationsProvider';\nimport { SocketProvider } from '../contexts/SocketProvider';\nimport { withRouter } from 'react-router-dom';\n// import ReactNotifications from 'react-browser-notifications';\nimport Push from 'push.js'\n\nimport { useBeforeunload } from 'react-beforeunload';\n\n// var n;\n\nfunction Chat({ match: { params } }) {\n\n    const [value, setValue] = useState('');\n\n    function funcrender() {\n      if(render){ return <div>render</div>}\n     \n      \n    }\n    \n\n\n\n    useBeforeunload((event) => {\n      if (value !== '') {\n        event.preventDefault();\n      }\n    });\n\n\n\n\n    // function showNotifications() {\n    //     // If the Notifications API is supported by the browser\n    //     // then show the notification\n    //     if (n.supported()) n.show();\n    // }\n    // function handleClick(event) {\n    //     // Do something here such as\n    //     // console.log(\"Notification Clicked\") OR\n    //     // window.focus() OR\n    //     // window.open(\"http://www.google.com\")\n\n    //     // Lastly, Close the notification\n    //     n.close(event.target.tag);\n    // }\n\nfunction showNotifications() {\n\n\n  // $(\"#notify-button\").click(function(){\n    Push.create(\"New Message!\",{\n        body: \"You just received a message\",\n        icon: '/Logo_small.png',\n        timeout: 2000,\n        onClick: function () {\n            window.focus();\n            this.close();}\n        // }\n  //   });\n  // });\n  // $(\"#clear-button\").click(function(){ \n  //      Push.clear();\n  // });\n  // $(\"#check-button\").click(function(){ \n  //       console.log(Push.Permission.has());\n  // }\n  \n         } )\n\n\n\n    }\n\n\n    const id = localStorage.getItem('id');\n    // console.log('par');\n    // console.log(params);\n    const dashboard = (\n\n\n          \n        \n    \n\n<div>\n         \n                {/* <button\n                    className='btn btn-primary'\n                    onClick={() => {\n                        // showNotifications();\n                        showNotification()\n                    }}>\n                    primaryBtn\n                </button> */}\n                {/* <ReactNotifications\n                    onRef={(ref) => (n = ref)} // Required\n                    title='Hey There!' // Required\n                    body='This is the body'\n                    icon='icon.png'\n                    tag='abcdef'\n                    timeout='9000'\n                    onClick={(event) => handleClick(event)}\n                /> */}\n\n\n    \n                <button\n                    className='btn btn-primary'\n                    onClick={() => {\n                        // showNotifications();\n                        showNotifications()\n                    }}>\n                    test Notification\n                </button>\n                {/* <ReactNotifications\n                    onRef={(ref) => (n = ref)} // Required\n                    title='Hey There!' // Required\n                    body='This is the body'\n                    icon='icon.png'\n                    tag='abcdef'\n                    timeout='9000'\n                    onClick={(event) => handleClick(event)}\n                /> */}\n\n              \n                    <Dashboard id={id} />\n              \n                {/* <input onChange={(event) => setValue(event.target.value)} value={value} /> */}\n         \n   \n      </div>\n    );\n\n    return id ? dashboard : <Login onIdSubmit={id} />;\n}\n\nexport default withRouter(Chat);\n","import { alertService } from '../services';\nimport { Role } from '.';\n// import { alertService } from '@/_services';\n\n// array in local storage for registered users\nconst usersKey = 'react-signup-verification-boilerplate-users';\nlet users = JSON.parse(localStorage.getItem(usersKey)) || [];\n\nexport function configureFakeBackend() {\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(handleRoute, 500);\n\n            function handleRoute() {\n                const { method } = opts;\n                switch (true) {\n                    case url.endsWith('/accounts/authenticate') && method === 'POST':\n                        return authenticate();\n                    case url.endsWith('/accounts/refresh-token') && method === 'POST':\n                        return refreshToken();\n                    case url.endsWith('/accounts/revoke-token') && method === 'POST':\n                        return revokeToken();\n                    case url.endsWith('/accounts/register') && method === 'POST':\n                        return register();\n                    case url.endsWith('/accounts/verify-email') && method === 'POST':\n                        return verifyEmail();\n                    case url.endsWith('/accounts/forgot-password') && method === 'POST':\n                        return forgotPassword();\n                    case url.endsWith('/accounts/validate-reset-token') && method === 'POST':\n                        return validateResetToken();\n                    case url.endsWith('/accounts/reset-password') && method === 'POST':\n                        return resetPassword();\n                    case url.endsWith('/accounts') && method === 'GET':\n                        return getUsers();\n                    case url.match(/\\/accounts\\/\\d+$/) && method === 'GET':\n                        return getUserById();\n                    case url.endsWith('/accounts') && method === 'POST':\n                        return createUser();\n                    case url.match(/\\/accounts\\/\\d+$/) && method === 'PUT':\n                        return updateUser();\n                    case url.match(/\\/accounts\\/\\d+$/) && method === 'DELETE':\n                        return deleteUser();\n                    default:\n                        // pass through any requests not handled above\n                        return realFetch(url, opts)\n                            .then((response) => resolve(response))\n                            .catch((error) => reject(error));\n                }\n            }\n\n            // route functions\n\n            function authenticate() {\n                const { email, password } = body();\n                const user = users.find((x) => x.email === email && x.password === password && x.isVerified);\n\n                if (!user) return error('Email or password is incorrect');\n\n                // add refresh token to user\n                user.refreshTokens.push(generateRefreshToken());\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok({\n                    id: user.id,\n                    email: user.email,\n                    title: user.title,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    role: user.role,\n                    jwtToken: generateJwtToken(user),\n                });\n            }\n\n            function refreshToken() {\n                const refreshToken = getRefreshToken();\n\n                if (!refreshToken) return unauthorized();\n\n                const user = users.find((x) => x.refreshTokens.includes(refreshToken));\n\n                if (!user) return unauthorized();\n\n                // replace old refresh token with a new one and save\n                user.refreshTokens = user.refreshTokens.filter((x) => x !== refreshToken);\n                user.refreshTokens.push(generateRefreshToken());\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok({\n                    id: user.id,\n                    email: user.email,\n                    title: user.title,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    role: user.role,\n                    jwtToken: generateJwtToken(user),\n                });\n            }\n\n            function revokeToken() {\n                if (!isAuthenticated()) return unauthorized();\n\n                const refreshToken = getRefreshToken();\n                const user = users.find((x) => x.refreshTokens.includes(refreshToken));\n\n                // revoke token and save\n                user.refreshTokens = user.refreshTokens.filter((x) => x !== refreshToken);\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok();\n            }\n\n            function register() {\n                const user = body();\n\n                if (users.find((x) => x.email === user.email)) {\n                    // display email already registered \"email\" in alert\n                    setTimeout(() => {\n                        alertService.info(\n                            `\n                            <h4>Email Already Registered</h4>\n                            <p>Your email ${user.email} is already registered.</p>\n                            <p>If you don't know your password please visit the <a href=\"${window.location.origin}/account/forgot-password\">forgot password</a> page.</p>\n                            <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                        `,\n                            { autoClose: false }\n                        );\n                    }, 1000);\n\n                    // always return ok() response to prevent email enumeration\n                    return ok();\n                }\n\n                // assign user id and a few other properties then save\n                user.id = newUserId();\n                if (user.id === 1) {\n                    // first registered user is an admin\n                    user.role = Role.Admin;\n                } else {\n                    user.role = Role.User;\n                }\n                user.dateCreated = new Date().toISOString();\n                user.verificationToken = new Date().getTime().toString();\n                user.isVerified = false;\n                user.refreshTokens = [];\n                delete user.confirmPassword;\n                users.push(user);\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                // display verification email in alert\n                setTimeout(() => {\n                    const verifyUrl = `${window.location.origin}/account/verify-email?token=${user.verificationToken}`;\n                    alertService.info(\n                        `\n                        <h4>Verification Email</h4>\n                        <p>Thanks for registering!</p>\n                        <p>Please click the below link to verify your email address:</p>\n                        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n                        <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                    `,\n                        { autoClose: false }\n                    );\n                }, 1000);\n\n                return ok();\n            }\n\n            function verifyEmail() {\n                const { token } = body();\n                const user = users.find((x) => !!x.verificationToken && x.verificationToken === token);\n\n                if (!user) return error('Verification failed');\n\n                // set is verified flag to true if token is valid\n                user.isVerified = true;\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok();\n            }\n\n            function forgotPassword() {\n                const { email } = body();\n                const user = users.find((x) => x.email === email);\n\n                // always return ok() response to prevent email enumeration\n                if (!user) return ok();\n\n                // create reset token that expires after 24 hours\n                user.resetToken = new Date().getTime().toString();\n                user.resetTokenExpires = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString();\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                // display password reset email in alert\n                setTimeout(() => {\n                    const resetUrl = `${window.location.origin}/account/reset-password?token=${user.resetToken}`;\n                    alertService.info(\n                        `\n                        <h4>Reset Password Email</h4>\n                        <p>Please click the below link to reset your password, the link will be valid for 1 day:</p>\n                        <p><a href=\"${resetUrl}\">${resetUrl}</a></p>\n                        <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                    `,\n                        { autoClose: false }\n                    );\n                }, 1000);\n\n                return ok();\n            }\n\n            function validateResetToken() {\n                const { token } = body();\n                const user = users.find(\n                    (x) => !!x.resetToken && x.resetToken === token && new Date() < new Date(x.resetTokenExpires)\n                );\n\n                if (!user) return error('Invalid token');\n\n                return ok();\n            }\n\n            function resetPassword() {\n                const { token, password } = body();\n                const user = users.find(\n                    (x) => !!x.resetToken && x.resetToken === token && new Date() < new Date(x.resetTokenExpires)\n                );\n\n                if (!user) return error('Invalid token');\n\n                // update password and remove reset token\n                user.password = password;\n                user.isVerified = true;\n                delete user.resetToken;\n                delete user.resetTokenExpires;\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok();\n            }\n\n            function getUsers() {\n                if (!isAuthorized(Role.Admin)) return unauthorized();\n\n                return ok(users);\n            }\n\n            function getUserById() {\n                if (!isAuthenticated()) return unauthorized();\n\n                let user = users.find((x) => x.id === idFromUrl());\n\n                // users can get own profile and admins can get all profiles\n                if (user.id !== currentUser().id && !isAuthorized(Role.Admin)) {\n                    return unauthorized();\n                }\n\n                return ok(user);\n            }\n\n            function createUser() {\n                if (!isAuthorized(Role.Admin)) return unauthorized();\n\n                const user = body();\n                if (users.find((x) => x.email === user.email)) {\n                    return error(`Email ${user.email} is already registered`);\n                }\n\n                // assign user id and a few other properties then save\n                user.id = newUserId();\n                user.dateCreated = new Date().toISOString();\n                user.isVerified = true;\n                user.refreshTokens = [];\n                delete user.confirmPassword;\n                users.push(user);\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok();\n            }\n\n            function updateUser() {\n                if (!isAuthenticated()) return unauthorized();\n\n                let params = body();\n                let user = users.find((x) => x.id === idFromUrl());\n\n                // users can update own profile and admins can update all profiles\n                if (user.id !== currentUser().id && !isAuthorized(Role.Admin)) {\n                    return unauthorized();\n                }\n\n                // only update password if included\n                if (!params.password) {\n                    delete params.password;\n                }\n                // don't save confirm password\n                delete params.confirmPassword;\n\n                // update and save user\n                Object.assign(user, params);\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok({\n                    id: user.id,\n                    email: user.email,\n                    title: user.title,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    role: user.role,\n                });\n            }\n\n            function deleteUser() {\n                if (!isAuthenticated()) return unauthorized();\n\n                let user = users.find((x) => x.id === idFromUrl());\n\n                // users can delete own account and admins can delete any account\n                if (user.id !== currentUser().id && !isAuthorized(Role.Admin)) {\n                    return unauthorized();\n                }\n\n                // delete user then save\n                users = users.filter((x) => x.id !== idFromUrl());\n                localStorage.setItem(usersKey, JSON.stringify(users));\n                return ok();\n            }\n\n            // helper functions\n\n            function ok(body) {\n                resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) });\n            }\n\n            function unauthorized() {\n                resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorized' })) });\n            }\n\n            function error(message) {\n                resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) });\n            }\n\n            function isAuthenticated() {\n                return !!currentUser();\n            }\n\n            function isAuthorized(role) {\n                const user = currentUser();\n                if (!user) return false;\n                return user.role === role;\n            }\n\n            function idFromUrl() {\n                const urlParts = url.split('/');\n                return parseInt(urlParts[urlParts.length - 1]);\n            }\n\n            function body() {\n                return opts.body && JSON.parse(opts.body);\n            }\n\n            function newUserId() {\n                return users.length ? Math.max(...users.map((x) => x.id)) + 1 : 1;\n            }\n\n            function generateJwtToken(user) {\n                // create token that expires in 15 minutes\n                const tokenPayload = {\n                    exp: Math.round(new Date(Date.now() + 15 * 60 * 1000).getTime() / 1000),\n                    id: user.id,\n                };\n                return `fake-jwt-token.${btoa(JSON.stringify(tokenPayload))}`;\n            }\n\n            function currentUser() {\n                // check if jwt token is in auth header\n                const authHeader = opts.headers['Authorization'] || '';\n                if (!authHeader.startsWith('Bearer fake-jwt-token')) return;\n\n                // check if token is expired\n                const jwtToken = JSON.parse(atob(authHeader.split('.')[1]));\n                const tokenExpired = Date.now() > jwtToken.exp * 1000;\n                if (tokenExpired) return;\n\n                const user = users.find((x) => x.id === jwtToken.id);\n                return user;\n            }\n\n            function generateRefreshToken() {\n                const token = new Date().getTime().toString();\n\n                // add token cookie that expires in 7 days\n                const expires = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toUTCString();\n                document.cookie = `fakeRefreshToken=${token}; expires=${expires}; path=/`;\n\n                return token;\n            }\n\n            function getRefreshToken() {\n                // get refresh token from cookie\n                return (document.cookie.split(';').find((x) => x.includes('fakeRefreshToken')) || '=').split('=')[1];\n            }\n        });\n    };\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { accountService, alertService } from \"../services\";\n\nfunction VerifyEmail({ history }) {\n  const EmailStatus = {\n    Verifying: \"Verifying\",\n    Failed: \"Failed\",\n  };\n\n  const emailStatus = EmailStatus.Verifying;\n\n  useEffect(() => {\n    const { token } = queryString.parse(location.search);\n    // remove token from url to prevent http referer leakage\n    history.replace(location.pathname);\n    const RemoveKoken = async () => {\n      await accountService.verifyEmail(token);\n\n      console.log(\" verify token\");\n      alertService.success(\"Verification successful, you can now login\", { keepAfterRouteChange: true });\n      history.push(\"/signin\");\n    }; // end RemoveKoken func\n    RemoveKoken();\n  }, []);\n\n  function getBody() {\n    switch (emailStatus) {\n      case EmailStatus.Verifying:\n        return <div>Verifying...</div>;\n      case EmailStatus.Failed:\n        return (\n          <div>\n            Verification failed, you can also verify your account using the{\" \"}\n            <Link to='forgot-password'>forgot password</Link> page.\n          </div>\n        );\n    }\n  }\n\n  return (\n    <>\n      <h3 className='card-header'>Verify Email</h3>\n      <div className='card-body'>{getBody()}</div>\n    </>\n  );\n}\n\nexport { VerifyEmail };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n// import { accountService, alertService } from '@/_services';\nimport { accountService, alertService } from '../services';\n\nfunction ForgotPassword() {\n    const initialValues = {\n        email: ''\n    };\n\n    const validationSchema = Yup.object().shape({\n        email: Yup.string()\n            .email('Email is invalid')\n            .required('Email is required')\n    });\n\n    function onSubmit({ email }, { setSubmitting }) {\n        alertService.clear();\n        accountService.forgotPassword(email)\n            .then(() => alertService.success('Please check your email for password reset instructions'))\n            .catch(error => alertService.error(error))\n            .finally(() => setSubmitting(false));\n    }\n\n    return (\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n            {({ errors, touched, isSubmitting }) => (\n                <Form>\n                    <h3 className=\"card-header\">Forgot Password</h3>\n                    <div className=\"card-body\">\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col\">\n                                <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\n                                    {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                                    Submit\n                                </button>\n                                <Link to=\"/signin\" className=\"btn btn-link\">Cancel</Link>\n                            </div>\n                        </div>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport { ForgotPassword };","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n// import { accountService, alertService } from '@/_services';\nimport { accountService, alertService } from '../services';\nfunction ResetPassword({ history }) {\n    const TokenStatus = {\n        Validating: 'Validating',\n        Valid: 'Valid',\n        Invalid: 'Invalid'\n    }\n\n    const [token, setToken] = useState(null);\n    const [tokenStatus, setTokenStatus] = useState(TokenStatus.Validating);\n\n    useEffect(() => {\n        const { token } = queryString.parse(window.location.search);\n\n        // remove token from url to prevent http referer leakage\n        history.replace(window.location.pathname);\n\n        accountService.validateResetToken(token)\n            .then(() => {\n                setToken(token);\n                setTokenStatus(TokenStatus.Valid);\n            })\n            .catch(() => {\n                setTokenStatus(TokenStatus.Invalid);\n            });\n    }, []);\n\n    function getForm() {\n        const initialValues = {\n            password: '',\n            confirmPassword: ''\n        };\n\n        const validationSchema = Yup.object().shape({\n            password: Yup.string()\n                .min(6, 'Password must be at least 6 characters')\n                .required('Password is required'),\n            confirmPassword: Yup.string()\n                .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                .required('Confirm Password is required'),\n        });\n\n        function onSubmit({ password, confirmPassword }, { setSubmitting }) {\n            alertService.clear();\n            accountService.resetPassword({ token, password, confirmPassword })\n                .then(() => {\n                    alertService.success('Password reset successful, you can now login', { keepAfterRouteChange: true });\n                    history.push('/signin');\n                })\n                .catch(error => {\n                    setSubmitting(false);\n                    alertService.error(error);\n                });\n        }\n\n        return (\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n                {({ errors, touched, isSubmitting }) => (\n                    <Form>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Confirm Password</label>\n                            <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col\">\n                                <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\n                                    {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                                    Reset Password\n                                </button>\n                                <Link to=\"/signin\" className=\"btn btn-link\">Cancel</Link>\n                            </div>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        );\n    }\n\n    function getBody() {\n        switch (tokenStatus) {\n            case TokenStatus.Valid:\n                return getForm();\n            case TokenStatus.Invalid:\n                return <div>Token validation failed, if the token has expired you can get a new one at the <Link to=\"forgot-password\">forgot password</Link> page.</div>;\n            case TokenStatus.Validating:\n                return <div>Validating token...</div>;\n        }\n    }\n\n    return (\n        <>\n            <h3 className=\"card-header\">Reset Password</h3>\n            <div className=\"card-body\">{getBody()}</div>\n        </>\n    )\n}\n\nexport { ResetPassword };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { accountService, alertService } from \"../services\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { login } from \"src/redux/auth/thunks\";\n\nconst baseUrl = `${\"https://www.togedoortestgo.site/graphql\"}/accounts`;\n\nfunction Login({ history, location }) {\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  function authHeader(url) {\n    // return auth header with jwt if user is logged in and request is to the api url\n    const user = accountService.userValue;\n    const isLoggedIn = user && user.jwtToken;\n    const isApiUrl = url.startsWith(\"https://www.togedoortestgo.site/graphql\");\n    if (isLoggedIn && isApiUrl) {\n      return { Authorization: `Bearer ${user.jwtToken}` };\n    } else {\n      return {};\n    }\n  }\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  function onSubmit({ email, password }, { setSubmitting }) {\n    alertService.clear();\n\n    const body = { email: email, password: password };\n    var config1 = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...authHeader(`${baseUrl}/authenticate`),\n      },\n    };\n\n    axios\n      .post(`${baseUrl}/authenticate`, body, config1)\n\n      .then((res) => {\n        console.log(\"after then\");\n        console.log(res);\n        login(res);\n        const { from } = location.state || { from: { pathname: \"/\" } };\n        history.push(from);\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        alertService.error(error);\n      });\n  }\n\n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {({ errors, touched, isSubmitting }) => (\n        <Form>\n          <h3 className='card-header'>Login</h3>\n          <div className='card-body'>\n            <div className='form-group'>\n              <label>Email</label>\n              <Field\n                name='email'\n                type='text'\n                className={\"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\")}\n              />\n              <ErrorMessage name='email' component='div' className='invalid-feedback' />\n            </div>\n            <div className='form-group'>\n              <label>Password</label>\n              <Field\n                name='password'\n                type='password'\n                className={\"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\")}\n              />\n              <ErrorMessage name='password' component='div' className='invalid-feedback' />\n            </div>\n            <div className='form-row'>\n              <div className='form-group col'>\n                <button type='submit' disabled={isSubmitting} className='btn btn-primary'>\n                  {isSubmitting && <span className='spinner-border spinner-border-sm mr-1'></span>}\n                  Login\n                </button>\n                <Link to='register' className='btn btn-link'>\n                  Register\n                </Link>\n              </div>\n              <div className='form-group col text-right'>\n                <Link to='forgot-password' className='btn btn-link pr-0'>\n                  Forgot Password?\n                </Link>\n              </div>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\n// export { Login };\n\n// Login.propTypes = {\n//     login: PropTypes.func.isRequired,\n//     isAuthenticated: PropTypes.bool,\n//   };\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { accountService, alertService } from \"../services\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"src/redux/auth/thunks\";\n\nfunction Register({ history, isAuthenticated }) {\n  const initialValues = {\n    title: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    location: \" \",\n    jobTitle: \" \",\n    aboutMe: \" \",\n    acceptTerms: false,\n    picture: 'https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=200&q=80'\n  };\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n    acceptTerms: Yup.bool().oneOf([true], \"Accept Terms & Conditions is required\"),\n  });\n\n  function onSubmit(fields, { setStatus, setSubmitting }) {\n    setStatus();\n    console.log('Registration successful');\n    console.log(fields);\n\n    accountService\n      .register(fields)\n      .then((res) => {\n        console.log('res in the register ');\n        console.log(res);\n        // Alert('ffffff')\n        // ...options, type: AlertType.Success, message })\n        alert(\"Registration successful, please check your email for verification instructions\")\n\n        alertService.success(\"Registration successful, please check your email for verification instructions\", {\n          keepAfterRouteChange: true,\n        });\n        // history.push(\"login\");\n        history.push(\"/signin\");\n        // return <Redirect to='/signin' />\n\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        alertService.error(error);\n      });\n  }\n  console.log(\"isAuthenticated\");\n  console.log(isAuthenticated);\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {({ errors, touched, isSubmitting }) => (\n        <Form>\n          <h3 className='card-header'>Register</h3>\n          <div className='card-body'>\n            <div className='form-row'>\n              <div className='form-group col'>\n                <label>Title</label>\n                <Field\n                  name='title'\n                  as='select'\n                  className={\"form-control\" + (errors.title && touched.title ? \" is-invalid\" : \"\")}>\n                  <option value=''></option>\n                  <option value='Mr'>Mr</option>\n                  <option value='Mrs'>Mrs</option>\n                  <option value='Miss'>Miss</option>\n                  <option value='Ms'>Ms</option>\n                </Field>\n                <ErrorMessage name='title' component='div' className='invalid-feedback' />\n              </div>\n              <div className='form-group col-5'>\n                <label>First Name</label>\n                <Field\n                  name='firstName'\n                  type='text'\n                  className={\"form-control\" + (errors.firstName && touched.firstName ? \" is-invalid\" : \"\")}\n                />\n                <ErrorMessage name='firstName' component='div' className='invalid-feedback' />\n              </div>\n              <div className='form-group col-5'>\n                <label>Last Name</label>\n                <Field\n                  name='lastName'\n                  type='text'\n                  className={\"form-control\" + (errors.lastName && touched.lastName ? \" is-invalid\" : \"\")}\n                />\n                <ErrorMessage name='lastName' component='div' className='invalid-feedback' />\n              </div>\n            </div>\n            <div className='form-group'>\n              <label>Email</label>\n              <Field\n                name='email'\n                type='text'\n                className={\"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\")}\n              />\n              <ErrorMessage name='email' component='div' className='invalid-feedback' />\n            </div>\n            <div className='form-row'>\n              <div className='form-group col'>\n                <label>Password</label>\n                <Field\n                  name='password'\n                  type='password'\n                  className={\"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\")}\n                />\n                <ErrorMessage name='password' component='div' className='invalid-feedback' />\n              </div>\n              <div className='form-group col'>\n                <label>Confirm Password</label>\n                <Field\n                  name='confirmPassword'\n                  type='password'\n                  className={\"form-control\" + (errors.confirmPassword && touched.confirmPassword ? \" is-invalid\" : \"\")}\n                />\n                <ErrorMessage name='confirmPassword' component='div' className='invalid-feedback' />\n              </div>\n            </div>\n            <div className='form-group form-check'>\n              <Field\n                type='checkbox'\n                name='acceptTerms'\n                id='acceptTerms'\n                className={\"form-check-input \" + (errors.acceptTerms && touched.acceptTerms ? \" is-invalid\" : \"\")}\n              />\n              <label htmlFor='acceptTerms' className='form-check-label'>\n                Accept Terms & Conditions\n              </label>\n              <ErrorMessage name='acceptTerms' component='div' className='invalid-feedback' />\n            </div>\n            <div className='form-group'>\n              <button type='submit' disabled={isSubmitting} className='btn btn-primary'>\n                {isSubmitting && <span className='spinner-border spinner-border-sm mr-1'></span>}\n                Register\n              </button>\n              <Link to='/' className='btn btn-link'>\n                Cancel\n              </Link>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { registerUser })(Register);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { VerifyEmail } from \"./VerifyEmail\";\nimport { ForgotPassword } from \"./ForgotPassword\";\nimport { ResetPassword } from \"./ResetPassword\";\nimport Login from \"./Login\";\nimport store from \"src/store\";\nimport Register from \"./Register\";\n\nfunction Account({ match }) {\n  const { path } = match;\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-sm-8 offset-sm-2 mt-5'>\n          <div className='card m-3'>\n            <Provider store={store}>\n              <Switch>\n                <Route path={`${path}/login`} component={Login} />\n                <Route path={`${path}/register`} component={Register} />\n                <Route path={`${path}/verify-email`} component={VerifyEmail} />\n                <Route path={`${path}/forgot-password`} component={ForgotPassword} />\n                <Route path={`${path}/reset-password`} component={ResetPassword} />\n              </Switch>\n            </Provider>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Account };\n","import React, { Suspense, lazy, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, withRouter, useLocation, Redirect } from 'react-router-dom';\nimport { StickyContainer } from 'react-sticky';\nimport 'src/assets/scss/style.scss';\nimport Newsletter from 'src/components/Newsletter';\nimport Fallback from 'src/components/Fallback';\nimport Header from 'src/components/Header';\nimport Footer from 'src/components/Footer';\nimport withTitle from 'src/components/TitleComponent';\nimport Chat from 'src/Chat/components/Chat';\nimport { Nav2 } from '../components/Nav';\nimport { accountService } from '../services/account.service';\nimport { Account } from '../account/Index';\nimport store from '../../store';\nimport axios from 'axios';\nimport { ForgotPassword } from '../../views/account/ForgotPassword';\n\nimport onSubmit from '../Signin'\n\nconst LayoutOne = lazy(() => import('../LayoutOne'));\nconst Blog = lazy(() => import('../Blog'));\nconst Candidate = lazy(() => import('../Candidate'));\nconst Employer = lazy(() => import('../Employer'));\nconst About = lazy(() => import('../About'));\nconst ContactUs = lazy(() => import('../ContactUs'));\nconst NotFound = lazy(() => import('../NotFound'));\nconst Pricing = lazy(() => import('../Pricing'));\nconst Company = lazy(() => import('../Company'));\nconst CompanyDetails = lazy(() => import('../CompanyDetails'));\nconst Job = lazy(() => import('../Job'));\n// const EditJobDetails = lazy(() => import('../Candidate/EditPost'));\nconst JobDetails = lazy(() => import('../JobDetails'));\nconst Signup = lazy(() => import('../SignUp'));\nconst Signin = lazy(() => import('../Signin'));\n\nconst App = () => {\n    const { pathname } = useLocation();\n\n    return (\n        <Router>\n            <StickyContainer>\n                <Header />\n                <Suspense fallback={<Fallback />}>\n                    <Switch>\n                        <Redirect from='/:url*(/+)' to={pathname.slice(0, -1)} />\n\n                        <Route path='/account' component={Account} />\n\n                        <Route\n                            exact\n                            path='/'\n                            render={(props) =>\n                                withTitle({\n                                    component: LayoutOne,\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/contactus'\n                            render={(props) =>\n                                withTitle({\n                                    component: ContactUs,\n                                    title: 'Contact us',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/about'\n                            render={(props) =>\n                                withTitle({\n                                    component: About,\n                                    title: 'About us',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/pricing'\n                            render={(props) =>\n                                withTitle({\n                                    component: Pricing,\n                                    title: 'Pricing plan',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/company'\n                            render={(props) =>\n                                withTitle({\n                                    component: Company,\n                                    title: 'Company',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/company/:userID'\n                            render={(props) =>\n                                withTitle({\n                                    component: CompanyDetails,\n                                    title: 'Company details',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/job'\n                            render={(props) =>\n                                withTitle({\n                                    component: Job,\n                                    title: 'Projects',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/job/:serviceID'\n                            render={(props) =>\n                                withTitle({\n                                    component: JobDetails,\n                                    title: 'Project details',\n                                    ...props,\n                                })\n                            }\n                        />\n                        {/* <Route\n                            exact\n                            path='/edit/:serviceID'\n                            render={(props) =>\n                                withTitle({\n                                    component: EditJobDetails,\n                                    title: 'Edit Project',\n                                    ...props,\n                                })\n                            }\n                        /> */}\n\n                        <Route\n                            exact\n                            path='/signin'\n                            render={(props) =>\n                                withTitle({\n                                    component: Signin,\n                                    title: 'Login',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/signup'\n                            render={(props) =>\n                                withTitle({\n                                    component: Signup,\n                                    title: 'Sign up',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/forget-Password'\n                            render={() =>\n                                withTitle({\n                                    component: ForgotPassword,\n                                    title: 'Forgot password',\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/chat/:id'\n                            render={(props) =>\n                                withTitle({\n                                    component: Chat,\n                                    title: 'Chat ',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        {/* Blog pages */}\n                        <Route path='/blog' component={Blog} />\n\n                        {/* Candidate pages */}\n                        <Route path='/candidate' component={Candidate} />\n\n                        {/* Candidate pages */}\n                        <Route path='/employer' component={Employer} />\n\n                        {/* Default 404 */}\n                        <Route\n                            render={(props) =>\n                                withTitle({\n                                    component: NotFound,\n                                    title: '404 Error',\n                                    ...props,\n                                })\n                            }\n                        />\n                    </Switch>\n                </Suspense>\n                {/* <Newsletter /> */}\n                {/* <Footer /> */}\n                {/* <Setting /> */}\n            </StickyContainer>\n        </Router>\n    );\n};\n\n\nexport default withRouter(App);\n\n///// login app\n\n// import React, { useState, useEffect } from 'react';\n// import { Route, Switch, Redirect, useLocation } from 'react-router-dom';\n\n// import { Role } from '@/_helpers';\n// import { accountService } from '@/_services';\n// import { Nav, PrivateRoute, Alert } from '@/_components';\n// import { Home } from '@/home';\n// import { Profile } from '@/profile';\n// import { Admin } from '@/admin';\n// import { Account } from '@/account';\n\n// function App() {\n//     const { pathname } = useLocation();\n//     const [user, setUser] = useState({});\n\n//     useEffect(() => {\n//         const subscription = accountService.user.subscribe(x => setUser(x));\n//         return subscription.unsubscribe;\n//     }, []);\n\n//     return (\n//         <div className={'app-container' + (user && ' bg-light')}>\n//             <Nav />\n//             <Alert />\n//             <Switch>\n//                 <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\n//                 <PrivateRoute exact path=\"/\" component={Home} />\n//                 <PrivateRoute path=\"/profile\" component={Profile} />\n//                 <PrivateRoute path=\"/admin\" roles={[Role.Admin]} component={Admin} />\n//                 <Route path=\"/account\" component={Account} />\n//                 <Redirect from=\"*\" to=\"/\" />\n//             </Switch>\n//         </div>\n//     );\n// }\n\n// export { App };\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from 'src/views/App';\n\nimport setAuthToken from './redux/utils/setAuthToken';\nimport { loadUser } from './redux/auth/thunks';\n\nimport { ConversationsProvider, useConversations } from './Chat/contexts/ConversationsProvider';\nimport { SocketProvider } from './Chat/contexts/SocketProvider';\nimport { ContactsProvider } from './Chat/contexts/ContactsProvider';\n\n// import configureStore from 'src/state/store';\n//  import client from 'src/config/client';\n// import { loadUser } from \"./redux/auth/thunks\";\n// import setAuthToken from \"./redux/utils/setAuthToken\";\nconst Container = () => {\n    // const reduxStore = configureStore(window.REDUX_INITIAL_DATA);\n    useEffect(() => {\n        if (localStorage.id !== undefined) {\n            setAuthToken(localStorage.token, localStorage.id);\n            store.dispatch(loadUser());\n        }\n    }, []);\n    const id = localStorage.getItem('id');\n    return (\n        <ContactsProvider>\n            <SocketProvider id={id}>\n                <ConversationsProvider>\n                    <Provider store={store}>\n                        <Router>\n                            <App />\n                        </Router>\n                    </Provider>\n                </ConversationsProvider>\n            </SocketProvider>\n        </ContactsProvider>\n\n    );\n};\n\nReactDOM.render(<Container />, document.getElementById('root'));\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nconst TitleComponent = ({ title }) => {\n\n  return (\n    <Helmet>\n      <title>{title ? `${title} - Togedoor` : 'Togedoor'}</title>\n    </Helmet>\n  );\n};\n\nconst withTitle = ({ component: Component, title, ...props }) => {\n  return (\n    <>\n      <TitleComponent title={title} />\n      <Component {...props} />\n    </>\n  );\n};\n\nexport default withTitle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div-contain\":\"LoginItem_div-contain__2EcFb\",\"headers\":\"LoginItem_headers__1Ittb\",\"bullets\":\"LoginItem_bullets__1bX8V\",\"uls\":\"LoginItem_uls__1LQgA\"};","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  EDIT_USER_FAIL,\n  EDIT_USER_SUCCESS,\n  EDIT_USER_REQUEST,\n  ACCOUNT_DELETED,\n} from \"./types\";\n\nconst userLoaded = (payload) => ({\n  type: USER_LOADED,\n  payload,\n});\n\nconst authError = () => ({\n  type: AUTH_ERROR,\n});\n\nconst registerSuccess = (payload) => ({\n  type: REGISTER_SUCCESS,\n  payload,\n});\n\nconst registerFail = () => ({\n  type: REGISTER_FAIL,\n});\n\nconst loginSuccess = (payload) => ({\n  type: LOGIN_SUCCESS,\n  payload,\n});\n\nconst loginFail = () => ({\n  type: LOGIN_FAIL,\n});\n\nconst editSuccess = () => ({\n  type: EDIT_USER_SUCCESS,\n});\n\nconst editFail = () => ({\n  type: EDIT_USER_FAIL,\n});\n\nconst editRequest = () => ({\n  type: EDIT_USER_REQUEST,\n});\nconst deleteAccount = () => ({\n  type: ACCOUNT_DELETED,\n});\n\nconst logout = () => ({ type: LOGOUT });\n\nexport {\n  logout,\n  loginFail,\n  loginSuccess,\n  registerFail,\n  registerSuccess,\n  authError,\n  userLoaded,\n  editFail,\n  editSuccess,\n  deleteAccount,\n  editRequest,\n};\n","import axios from 'axios';\nimport api from '../utils/api';\n\nimport {\n    userLoaded,\n    authError,\n    loginSuccess,\n    loginFail,\n    editFail,\n    editSuccess,\n    editRequest,\n} from './actions';\n\n\n\nconst token = localStorage.getItem('token');\n// Load User\nexport const loadUser = () => async (dispatch) => {\n    try {\n        var config1 = {\n            headers: {\n                'Authorization': token\n            }\n\n        };\n        const res = await api.get(`/${localStorage.id}`, config1);\n        dispatch(userLoaded(res.data));\n\n        console.log('success response:_', localStorage.id);\n    } catch (err) {\n        dispatch(authError());\n        // console.log('This Error from loadUser in `thunks.js`:');\n        throw err;\n    }\n};\n\n// Register User\nexport const registerUser = (formData) => async (dispatch) => {\n    // console.log(\"my form data:\", formData);\n    // try {\n    //   const res = await api.post(\"/accounts/register\", formData);\n    //   dispatch(registerSuccess(res.data));\n    //   dispatch(loadUser());\n    // } catch (err) {\n    //   const errors = err.response.data.errors;\n    //   if (errors) {\n    //     console.log(\"error\", errors);\n    //   }\n    //   dispatch(registerFail());\n    // }\n};\n\n\n// Login User\nexport const login = (email, password) => async (dispatch) => {\n    console.log('redux log func');\n    const body = { email, password };\n    console.log('body');\n    console.log(body);\n    try {\n        const res = await api.post('/authenticate', body);\n        console.log('LOGIN SUCCESS');\n        console.log('  reedux res');\n        console.log(' From login response');\n        console.log(res.data);\n        dispatch(loginSuccess(res.data));\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            console.log('error', errors);\n        }\n\n        dispatch(loginFail());\n    }\n};\n\nexport const ApiGoogle = (response) => async (dispatch) => {\n    console.log('new res google');\n\n    axios\n        .post('https://www.togedoortestgo.site/graphql/services/googlelogin', { tokenId: response.tokenId })\n        .then((res) => {\n            const response = res.data;\n            console.log(' From google response');\n            console.log(res);\n            console.log(response);\n            // localStorage.setItem(\"token\", response.token);\n            // window.location.reload(false);\n            // debugger\n            if (response) {\n                console.log('loaduser() in google');\n                dispatch(loginSuccess(response));\n                dispatch(loadUser());\n            } else {\n                dispatch(loginFail());\n            }\n        })\n        .catch((error) => {\n            dispatch(loginFail());\n            console.log(error);\n        });\n};\n\nexport const updateUser = (userID, formData) => async (dispatch) => {\n    console.log(userID, formData)\n    dispatch(editRequest());\n    try {\n        api.patch(`/${userID}`, formData);\n        console.log('UPDATE SUCCESSS------------------------------------');\n        dispatch(editSuccess(formData));\n        dispatch(loadUser);\n    } catch (err) {\n        dispatch(editFail());\n    }\n};\n\n// Logout\n","import {\n  REGISTER_SUCCESS,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  EDIT_USER_FAIL,\n  EDIT_USER_SUCCESS,\n  EDIT_USER_REQUEST,\n  ACCOUNT_DELETED,\n  LOGOUT,\n} from \"./types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case AUTH_ERROR:\n    case LOGOUT:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n      };\n    case EDIT_USER_SUCCESS:\n      return {\n        ...state,\n        user: payload,\n        loading: false,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case EDIT_USER_REQUEST:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case EDIT_USER_FAIL:\n      return {\n        ...state,\n      };\n    case ACCOUNT_DELETED:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth/reducers\";\n\nexport default combineReducers({\n  auth,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux';\n// import setAuthToken from \"./redux/utils/setAuthToken\";\nimport setAuthToken from './redux/utils/setAuthToken';\nconst initialState = {};\n\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nlet currentState = store.getState();\n\nstore.subscribe(() => {\n    let previousState = currentState;\n    currentState = store.getState();\n    if (previousState.auth.jwtToken !== currentState.auth.jwtToken) {\n        const token = currentState.auth.jwtToken;\n\n        const id = currentState.auth.id;\n        console.log('currentState.auth');\n        console.log(currentState.auth);\n        setAuthToken(token, id);\n    }\n    //   console.log(\"my current state :\", currentState);\n});\n\nexport default store;\n","import axios from \"axios\";\nimport store from \"../../store\";\nimport { LOGOUT } from \"../auth/types\";\n\nconst api = axios.create({\n  baseURL: \"https://www.togedoortestgo.site/graphql/accounts/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n/**\n intercept any error responses from the api\n and check if the token is no longer valid.\n ie. Token has expired\n logout the user if the token has expired\n**/\n\napi.interceptors.response.use(\n  (res) => res,\n  (err) => {\n    if (err.response.data.msg === \"Token is not valid\") {\n      store.dispatch({ type: LOGOUT });\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default api;\n"],"sourceRoot":""}